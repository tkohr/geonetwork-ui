(function () {
  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"], {
    /***/
    "../../libs/auth/src/index.ts":
    /*!****************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/auth/src/index.ts ***!
      \****************************************************************************/

    /*! exports provided: AuthService, AuthModule */

    /***/
    function libsAuthSrcIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./lib/auth.service */
      "../../libs/auth/src/lib/auth.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "AuthService", function () {
        return _lib_auth_service__WEBPACK_IMPORTED_MODULE_0__["AuthService"];
      });
      /* harmony import */


      var _lib_auth_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./lib/auth.module */
      "../../libs/auth/src/lib/auth.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "AuthModule", function () {
        return _lib_auth_module__WEBPACK_IMPORTED_MODULE_1__["AuthModule"];
      });
      /*
       * Public API Surface of lib-auth
       */

      /***/

    },

    /***/
    "../../libs/auth/src/lib/auth.module.ts":
    /*!**************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/auth/src/lib/auth.module.ts ***!
      \**************************************************************************************/

    /*! exports provided: AuthModule */

    /***/
    function libsAuthSrcLibAuthModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AuthModule", function () {
        return AuthModule;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

      var AuthModule = function AuthModule() {
        _classCallCheck(this, AuthModule);
      };

      AuthModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: AuthModule
      });
      AuthModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function AuthModule_Factory(t) {
          return new (t || AuthModule)();
        },
        imports: [[]]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AuthModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            declarations: [],
            imports: [],
            exports: []
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/auth/src/lib/auth.service.ts":
    /*!***************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/auth/src/lib/auth.service.ts ***!
      \***************************************************************************************/

    /*! exports provided: AuthService */

    /***/
    function libsAuthSrcLibAuthServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AuthService", function () {
        return AuthService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");

      var AuthService = /*#__PURE__*/function () {
        function AuthService(meApi) {
          _classCallCheck(this, AuthService);

          this.meApi = meApi;
        }

        _createClass(AuthService, [{
          key: "authReady",
          value: function authReady() {
            if (!this.authReady$) {
              this.authReady$ = this.meApi.getMe().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])({
                bufferSize: 1,
                refCount: true
              }));
            }

            return this.authReady$;
          }
        }]);

        return AuthService;
      }();

      AuthService.ɵfac = function AuthService_Factory(t) {
        return new (t || AuthService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["MeApiService"]));
      };

      AuthService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: AuthService,
        factory: AuthService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AuthService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["MeApiService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/catalog/src/index.ts":
    /*!*******************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/catalog/src/index.ts ***!
      \*******************************************************************************/

    /*! exports provided: LibCatalogModule */

    /***/
    function libsCatalogSrcIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_catalog_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./lib/catalog.module */
      "../../libs/catalog/src/lib/catalog.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LibCatalogModule", function () {
        return _lib_catalog_module__WEBPACK_IMPORTED_MODULE_0__["LibCatalogModule"];
      });
      /*
       * Public API Surface of catalog
       */

      /***/

    },

    /***/
    "../../libs/catalog/src/lib/catalog.module.ts":
    /*!********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/catalog/src/lib/catalog.module.ts ***!
      \********************************************************************************************/

    /*! exports provided: LibCatalogModule */

    /***/
    function libsCatalogSrcLibCatalogModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LibCatalogModule", function () {
        return LibCatalogModule;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _site_title_site_title_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./site-title/site-title.component */
      "../../libs/catalog/src/lib/site-title/site-title.component.ts");
      /* harmony import */


      var _lib_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @lib/ui */
      "../../libs/ui/src/index.ts");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      var LibCatalogModule = function LibCatalogModule() {
        _classCallCheck(this, LibCatalogModule);
      };

      LibCatalogModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: LibCatalogModule
      });
      LibCatalogModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function LibCatalogModule_Factory(t) {
          return new (t || LibCatalogModule)();
        },
        imports: [[_lib_ui__WEBPACK_IMPORTED_MODULE_2__["UiModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_3__["GnApiModule"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"]]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](LibCatalogModule, {
          declarations: [_site_title_site_title_component__WEBPACK_IMPORTED_MODULE_1__["SiteTitleComponent"]],
          imports: [_lib_ui__WEBPACK_IMPORTED_MODULE_2__["UiModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_3__["GnApiModule"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"]],
          exports: [_site_title_site_title_component__WEBPACK_IMPORTED_MODULE_1__["SiteTitleComponent"]]
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LibCatalogModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            declarations: [_site_title_site_title_component__WEBPACK_IMPORTED_MODULE_1__["SiteTitleComponent"]],
            imports: [_lib_ui__WEBPACK_IMPORTED_MODULE_2__["UiModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_3__["GnApiModule"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"]],
            exports: [_site_title_site_title_component__WEBPACK_IMPORTED_MODULE_1__["SiteTitleComponent"]]
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/catalog/src/lib/site-title/site-title.component.ts":
    /*!*************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/catalog/src/lib/site-title/site-title.component.ts ***!
      \*************************************************************************************************************/

    /*! exports provided: SiteTitleComponent */

    /***/
    function libsCatalogSrcLibSiteTitleSiteTitleComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SiteTitleComponent", function () {
        return SiteTitleComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _ui_src_lib_catalog_title_catalog_title_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../../../ui/src/lib/catalog-title/catalog-title.component */
      "../../libs/ui/src/lib/catalog-title/catalog-title.component.ts");

      function SiteTitleComponent_ui_catalog_title_0_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "ui-catalog-title", 1);
        }

        if (rf & 2) {
          var info_r1 = ctx.ngIf;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("name", info_r1["system/site/name"])("tooltip", info_r1["system/site/organization"]);
        }
      }

      var SiteTitleComponent = /*#__PURE__*/function () {
        function SiteTitleComponent(commonService) {
          _classCallCheck(this, SiteTitleComponent);

          this.commonService = commonService;
          this.info$ = commonService.siteInfoReady();
        }

        _createClass(SiteTitleComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return SiteTitleComponent;
      }();

      SiteTitleComponent.ɵfac = function SiteTitleComponent_Factory(t) {
        return new (t || SiteTitleComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_lib_common__WEBPACK_IMPORTED_MODULE_1__["BootstrapService"]));
      };

      SiteTitleComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: SiteTitleComponent,
        selectors: [["catalog-site-title"]],
        decls: 2,
        vars: 3,
        consts: [[3, "name", "tooltip", 4, "ngIf"], [3, "name", "tooltip"]],
        template: function SiteTitleComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, SiteTitleComponent_ui_catalog_title_0_Template, 1, 2, "ui-catalog-title", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "async");
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 1, ctx.info$));
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], _ui_src_lib_catalog_title_catalog_title_component__WEBPACK_IMPORTED_MODULE_3__["CatalogTitleComponent"]],
        pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["AsyncPipe"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2NhdGFsb2cvc3JjL2xpYi9zaXRlLXRpdGxlL3NpdGUtdGl0bGUuY29tcG9uZW50LmNzcyJ9 */"],
        changeDetection: 0
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SiteTitleComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'catalog-site-title',
            templateUrl: './site-title.component.html',
            styleUrls: ['./site-title.component.css'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], function () {
          return [{
            type: _lib_common__WEBPACK_IMPORTED_MODULE_1__["BootstrapService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/index.ts":
    /*!******************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/index.ts ***!
      \******************************************************************************/

    /*! no static exports found */

    /***/
    function libsCommonSrcIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./lib/services */
      "../../libs/common/src/lib/services/index.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "BootstrapService", function () {
        return _lib_services__WEBPACK_IMPORTED_MODULE_0__["BootstrapService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ColorService", function () {
        return _lib_services__WEBPACK_IMPORTED_MODULE_0__["ColorService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LogService", function () {
        return _lib_services__WEBPACK_IMPORTED_MODULE_0__["LogService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "MetadataUrlService", function () {
        return _lib_services__WEBPACK_IMPORTED_MODULE_0__["MetadataUrlService"];
      });
      /* harmony import */


      var _lib_common_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./lib/common.module */
      "../../libs/common/src/lib/common.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "CommonModule", function () {
        return _lib_common_module__WEBPACK_IMPORTED_MODULE_1__["CommonModule"];
      });
      /* harmony import */


      var _lib_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./lib/i18n */
      "../../libs/common/src/lib/i18n/index.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "I18nModule", function () {
        return _lib_i18n__WEBPACK_IMPORTED_MODULE_2__["I18nModule"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "DEFAULT_LANG", function () {
        return _lib_i18n__WEBPACK_IMPORTED_MODULE_2__["DEFAULT_LANG"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LANG_3_TO_2_MAPPER", function () {
        return _lib_i18n__WEBPACK_IMPORTED_MODULE_2__["LANG_3_TO_2_MAPPER"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LANG_2_TO_3_MAPPER", function () {
        return _lib_i18n__WEBPACK_IMPORTED_MODULE_2__["LANG_2_TO_3_MAPPER"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "HttpLoaderFactory", function () {
        return _lib_i18n__WEBPACK_IMPORTED_MODULE_2__["HttpLoaderFactory"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "TRANSLATE_DEFAULT_CONFIG", function () {
        return _lib_i18n__WEBPACK_IMPORTED_MODULE_2__["TRANSLATE_DEFAULT_CONFIG"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "TRANSLATE_GEONETWORK_CONFIG", function () {
        return _lib_i18n__WEBPACK_IMPORTED_MODULE_2__["TRANSLATE_GEONETWORK_CONFIG"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "I18nInterceptor", function () {
        return _lib_i18n__WEBPACK_IMPORTED_MODULE_2__["I18nInterceptor"];
      });
      /* harmony import */


      var _lib_models___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./lib/models/ */
      "../../libs/common/src/lib/models/index.ts");
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _lib_models___WEBPACK_IMPORTED_MODULE_3__) {
        if (["BootstrapService", "ColorService", "LogService", "MetadataUrlService", "CommonModule", "I18nModule", "DEFAULT_LANG", "LANG_3_TO_2_MAPPER", "LANG_2_TO_3_MAPPER", "HttpLoaderFactory", "TRANSLATE_DEFAULT_CONFIG", "TRANSLATE_GEONETWORK_CONFIG", "I18nInterceptor", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _lib_models___WEBPACK_IMPORTED_MODULE_3__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _lib_utils___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./lib/utils/ */
      "../../libs/common/src/lib/utils/index.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "PARSE_DELIMITER", function () {
        return _lib_utils___WEBPACK_IMPORTED_MODULE_4__["PARSE_DELIMITER"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "parse", function () {
        return _lib_utils___WEBPACK_IMPORTED_MODULE_4__["parse"];
      });
      /*
       * Public API Surface of lib-common
       */

      /***/

    },

    /***/
    "../../libs/common/src/lib/common.module.ts":
    /*!******************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/common.module.ts ***!
      \******************************************************************************************/

    /*! exports provided: CommonModule */

    /***/
    function libsCommonSrcLibCommonModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CommonModule", function () {
        return CommonModule;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

      var CommonModule = function CommonModule() {
        _classCallCheck(this, CommonModule);
      };

      CommonModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: CommonModule
      });
      CommonModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function CommonModule_Factory(t) {
          return new (t || CommonModule)();
        },
        imports: [[]]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CommonModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            declarations: [],
            imports: [],
            exports: []
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/lib/i18n/gn4.translate.loader.ts":
    /*!******************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/i18n/gn4.translate.loader.ts ***!
      \******************************************************************************************************/

    /*! exports provided: Gn4TranslateLoader */

    /***/
    function libsCommonSrcLibI18nGn4TranslateLoaderTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Gn4TranslateLoader", function () {
        return Gn4TranslateLoader;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");

      var Gn4TranslateLoader = /*#__PURE__*/function () {
        function Gn4TranslateLoader(toolsApiService) {
          _classCallCheck(this, Gn4TranslateLoader);

          this.toolsApiService = toolsApiService;
        }

        _createClass(Gn4TranslateLoader, [{
          key: "getTranslation",
          value: function getTranslation(lang) {
            // FIXME: need to filter translation with {{}} pattern
            // legacy from AngularJs, the api should handle it
            return this.toolsApiService.getTranslationsPackage1('gnui').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (json) {
              return Object.keys(json).reduce(function (translations, key) {
                var value = json[key];

                if (!value.includes(' {{')) {
                  translations[key] = value;
                }

                return translations;
              }, {});
            }));
          }
        }]);

        return Gn4TranslateLoader;
      }();

      Gn4TranslateLoader.ɵfac = function Gn4TranslateLoader_Factory(t) {
        return new (t || Gn4TranslateLoader)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["ToolsApiService"]));
      };

      Gn4TranslateLoader.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: Gn4TranslateLoader,
        factory: Gn4TranslateLoader.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Gn4TranslateLoader, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["ToolsApiService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/lib/i18n/i18n.constants.ts":
    /*!************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/i18n/i18n.constants.ts ***!
      \************************************************************************************************/

    /*! exports provided: DEFAULT_LANG, LANG_3_TO_2_MAPPER, LANG_2_TO_3_MAPPER, HttpLoaderFactory, TRANSLATE_DEFAULT_CONFIG, TRANSLATE_GEONETWORK_CONFIG */

    /***/
    function libsCommonSrcLibI18nI18nConstantsTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DEFAULT_LANG", function () {
        return DEFAULT_LANG;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LANG_3_TO_2_MAPPER", function () {
        return LANG_3_TO_2_MAPPER;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LANG_2_TO_3_MAPPER", function () {
        return LANG_2_TO_3_MAPPER;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "HttpLoaderFactory", function () {
        return HttpLoaderFactory;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "TRANSLATE_DEFAULT_CONFIG", function () {
        return TRANSLATE_DEFAULT_CONFIG;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "TRANSLATE_GEONETWORK_CONFIG", function () {
        return TRANSLATE_GEONETWORK_CONFIG;
      });
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ngx-translate/http-loader */
      "../../node_modules/@ngx-translate/http-loader/__ivy_ngcc__/fesm2015/ngx-translate-http-loader.js");
      /* harmony import */


      var ngx_translate_messageformat_compiler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ngx-translate-messageformat-compiler */
      "../../node_modules/ngx-translate-messageformat-compiler/__ivy_ngcc__/fesm2015/ngx-translate-messageformat-compiler.js");
      /* harmony import */


      var _gn4_translate_loader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./gn4.translate.loader */
      "../../libs/common/src/lib/i18n/gn4.translate.loader.ts");

      var DEFAULT_LANG = 'en';
      var LANG_3_TO_2_MAPPER = {
        eng: 'en',
        dut: 'nl',
        fre: 'fr',
        ger: 'de',
        kor: 'ko',
        spa: 'es',
        cze: 'cs',
        cat: 'ca',
        fin: 'fi',
        ice: 'is',
        ita: 'it',
        por: 'pt',
        rus: 'ru',
        chi: 'zh',
        slo: 'sk'
      };
      var LANG_2_TO_3_MAPPER = Object.entries(LANG_3_TO_2_MAPPER).reduce(function (mapperObject, langEntry) {
        return _objectSpread(_objectSpread({}, mapperObject), {}, _defineProperty({}, langEntry[1], langEntry[0]));
      }, {});

      function HttpLoaderFactory(http) {
        return new _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_3__["TranslateHttpLoader"](http, './assets/i18n/');
      }

      var TRANSLATE_DEFAULT_CONFIG = {
        loader: {
          provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateLoader"],
          useFactory: HttpLoaderFactory,
          defaultLanguage: DEFAULT_LANG,
          deps: [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]]
        }
      };
      var TRANSLATE_GEONETWORK_CONFIG = {
        compiler: {
          provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateCompiler"],
          useClass: ngx_translate_messageformat_compiler__WEBPACK_IMPORTED_MODULE_4__["TranslateMessageFormatCompiler"]
        },
        loader: {
          provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateLoader"],
          useClass: _gn4_translate_loader__WEBPACK_IMPORTED_MODULE_5__["Gn4TranslateLoader"],
          defaultLanguage: DEFAULT_LANG,
          deps: [_lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["ToolsApiService"]]
        }
      };
      /***/
    },

    /***/
    "../../libs/common/src/lib/i18n/i18n.interceptor.ts":
    /*!**************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/i18n/i18n.interceptor.ts ***!
      \**************************************************************************************************/

    /*! exports provided: I18nInterceptor */

    /***/
    function libsCommonSrcLibI18nI18nInterceptorTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "I18nInterceptor", function () {
        return I18nInterceptor;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _i18n_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./i18n.constants */
      "../../libs/common/src/lib/i18n/i18n.constants.ts");

      var I18nInterceptor = /*#__PURE__*/function () {
        function I18nInterceptor(translate) {
          _classCallCheck(this, I18nInterceptor);

          this.translate = translate;
        }

        _createClass(I18nInterceptor, [{
          key: "intercept",
          value: function intercept(request, next) {
            request = request.clone({
              setHeaders: {
                'Accept-Language': this.translate.currentLang || _i18n_constants__WEBPACK_IMPORTED_MODULE_2__["DEFAULT_LANG"]
              }
            });
            return next.handle(request);
          }
        }]);

        return I18nInterceptor;
      }();

      I18nInterceptor.ɵfac = function I18nInterceptor_Factory(t) {
        return new (t || I18nInterceptor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__["TranslateService"]));
      };

      I18nInterceptor.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: I18nInterceptor,
        factory: I18nInterceptor.ɵfac
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](I18nInterceptor, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
        }], function () {
          return [{
            type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__["TranslateService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/lib/i18n/i18n.module.ts":
    /*!*********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/i18n/i18n.module.ts ***!
      \*********************************************************************************************/

    /*! exports provided: I18nModule */

    /***/
    function libsCommonSrcLibI18nI18nModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "I18nModule", function () {
        return I18nModule;
      });
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _i18n_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./i18n.constants */
      "../../libs/common/src/lib/i18n/i18n.constants.ts");
      /* harmony import */


      var _i18n_interceptor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./i18n.interceptor */
      "../../libs/common/src/lib/i18n/i18n.interceptor.ts");

      var I18nModule = function I18nModule(translate) {
        _classCallCheck(this, I18nModule);

        translate.setDefaultLang(_i18n_constants__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_LANG"]);
        translate.use(_i18n_constants__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_LANG"]);
      };

      I18nModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: I18nModule
      });
      I18nModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        factory: function I18nModule_Factory(t) {
          return new (t || I18nModule)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"]));
        },
        providers: [{
          provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HTTP_INTERCEPTORS"],
          useClass: _i18n_interceptor__WEBPACK_IMPORTED_MODULE_5__["I18nInterceptor"],
          multi: true
        }],
        imports: [[_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClientModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_2__["GnApiModule"]], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](I18nModule, {
          imports: [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClientModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_2__["GnApiModule"]],
          exports: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"]]
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](I18nModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
          args: [{
            imports: [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClientModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_2__["GnApiModule"]],
            exports: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"]],
            providers: [{
              provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HTTP_INTERCEPTORS"],
              useClass: _i18n_interceptor__WEBPACK_IMPORTED_MODULE_5__["I18nInterceptor"],
              multi: true
            }]
          }]
        }], function () {
          return [{
            type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/lib/i18n/index.ts":
    /*!***************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/i18n/index.ts ***!
      \***************************************************************************************/

    /*! exports provided: I18nModule, DEFAULT_LANG, LANG_3_TO_2_MAPPER, LANG_2_TO_3_MAPPER, HttpLoaderFactory, TRANSLATE_DEFAULT_CONFIG, TRANSLATE_GEONETWORK_CONFIG, I18nInterceptor */

    /***/
    function libsCommonSrcLibI18nIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _i18n_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./i18n.module */
      "../../libs/common/src/lib/i18n/i18n.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "I18nModule", function () {
        return _i18n_module__WEBPACK_IMPORTED_MODULE_0__["I18nModule"];
      });
      /* harmony import */


      var _i18n_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./i18n.constants */
      "../../libs/common/src/lib/i18n/i18n.constants.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "DEFAULT_LANG", function () {
        return _i18n_constants__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_LANG"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LANG_3_TO_2_MAPPER", function () {
        return _i18n_constants__WEBPACK_IMPORTED_MODULE_1__["LANG_3_TO_2_MAPPER"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LANG_2_TO_3_MAPPER", function () {
        return _i18n_constants__WEBPACK_IMPORTED_MODULE_1__["LANG_2_TO_3_MAPPER"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "HttpLoaderFactory", function () {
        return _i18n_constants__WEBPACK_IMPORTED_MODULE_1__["HttpLoaderFactory"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "TRANSLATE_DEFAULT_CONFIG", function () {
        return _i18n_constants__WEBPACK_IMPORTED_MODULE_1__["TRANSLATE_DEFAULT_CONFIG"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "TRANSLATE_GEONETWORK_CONFIG", function () {
        return _i18n_constants__WEBPACK_IMPORTED_MODULE_1__["TRANSLATE_GEONETWORK_CONFIG"];
      });
      /* harmony import */


      var _i18n_interceptor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./i18n.interceptor */
      "../../libs/common/src/lib/i18n/i18n.interceptor.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "I18nInterceptor", function () {
        return _i18n_interceptor__WEBPACK_IMPORTED_MODULE_2__["I18nInterceptor"];
      });
      /***/

    },

    /***/
    "../../libs/common/src/lib/models/elasticsearch.model.ts":
    /*!*******************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/models/elasticsearch.model.ts ***!
      \*******************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsCommonSrcLibModelsElasticsearchModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/common/src/lib/models/facets.model.ts":
    /*!************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/models/facets.model.ts ***!
      \************************************************************************************************/

    /*! exports provided: AggregationsTypesEnum */

    /***/
    function libsCommonSrcLibModelsFacetsModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AggregationsTypesEnum", function () {
        return AggregationsTypesEnum;
      });

      var AggregationsTypesEnum;

      (function (AggregationsTypesEnum) {
        AggregationsTypesEnum["TERMS"] = "terms";
        AggregationsTypesEnum["HISTOGRAM"] = "histogram";
        AggregationsTypesEnum["FILTERS"] = "filters";
        AggregationsTypesEnum["DATE_HISTOGRAM"] = "date_histogram";
      })(AggregationsTypesEnum || (AggregationsTypesEnum = {}));
      /***/

    },

    /***/
    "../../libs/common/src/lib/models/index.ts":
    /*!*****************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/models/index.ts ***!
      \*****************************************************************************************/

    /*! no static exports found */

    /***/
    function libsCommonSrcLibModelsIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _facets_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./facets.model */
      "../../libs/common/src/lib/models/facets.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "AggregationsTypesEnum", function () {
        return _facets_model__WEBPACK_IMPORTED_MODULE_0__["AggregationsTypesEnum"];
      });
      /* harmony import */


      var _search_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./search.model */
      "../../libs/common/src/lib/models/search.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ResultsListLayout", function () {
        return _search_model__WEBPACK_IMPORTED_MODULE_1__["ResultsListLayout"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RESULTS_PAGE_SIZE", function () {
        return _search_model__WEBPACK_IMPORTED_MODULE_1__["RESULTS_PAGE_SIZE"];
      });
      /* harmony import */


      var _elasticsearch_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./elasticsearch.model */
      "../../libs/common/src/lib/models/elasticsearch.model.ts");
      /* harmony import */


      var _elasticsearch_model__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_elasticsearch_model__WEBPACK_IMPORTED_MODULE_2__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _elasticsearch_model__WEBPACK_IMPORTED_MODULE_2__) {
        if (["AggregationsTypesEnum", "ResultsListLayout", "RESULTS_PAGE_SIZE", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _elasticsearch_model__WEBPACK_IMPORTED_MODULE_2__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _infinite_scroll_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./infinite-scroll.model */
      "../../libs/common/src/lib/models/infinite-scroll.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "InfiniteScrollOptionsDefault", function () {
        return _infinite_scroll_model__WEBPACK_IMPORTED_MODULE_3__["InfiniteScrollOptionsDefault"];
      });
      /***/

    },

    /***/
    "../../libs/common/src/lib/models/infinite-scroll.model.ts":
    /*!*********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/models/infinite-scroll.model.ts ***!
      \*********************************************************************************************************/

    /*! exports provided: InfiniteScrollOptionsDefault */

    /***/
    function libsCommonSrcLibModelsInfiniteScrollModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "InfiniteScrollOptionsDefault", function () {
        return InfiniteScrollOptionsDefault;
      });

      var InfiniteScrollOptionsDefault = {
        distance: 1,
        upDistance: 2,
        throttle: 300,
        disabled: false
      };
      /***/
    },

    /***/
    "../../libs/common/src/lib/models/search.model.ts":
    /*!************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/models/search.model.ts ***!
      \************************************************************************************************/

    /*! exports provided: ResultsListLayout, RESULTS_PAGE_SIZE */

    /***/
    function libsCommonSrcLibModelsSearchModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResultsListLayout", function () {
        return ResultsListLayout;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RESULTS_PAGE_SIZE", function () {
        return RESULTS_PAGE_SIZE;
      });

      var ResultsListLayout;

      (function (ResultsListLayout) {
        ResultsListLayout["CARD"] = "CARD";
        ResultsListLayout["LIST"] = "LIST";
        ResultsListLayout["TEXT"] = "TEXT";
        ResultsListLayout["TITLE"] = "TITLE";
      })(ResultsListLayout || (ResultsListLayout = {}));

      var RESULTS_PAGE_SIZE = 20;
      /***/
    },

    /***/
    "../../libs/common/src/lib/services/bootstrap.service.ts":
    /*!*******************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/services/bootstrap.service.ts ***!
      \*******************************************************************************************************/

    /*! exports provided: BootstrapService */

    /***/
    function libsCommonSrcLibServicesBootstrapServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "BootstrapService", function () {
        return BootstrapService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var _log_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./log.service */
      "../../libs/common/src/lib/services/log.service.ts");
      /* harmony import */


      var _constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./constant */
      "../../libs/common/src/lib/services/constant.ts");

      var BootstrapService = /*#__PURE__*/function () {
        function BootstrapService(siteApiService, logService, uiService) {
          _classCallCheck(this, BootstrapService);

          this.siteApiService = siteApiService;
          this.logService = logService;
          this.uiService = uiService;
          this.uiConfigurations = {};
        }

        _createClass(BootstrapService, [{
          key: "siteInfoReady",
          value: function siteInfoReady() {
            return this.siteApiService.getSiteOrPortalDescription().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["shareReplay"])());
          }
        }, {
          key: "settingsReady",
          value: function settingsReady() {
            return this.siteApiService.getSettingsSet().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["shareReplay"])());
          }
          /**
           * Adapt GeoNetwork current UI config to Angular app UI config.
           * At some point this should be removed and converge to the same.
           *
           * TODO Changes are:
           * * Aggregation / Move GN specific config properties to the meta tag
           * (the meta tag is returned by Elasticsearch)
           */

        }, {
          key: "buildConfig",
          value: function buildConfig(configString) {
            var config = typeof configString === 'string' ? JSON.parse(configString) : configString;
            var aggs = config.mods.search.facetConfig;
            var aggsPropertyToMoveToMeta = ['userHasRole', 'collapsed'];
            Object.keys(aggs).map(function (key) {
              aggsPropertyToMoveToMeta.map(function (property) {
                if (aggs[key].hasOwnProperty(property)) {
                  var o = _objectSpread({}, aggs[key].meta);

                  o[property] = aggs[key][property];
                  aggs[key].meta = o;
                  delete aggs[key][property];
                }
              });
            });
            return config;
          }
        }, {
          key: "uiConfReady",
          value: function uiConfReady(uiIdentifier) {
            var _this = this;

            if (!this.uiConfigurations[uiIdentifier]) {
              this.uiConfigurations = _objectSpread(_objectSpread({}, this.uiConfigurations), {}, _defineProperty({}, uiIdentifier, this.uiService.getUiConfiguration(uiIdentifier).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["pluck"])('configuration'), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (configString) {
                return _this.buildConfig(configString);
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) {
                _this.logService.warn("Error during UI configuration loading: ".concat(uiIdentifier, ". Using default."));

                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(_this.buildConfig(_constant__WEBPACK_IMPORTED_MODULE_5__["DEFAULT_UI_CONFIG"]));
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["shareReplay"])())));
            }

            return this.uiConfigurations[uiIdentifier];
          }
        }]);

        return BootstrapService;
      }();

      BootstrapService.ɵfac = function BootstrapService_Factory(t) {
        return new (t || BootstrapService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["SiteApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_log_service__WEBPACK_IMPORTED_MODULE_4__["LogService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["UiApiService"]));
      };

      BootstrapService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: BootstrapService,
        factory: BootstrapService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BootstrapService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["SiteApiService"]
          }, {
            type: _log_service__WEBPACK_IMPORTED_MODULE_4__["LogService"]
          }, {
            type: _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["UiApiService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/lib/services/color.service.ts":
    /*!***************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/services/color.service.ts ***!
      \***************************************************************************************************/

    /*! exports provided: ColorService */

    /***/
    function libsCommonSrcLibServicesColorServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ColorService", function () {
        return ColorService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var chroma_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! chroma-js */
      "../../node_modules/chroma-js/chroma.js");
      /* harmony import */


      var chroma_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(chroma_js__WEBPACK_IMPORTED_MODULE_1__);

      var ColorService = /*#__PURE__*/function () {
        function ColorService() {
          _classCallCheck(this, ColorService);
        }

        _createClass(ColorService, null, [{
          key: "getColor",
          value: function getColor(name) {
            return document.documentElement.style.getPropertyValue("--color-".concat(name));
          }
        }, {
          key: "applyCssVariables",
          value: function applyCssVariables(primary, secondary, main, background) {
            var applyColor = function applyColor(name, color) {
              document.documentElement.style.setProperty("--color-".concat(name), color.css());
            };

            var black = chroma_js__WEBPACK_IMPORTED_MODULE_1___default()('black');
            var white = chroma_js__WEBPACK_IMPORTED_MODULE_1___default()('white');
            applyColor('primary', chroma_js__WEBPACK_IMPORTED_MODULE_1___default()(primary));
            applyColor('primary-lighter', chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([primary, white]).mode('lab')(0.3));
            applyColor('primary-lightest', chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([primary, white]).mode('lab')(0.6));
            applyColor('primary-darker', chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([primary, black]).mode('lab')(0.3));
            applyColor('primary-darkest', chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([primary, black]).mode('lab')(0.6));
            applyColor('secondary', chroma_js__WEBPACK_IMPORTED_MODULE_1___default()(secondary));
            applyColor('secondary-lighter', chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([secondary, white]).mode('lab')(0.3));
            applyColor('secondary-lightest', chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([secondary, white]).mode('lab')(0.6));
            applyColor('secondary-darker', chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([secondary, black]).mode('lab')(0.3));
            applyColor('secondary-darkest', chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([secondary, black]).mode('lab')(0.6));
            applyColor('main', chroma_js__WEBPACK_IMPORTED_MODULE_1___default()(main));
            applyColor('background', chroma_js__WEBPACK_IMPORTED_MODULE_1___default()(background));
            var scale = chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.scale([background, main]).mode('lrgb');
            applyColor('gray-100', scale(0.1));
            applyColor('gray-200', scale(0.2));
            applyColor('gray-300', scale(0.3));
            applyColor('gray-400', scale(0.4));
            applyColor('gray-500', scale(0.5));
            applyColor('gray-600', scale(0.6));
            applyColor('gray-700', scale(0.7));
            applyColor('gray-800', scale(0.8));
            applyColor('gray-900', scale(0.9));
          }
        }, {
          key: "generateLabelColor",
          value: function generateLabelColor(label, saturation, lightness) {
            var hue = 0;

            for (var i = 0; i < label.length; i++) {
              hue += label.charCodeAt(i);
            }

            return chroma_js__WEBPACK_IMPORTED_MODULE_1___default.a.hsl(hue % 360, saturation, lightness);
          }
        }]);

        return ColorService;
      }();

      ColorService.ɵfac = function ColorService_Factory(t) {
        return new (t || ColorService)();
      };

      ColorService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: ColorService,
        factory: ColorService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ColorService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/lib/services/constant.ts":
    /*!**********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/services/constant.ts ***!
      \**********************************************************************************************/

    /*! exports provided: DEFAULT_UI_CONFIG */

    /***/
    function libsCommonSrcLibServicesConstantTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DEFAULT_UI_CONFIG", function () {
        return DEFAULT_UI_CONFIG;
      });

      var DEFAULT_UI_CONFIG = {
        langDetector: {
          fromHtmlTag: false,
          regexp: '^(?:/.+)?/.+/([a-z]{2,3})/.+',
          "default": 'eng'
        },
        nodeDetector: {
          regexp: '^(?:/.+)?/(.+)/[a-z]{2,3}/.+',
          "default": 'srv'
        },
        serviceDetector: {
          regexp: '^(?:/.+)?/.+/[a-z]{2,3}/(.+)',
          "default": 'catalog.search'
        },
        baseURLDetector: {
          regexp: '^((?:/.+)?)+/.+/[a-z]{2,3}/.+',
          "default": '/geonetwork'
        },
        mods: {
          global: {
            humanizeDates: true,
            dateFormat: 'YYYY-MM-DD'
          },
          footer: {
            enabled: true,
            showSocialBarInFooter: true
          },
          header: {
            enabled: true,
            languages: {
              eng: 'en',
              dut: 'nl',
              fre: 'fr',
              ger: 'de',
              kor: 'ko',
              spa: 'es',
              cze: 'cs',
              cat: 'ca',
              fin: 'fi',
              ice: 'is',
              ita: 'it',
              por: 'pt',
              rus: 'ru',
              chi: 'zh',
              slo: 'sk'
            },
            isLogoInHeader: false,
            logoInHeaderPosition: 'left',
            fluidHeaderLayout: true,
            showGNName: true,
            isHeaderFixed: false
          },
          cookieWarning: {
            enabled: true,
            cookieWarningMoreInfoLink: '',
            cookieWarningRejectLink: ''
          },
          home: {
            enabled: true,
            appUrl: '../../{{node}}/{{lang}}/catalog.search#/home',
            showSocialBarInFooter: true,
            fluidLayout: true,
            facetConfig: {
              inspireThemeUri: {
                terms: {
                  field: 'inspireThemeUri',
                  size: 34
                }
              },
              'cl_topic.key': {
                terms: {
                  field: 'cl_topic.key',
                  size: 20
                }
              },
              'cl_hierarchyLevel.key': {
                terms: {
                  field: 'cl_hierarchyLevel.key',
                  size: 10
                }
              }
            }
          },
          search: {
            enabled: true,
            appUrl: '../../{{node}}/{{lang}}/catalog.search#/search',
            hitsperpageValues: [30, 60, 120],
            paginationInfo: {
              hitsPerPage: 30
            },
            queryBase: 'any:(${any}) resourceTitleObject.default:(${any})^2',
            exactMatchToggle: true,
            scoreConfig: {
              boost: '5',
              functions: [{
                filter: {
                  exists: {
                    field: 'parentUuid'
                  }
                },
                weight: 0.3
              }, {
                filter: {
                  match: {
                    'cl_status.key': 'obsolete'
                  }
                },
                weight: 0.3
              }, {
                gauss: {
                  dateStamp: {
                    scale: '365d',
                    offset: '90d',
                    decay: 0.5
                  }
                }
              }],
              score_mode: 'multiply'
            },
            autocompleteConfig: {
              query: {
                bool: {
                  must: [{
                    multi_match: {
                      query: '',
                      type: 'bool_prefix',
                      fields: ['resourceTitleObject.*', 'resourceAbstractObject.*', 'tag', 'resourceIdentifier']
                    }
                  }]
                }
              },
              _source: ['resourceTitleObject'],
              from: 0,
              size: 20
            },
            moreLikeThisConfig: {
              more_like_this: {
                fields: ['resourceTitleObject.default', 'resourceAbstractObject.default', 'tag.raw'],
                like: null,
                min_term_freq: 1,
                max_query_terms: 12
              }
            },
            facetTabField: '',
            facetConfig: {
              'cl_hierarchyLevel.key': {
                terms: {
                  field: 'cl_hierarchyLevel.key'
                },
                aggs: {
                  format: {
                    terms: {
                      field: 'format'
                    }
                  }
                }
              },
              'cl_spatialRepresentationType.key': {
                terms: {
                  field: 'cl_spatialRepresentationType.key',
                  size: 10
                }
              },
              availableInServices: {
                filters: {
                  filters: {
                    availableInViewService: {
                      query_string: {
                        query: '+linkProtocol:/OGC:WMS.*/'
                      }
                    },
                    availableInDownloadService: {
                      query_string: {
                        query: '+linkProtocol:/OGC:WFS.*/'
                      }
                    }
                  }
                }
              },
              'th_gemet_tree.default': {
                terms: {
                  field: 'th_gemet_tree.default',
                  size: 100,
                  order: {
                    _key: 'asc'
                  },
                  include: '[^^]+^?[^^]+'
                }
              },
              'th_httpinspireeceuropaeumetadatacodelistPriorityDatasetPriorityDataset_tree.default': {
                terms: {
                  field: 'th_httpinspireeceuropaeumetadatacodelistPriorityDatasetPriorityDataset_tree.default',
                  size: 100,
                  order: {
                    _key: 'asc'
                  }
                }
              },
              'tag.default': {
                terms: {
                  field: 'tag.default',
                  include: '.*',
                  size: 10
                }
              },
              'th_regions_tree.default': {
                terms: {
                  field: 'th_regions_tree.default',
                  size: 100,
                  order: {
                    _key: 'asc'
                  }
                }
              },
              resolutionScaleDenominator: {
                collapsed: true,
                histogram: {
                  field: 'resolutionScaleDenominator',
                  interval: 10000,
                  keyed: true,
                  min_doc_count: 1
                }
              },
              creationYearForResource: {
                collapsed: true,
                histogram: {
                  field: 'creationYearForResource',
                  interval: 5,
                  keyed: true,
                  min_doc_count: 1
                }
              },
              OrgForResource: {
                terms: {
                  field: 'OrgForResource',
                  size: 15
                }
              },
              'cl_maintenanceAndUpdateFrequency.key': {
                collapsed: true,
                terms: {
                  field: 'cl_maintenanceAndUpdateFrequency.key',
                  size: 10
                }
              },
              'cl_status.key': {
                terms: {
                  field: 'cl_status.key',
                  size: 10
                }
              },
              dateStamp: {
                userHasRole: 'isReviewerOrMore',
                auto_date_histogram: {
                  field: 'dateStamp',
                  buckets: 50
                }
              }
            },
            filters: null,
            sortbyValues: [{
              sortBy: 'relevance',
              sortOrder: ''
            }, {
              sortBy: 'dateStamp',
              sortOrder: 'desc'
            }, {
              sortBy: 'createDate',
              sortOrder: 'desc'
            }, {
              sortBy: 'resourceTitleObject.default.keyword',
              sortOrder: ''
            }, {
              sortBy: 'rating',
              sortOrder: 'desc'
            }, {
              sortBy: 'popularity',
              sortOrder: 'desc'
            }],
            sortBy: 'relevance',
            resultViewTpls: [{
              tplUrl: '../../catalog/components/search/resultsview/partials/viewtemplates/grid.html',
              tooltip: 'Grid',
              icon: 'fa-th'
            }, {
              tplUrl: '../../catalog/components/search/resultsview/partials/viewtemplates/list.html',
              tooltip: 'List',
              icon: 'fa-bars'
            }],
            resultTemplate: '../../catalog/components/search/resultsview/partials/viewtemplates/grid.html',
            formatter: {
              list: [{
                label: 'defaultView',
                url: ''
              }, {
                label: 'full',
                url: '/formatters/xsl-view?root=div&view=advanced'
              }],
              defaultUrl: ''
            },
            downloadFormatter: [{
              label: 'exportMEF',
              url: '/formatters/zip?withRelated=false',
              "class": 'fa-file-zip-o'
            }, {
              label: 'exportPDF',
              url: '/formatters/xsl-view?output=pdf&language=${lang}',
              "class": 'fa-file-pdf-o'
            }, {
              label: 'exportXML',
              url: '/formatters/xml',
              "class": 'fa-file-code-o'
            }],
            grid: {
              related: ['parent', 'children', 'services', 'datasets']
            },
            linkTypes: {
              links: ['LINK', 'kml'],
              downloads: ['DOWNLOAD'],
              layers: ['OGC', 'ESRI:REST'],
              maps: ['ows']
            },
            isFilterTagsDisplayedInSearch: true,
            usersearches: {
              enabled: false,
              includePortals: true,
              displayFeaturedSearchesPanel: false
            },
            savedSelection: {
              enabled: false
            }
          },
          map: {
            enabled: true,
            appUrl: '../../{{node}}/{{lang}}/catalog.search#/map',
            externalViewer: {
              enabled: false,
              enabledViewAction: false,
              baseUrl: 'http://www.example.com/viewer',
              urlTemplate: 'http://www.example.com/viewer?url=${service.url}&type=${service.type}&layer=${service.title}&lang=${iso2lang}&title=${md.defaultTitle}',
              openNewWindow: false,
              valuesSeparator: ','
            },
            is3DModeAllowed: false,
            isSaveMapInCatalogAllowed: true,
            isExportMapAsImageEnabled: false,
            storage: 'sessionStorage',
            bingKey: '',
            listOfServices: {
              wms: [],
              wmts: []
            },
            projection: 'EPSG:3857',
            projectionList: [{
              code: 'urn:ogc:def:crs:EPSG:6.6:4326',
              label: 'WGS84 (EPSG:4326)'
            }, {
              code: 'EPSG:3857',
              label: 'Google mercator (EPSG:3857)'
            }],
            switcherProjectionList: [{
              code: 'EPSG:3857',
              label: 'Google mercator (EPSG:3857)'
            }],
            disabledTools: {
              processes: false,
              addLayers: false,
              projectionSwitcher: false,
              layers: false,
              legend: false,
              filter: false,
              contexts: false,
              print: false,
              mInteraction: false,
              graticule: false,
              mousePosition: true,
              syncAllLayers: false,
              drawVector: false
            },
            graticuleOgcService: {},
            'map-viewer': {
              context: '../../map/config-viewer.xml',
              extent: [0, 0, 0, 0],
              layers: []
            },
            'map-search': {
              context: '../../map/config-viewer.xml',
              extent: [0, 0, 0, 0],
              layers: []
            },
            'map-editor': {
              context: '',
              extent: [0, 0, 0, 0],
              layers: [{
                type: 'osm'
              }]
            },
            autoFitOnLayer: false
          },
          geocoder: {
            enabled: true,
            appUrl: 'https://secure.geonames.org/searchJSON'
          },
          recordview: {
            enabled: true,
            isSocialbarEnabled: true
          },
          editor: {
            enabled: true,
            appUrl: '../../{{node}}/{{lang}}/catalog.edit',
            isUserRecordsOnly: false,
            minUserProfileToCreateTemplate: '',
            isFilterTagsDisplayed: false,
            fluidEditorLayout: true,
            createPageTpl: '../../catalog/templates/editor/new-metadata-horizontal.html',
            editorIndentType: '',
            allowRemoteRecordLink: true,
            facetConfig: {
              resourceType: {
                terms: {
                  field: 'resourceType',
                  size: 20
                }
              },
              'cl_status.key': {
                terms: {
                  field: 'cl_status.key',
                  size: 15
                }
              },
              sourceCatalogue: {
                terms: {
                  field: 'sourceCatalogue',
                  size: 15
                }
              },
              isValid: {
                terms: {
                  field: 'isValid',
                  size: 10
                }
              },
              isValidInspire: {
                terms: {
                  field: 'isValidInspire',
                  size: 10
                }
              },
              groupOwner: {
                terms: {
                  field: 'groupOwner',
                  size: 10
                }
              },
              recordOwner: {
                terms: {
                  field: 'recordOwner',
                  size: 10
                }
              },
              groupPublished: {
                terms: {
                  field: 'groupPublished',
                  size: 10
                }
              },
              documentStandard: {
                terms: {
                  field: 'documentStandard',
                  size: 10
                }
              },
              isHarvested: {
                terms: {
                  field: 'isHarvested',
                  size: 2
                }
              },
              isTemplate: {
                terms: {
                  field: 'isTemplate',
                  size: 5
                }
              },
              isPublishedToAll: {
                terms: {
                  field: 'isPublishedToAll',
                  size: 2
                }
              }
            }
          },
          admin: {
            enabled: true,
            appUrl: '../../{{node}}/{{lang}}/admin.console'
          },
          signin: {
            enabled: true,
            appUrl: '../../{{node}}/{{lang}}/catalog.signin'
          },
          signout: {
            appUrl: '../../signout'
          },
          page: {
            enabled: true,
            appUrl: '../../{{node}}/{{lang}}/catalog.search#/page'
          }
        }
      };
      /***/
    },

    /***/
    "../../libs/common/src/lib/services/index.ts":
    /*!*******************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/services/index.ts ***!
      \*******************************************************************************************/

    /*! exports provided: BootstrapService, ColorService, LogService, MetadataUrlService */

    /***/
    function libsCommonSrcLibServicesIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _bootstrap_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./bootstrap.service */
      "../../libs/common/src/lib/services/bootstrap.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "BootstrapService", function () {
        return _bootstrap_service__WEBPACK_IMPORTED_MODULE_0__["BootstrapService"];
      });
      /* harmony import */


      var _color_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./color.service */
      "../../libs/common/src/lib/services/color.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ColorService", function () {
        return _color_service__WEBPACK_IMPORTED_MODULE_1__["ColorService"];
      });
      /* harmony import */


      var _log_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./log.service */
      "../../libs/common/src/lib/services/log.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LogService", function () {
        return _log_service__WEBPACK_IMPORTED_MODULE_2__["LogService"];
      });
      /* harmony import */


      var _metadata_url_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./metadata-url.service */
      "../../libs/common/src/lib/services/metadata-url.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "MetadataUrlService", function () {
        return _metadata_url_service__WEBPACK_IMPORTED_MODULE_3__["MetadataUrlService"];
      });
      /***/

    },

    /***/
    "../../libs/common/src/lib/services/log.service.ts":
    /*!*************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/services/log.service.ts ***!
      \*************************************************************************************************/

    /*! exports provided: LogService */

    /***/
    function libsCommonSrcLibServicesLogServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LogService", function () {
        return LogService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

      var LogService = /*#__PURE__*/function () {
        function LogService() {
          _classCallCheck(this, LogService);
        }

        _createClass(LogService, [{
          key: "log",
          value: function log(message) {
            for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              objects[_key - 1] = arguments[_key];
            }

            console.log.apply(this, [message].concat(objects));
          }
        }, {
          key: "warn",
          value: function warn(message) {
            for (var _len2 = arguments.length, objects = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              objects[_key2 - 1] = arguments[_key2];
            }

            console.warn.apply(this, [message].concat(objects));
          }
        }, {
          key: "error",
          value: function error(message) {
            for (var _len3 = arguments.length, objects = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
              objects[_key3 - 1] = arguments[_key3];
            }

            console.error.apply(this, [message].concat(objects));
          }
        }]);

        return LogService;
      }();

      LogService.ɵfac = function LogService_Factory(t) {
        return new (t || LogService)();
      };

      LogService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: LogService,
        factory: LogService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LogService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/lib/services/metadata-url.service.ts":
    /*!**********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/services/metadata-url.service.ts ***!
      \**********************************************************************************************************/

    /*! exports provided: MetadataUrlService */

    /***/
    function libsCommonSrcLibServicesMetadataUrlServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "MetadataUrlService", function () {
        return MetadataUrlService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _i18n_i18n_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../i18n/i18n.constants */
      "../../libs/common/src/lib/i18n/i18n.constants.ts");

      var DEFAULT_API_PATH = '/geonetwork/srv/api';

      var MetadataUrlService = /*#__PURE__*/function () {
        function MetadataUrlService(translate) {
          _classCallCheck(this, MetadataUrlService);

          this.translate = translate;
        }

        _createClass(MetadataUrlService, [{
          key: "getUrl",
          value: function getUrl(uuid) {
            var apiPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_API_PATH;
            var prefix = "".concat(apiPath, "/../");
            return "".concat(prefix).concat(_i18n_i18n_constants__WEBPACK_IMPORTED_MODULE_2__["LANG_2_TO_3_MAPPER"][this.translate.currentLang], "/catalog.search#/metadata/").concat(uuid);
          }
        }]);

        return MetadataUrlService;
      }();

      MetadataUrlService.ɵfac = function MetadataUrlService_Factory(t) {
        return new (t || MetadataUrlService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__["TranslateService"]));
      };

      MetadataUrlService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: MetadataUrlService,
        factory: MetadataUrlService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MetadataUrlService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__["TranslateService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/common/src/lib/utils/index.ts":
    /*!****************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/utils/index.ts ***!
      \****************************************************************************************/

    /*! exports provided: PARSE_DELIMITER, parse */

    /***/
    function libsCommonSrcLibUtilsIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./parse */
      "../../libs/common/src/lib/utils/parse.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "PARSE_DELIMITER", function () {
        return _parse__WEBPACK_IMPORTED_MODULE_0__["PARSE_DELIMITER"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "parse", function () {
        return _parse__WEBPACK_IMPORTED_MODULE_0__["parse"];
      });
      /***/

    },

    /***/
    "../../libs/common/src/lib/utils/parse.ts":
    /*!****************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/common/src/lib/utils/parse.ts ***!
      \****************************************************************************************/

    /*! exports provided: PARSE_DELIMITER, parse */

    /***/
    function libsCommonSrcLibUtilsParseTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "PARSE_DELIMITER", function () {
        return PARSE_DELIMITER;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "parse", function () {
        return parse;
      });
      /*
       * Implement AngularJS $parse
       * delimiter is `^^^^` cause object properties can contain `.`
       */


      var PARSE_DELIMITER = '^^^';

      var parse = function parse(path) {
        var fn = function fn(obj) {
          var paths = path.split(PARSE_DELIMITER);
          var current = obj;

          var _iterator = _createForOfIteratorHelper(paths),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var token = _step.value;

              if (current[token] === undefined) {
                return undefined;
              } else {
                current = current[token];
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          return current;
        };

        fn.assign = function (obj, value) {
          var paths = path.split(PARSE_DELIMITER);
          var current = obj;

          for (var i = 0; i < paths.length - 1; ++i) {
            if (current[paths[i]] === undefined) {
              current[paths[i]] = {};
            }

            current = current[paths[i]];
          }

          current[paths[paths.length - 1]] = value;
        };

        return fn;
      };
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/fixtures/index.ts":
    /*!***********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/fixtures/index.ts ***!
      \***********************************************************************************************/

    /*! exports provided: SITE_FIXTURES, SETTINGS_FIXTURES, UI_FIXTURES */

    /***/
    function libsGnApiSrcLibGn4FixturesIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _site_fixtures__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./site.fixtures */
      "../../libs/gn-api/src/lib/gn4/fixtures/site.fixtures.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SITE_FIXTURES", function () {
        return _site_fixtures__WEBPACK_IMPORTED_MODULE_0__["SITE_FIXTURES"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SETTINGS_FIXTURES", function () {
        return _site_fixtures__WEBPACK_IMPORTED_MODULE_0__["SETTINGS_FIXTURES"];
      });
      /* harmony import */


      var _ui_fixtures__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./ui.fixtures */
      "../../libs/gn-api/src/lib/gn4/fixtures/ui.fixtures.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UI_FIXTURES", function () {
        return _ui_fixtures__WEBPACK_IMPORTED_MODULE_1__["UI_FIXTURES"];
      });
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/fixtures/site.fixtures.ts":
    /*!*******************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/fixtures/site.fixtures.ts ***!
      \*******************************************************************************************************/

    /*! exports provided: SITE_FIXTURES, SETTINGS_FIXTURES */

    /***/
    function libsGnApiSrcLibGn4FixturesSiteFixturesTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SITE_FIXTURES", function () {
        return SITE_FIXTURES;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SETTINGS_FIXTURES", function () {
        return SETTINGS_FIXTURES;
      });

      var SITE_FIXTURES = {
        'system/platform/subVersion': 'alpha.2',
        'system/platform/version': '4.0.0',
        'system/site/name': 'GeoNetwork 4',
        'system/site/organization': 'titellus',
        'system/site/siteId': '04fe602b-fc46-4e6b-ac5a-138c6153eceb'
      };
      var SETTINGS_FIXTURES = {
        'system/site/name': 'GeoNetwork 4',
        'system/site/siteId': '04fe602b-fc46-4e6b-ac5a-138c6153eceb',
        'system/site/organization': 'titellus',
        'system/platform/version': '4.0.0',
        'system/platform/subVersion': 'alpha.2',
        'system/server/host': 'apps.titellus.net',
        'system/server/protocol': 'https',
        'system/server/port': 443,
        'system/server/securePort': 443,
        'system/server/timeZone': null,
        'system/userSelfRegistration/enable': false,
        'system/userFeedback/enable': false,
        'system/localrating/enable': 'advanced',
        'system/xlinkResolver/enable': false,
        'system/xlinkResolver/localXlinkEnable': true,
        'system/xlinkResolver/ignore': 'operatesOn,featureCatalogueCitation,Anchor,source',
        'system/xlinkResolver/referencedDeletionAllowed': true,
        'system/searchStats/enable': false,
        'system/inspire/enable': true,
        'system/harvester/enableEditing': false,
        'system/harvester/disabledHarvesterTypes': null,
        'system/metadata/allThesaurus': false,
        'metadata/vcs/enable': false,
        'system/metadata/validation/removeSchemaLocation': false,
        'system/metadata/history/enabled': false,
        'system/metadatacreate/generateUuid': true,
        'system/metadataprivs/usergrouponly': false,
        'system/inspire/remotevalidation/url': 'https://inspire.ec.europa.eu/validator/',
        'region/getmap/background': 'osm',
        'region/getmap/width': '500',
        'region/getmap/summaryWidth': '500',
        'region/getmap/mapproj': 'EPSG:3857',
        'metadata/resourceIdentifierPrefix': 'http://localhost:8080/geonetwork/srv/resources',
        'metadata/workflow/enable': false,
        'metadata/workflow/draftWhenInGroup': null,
        'metadata/workflow/allowSumitApproveInvalidMd': true,
        'metadata/workflow/allowPublishNonApprovedMd': true,
        'metadata/workflow/allowPublishInvalidMd': true,
        'metadata/workflow/automaticUnpublishInvalidMd': false,
        'metadata/workflow/forceValidationOnMdSave': false,
        'metadata/backuparchive/enable': false,
        'metadata/pdfReport/pdfName': 'metadata_{datetime}.pdf',
        'system/ui/defaultView': 'default',
        'system/userSelfRegistration/recaptcha/enable': false,
        'system/userSelfRegistration/recaptcha/publickey': null,
        'system/publication/doi/doienabled': false,
        'system/publication/doi/doiurl': null,
        'system/publication/doi/doiusername': null,
        'system/publication/doi/doikey': null,
        'system/publication/doi/doilandingpagetemplate': 'http://localhost:8080/geonetwork/srv/resources/records/{{uuid}}',
        'system/feedback/mailServer/hostIsDefined': false
      };
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/fixtures/ui.fixtures.ts":
    /*!*****************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/fixtures/ui.fixtures.ts ***!
      \*****************************************************************************************************/

    /*! exports provided: UI_FIXTURES */

    /***/
    function libsGnApiSrcLibGn4FixturesUiFixturesTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UI_FIXTURES", function () {
        return UI_FIXTURES;
      });

      var UI_FIXTURES = {
        id: 'srv',
        configuration: '{"langDetector":{"fromHtmlTag":false,"regexp":"^(?:/.+)?/.+/([a-z]{2,3})/.+","default":"eng"},"nodeDetector":{"regexp":"^(?:/.+)?/(.+)/[a-z]{2,3}/.+","default":"srv"},"serviceDetector":{"regexp":"^(?:/.+)?/.+/[a-z]{2,3}/(.+)","default":"catalog.search"},"baseURLDetector":{"regexp":"^((?:/.+)?)+/.+/[a-z]{2,3}/.+","default":"/geonetwork"},"mods":{"global":{"humanizeDates":true},"footer":{"enabled":true,"showSocialBarInFooter":true},"header":{"enabled":true,"languages":{"eng":"en","dut":"nl","fre":"fr","ger":"de","kor":"ko","spa":"es","cze":"cs","cat":"ca","fin":"fi","ice":"is","ita":"it","por":"pt","rus":"ru","chi":"zh","slo":"sk"},"isLogoInHeader":false,"logoInHeaderPosition":"left","fluidHeaderLayout":true,"showGNName":true,"isHeaderFixed":false},"cookieWarning":{"enabled":true,"cookieWarningMoreInfoLink":"","cookieWarningRejectLink":""},"home":{"enabled":true,"appUrl":"../../{{node}}/{{lang}}/catalog.search#/home","showSocialBarInFooter":true,"fluidLayout":true,"facetConfig":{"inspireThemeUri":{"terms":{"field":"inspireThemeUri","size":34}},"topic_text":{"terms":{"field":"topic_text","size":20}},"codelist_hierarchyLevel_text":{"terms":{"field":"codelist_hierarchyLevel_text","size":10}}}},"search":{"enabled":true,"appUrl":"../../{{node}}/{{lang}}/catalog.search#/search","hitsperpageValues":[30,60,120],"paginationInfo":{"hitsPerPage":30},"queryBase":"${any} resourceTitleObject.default:(${any})^2","scoreConfig":{"boost":"5","functions":[{"filter":{"exists":{"field":"parentUuid"}},"weight":0.3},{"filter":{"match":{"codelist_status":"obsolete"}},"weight":0.3},{"gauss":{"dateStamp":{"scale":"365d","offset":"90d","decay":0.5}}}],"score_mode":"multiply"},"autocompleteConfig":{"query":{"bool":{"must":[{"multi_match":{"query":"","type":"bool_prefix","fields":["resourceTitleObject.*","resourceAbstractObject.*","tag","resourceIdentifier"]}}]}},"_source":["resourceTitleObject"],"from":0,"size":20},"moreLikeThisConfig":{"more_like_this":{"fields":["resourceTitleObject.default","resourceAbstractObject.default","tag.raw"],"like":null,"min_term_freq":1,"max_query_terms":12}},"facetTabField":"","facetConfig":{"codelist_hierarchyLevel_text":{"terms":{"field":"codelist_hierarchyLevel_text"},"aggs":{"format":{"terms":{"field":"format"}}}},"codelist_spatialRepresentationType":{"terms":{"field":"codelist_spatialRepresentationType","size":10}},"availableInServices":{"filters":{"filters":{"availableInViewService":{"query_string":{"query":"+linkProtocol:/OGC:WMS.*/"}},"availableInDownloadService":{"query_string":{"query":"+linkProtocol:/OGC:WFS.*/"}}}}},"thesaurus_geonetworkthesaurusexternalthemegemet_tree":{"terms":{"field":"thesaurus_geonetworkthesaurusexternalthemegemet_tree","size":100,"order":{"_key":"asc"},"include":"[^/]+/?[^/]+"}},"tag":{"terms":{"field":"tag","include":".*","size":10}},"thesaurus_geonetworkthesaurusexternalplaceregions_tree":{"terms":{"field":"thesaurus_geonetworkthesaurusexternalplaceregions_tree","size":100,"order":{"_key":"asc"}}},"resolutionScaleDenominator":{"collapsed":true,"terms":{"field":"resolutionScaleDenominator","size":10,"order":{"_key":"asc"}}},"creationYearForResource":{"collapsed":true,"terms":{"field":"creationYearForResource","size":10,"order":{"_key":"desc"}}},"OrgForResource":{"terms":{"field":"OrgForResource","size":15}},"codelist_maintenanceAndUpdateFrequency_text":{"collapsed":true,"terms":{"field":"codelist_maintenanceAndUpdateFrequency_text","size":10}},"codelist_status_text":{"terms":{"field":"codelist_status_text","size":10}},"dateStamp":{"userHasRole":"isReviewerOrMore","auto_date_histogram":{"field":"dateStamp","buckets":50}}},"filters":null,"sortbyValues":[{"sortBy":"relevance","sortOrder":""},{"sortBy":"dateStamp","sortOrder":"desc"},{"sortBy":"createDate","sortOrder":"desc"},{"sortBy":"resourceTitleObject.default.keyword","sortOrder":""},{"sortBy":"rating","sortOrder":"desc"},{"sortBy":"popularity","sortOrder":"desc"}],"sortBy":"relevance","resultViewTpls":[{"tplUrl":"../../catalog/components/search/resultsview/partials/viewtemplates/grid.html","tooltip":"Grid","icon":"fa-th"},{"tplUrl":"../../catalog/components/search/resultsview/partials/viewtemplates/list.html","tooltip":"List","icon":"fa-bars"}],"resultTemplate":"../../catalog/components/search/resultsview/partials/viewtemplates/grid.html","formatter":{"list":[{"label":"defaultView","url":""},{"label":"full","url":"/formatters/xsl-view?root=div&view=advanced"}],"defaultUrl":""},"downloadFormatter":[{"label":"exportMEF","url":"/formatters/zip?withRelated=false","class":"fa-file-zip-o"},{"label":"exportPDF","url":"/formatters/xsl-view?output=pdf&language=${lang}","class":"fa-file-pdf-o"},{"label":"exportXML","url":"/formatters/xml","class":"fa-file-code-o"}],"grid":{"related":["parent","children","services","datasets"]},"linkTypes":{"links":["LINK","kml"],"downloads":["DOWNLOAD"],"layers":["OGC","ESRI:REST"],"maps":["ows"]},"isFilterTagsDisplayedInSearch":true,"usersearches":{"enabled":false,"displayFeaturedSearchesPanel":false},"savedSelection":{"enabled":false}},"map":{"enabled":true,"appUrl":"../../{{node}}/{{lang}}/catalog.search#/map","externalViewer":{"enabled":false,"enabledViewAction":false,"baseUrl":"http://www.example.com/viewer","urlTemplate":"http://www.example.com/viewer?url=${service.url}&type=${service.type}&layer=${service.title}&lang=${iso2lang}&title=${md.defaultTitle}","openNewWindow":false,"valuesSeparator":","},"is3DModeAllowed":false,"isSaveMapInCatalogAllowed":true,"isExportMapAsImageEnabled":false,"storage":"sessionStorage","bingKey":"","listOfServices":{"wms":[],"wmts":[]},"projection":"EPSG:3857","projectionList":[{"code":"urn:ogc:def:crs:EPSG:6.6:4326","label":"WGS84 (EPSG:4326)"},{"code":"EPSG:3857","label":"Google mercator (EPSG:3857)"}],"switcherProjectionList":[{"code":"EPSG:3857","label":"Google mercator (EPSG:3857)"}],"disabledTools":{"processes":false,"addLayers":false,"projectionSwitcher":false,"layers":false,"legend":false,"filter":false,"contexts":false,"print":false,"mInteraction":false,"graticule":false,"mousePosition":true,"syncAllLayers":false,"drawVector":false},"graticuleOgcService":{},"map-viewer":{"context":"../../map/config-viewer.xml","extent":[0,0,0,0],"layers":[]},"map-search":{"context":"../../map/config-viewer.xml","extent":[0,0,0,0],"layers":[]},"map-editor":{"context":"","extent":[0,0,0,0],"layers":[{"type":"osm"}]},"autoFitOnLayer":false},"geocoder":{"enabled":true,"appUrl":"https://secure.geonames.org/searchJSON"},"recordview":{"enabled":true,"isSocialbarEnabled":true},"editor":{"enabled":true,"appUrl":"../../{{node}}/{{lang}}/catalog.edit","isUserRecordsOnly":false,"minUserProfileToCreateTemplate":"","isFilterTagsDisplayed":false,"fluidEditorLayout":true,"createPageTpl":"../../catalog/templates/editor/new-metadata-horizontal.html","editorIndentType":"","allowRemoteRecordLink":true,"facetConfig":{"resourceType":{"terms":{"field":"resourceType","size":20}},"codelist_status_text":{"terms":{"field":"codelist_status_text","size":15}},"sourceCatalogue":{"terms":{"field":"sourceCatalogue","size":15}},"isValid":{"terms":{"field":"isValid","size":10}},"isValidInspire":{"terms":{"field":"isValidInspire","size":10}},"groupOwner":{"terms":{"field":"groupOwner","size":10}},"recordOwner":{"terms":{"field":"recordOwner","size":10}},"groupPublished":{"terms":{"field":"groupPublished","size":10}},"documentStandard":{"terms":{"field":"documentStandard","size":10}},"isHarvested":{"terms":{"field":"isHarvested","size":2}},"isTemplate":{"terms":{"field":"isTemplate","size":5}},"isPublishedToAll":{"terms":{"field":"isPublishedToAll","size":2}}}},"admin":{"enabled":true,"appUrl":"../../{{node}}/{{lang}}/admin.console"},"signin":{"enabled":true,"appUrl":"../../{{node}}/{{lang}}/catalog.signin"},"signout":{"appUrl":"../../signout"},"page":{"enabled":true,"appUrl":"../../{{node}}/{{lang}}/catalog.search#/page"}}}'
      };
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/gn-api.module.ts":
    /*!**********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/gn-api.module.ts ***!
      \**********************************************************************************************/

    /*! exports provided: GnApiModule */

    /***/
    function libsGnApiSrcLibGn4GnApiModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "GnApiModule", function () {
        return GnApiModule;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

      var GnApiModule = function GnApiModule() {
        _classCallCheck(this, GnApiModule);
      };

      GnApiModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: GnApiModule
      });
      GnApiModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function GnApiModule_Factory(t) {
          return new (t || GnApiModule)();
        },
        imports: [[]]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GnApiModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            declarations: [],
            imports: [],
            exports: []
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/index.ts":
    /*!**************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/index.ts ***!
      \**************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4IndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _gn_api_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./gn-api.module */
      "../../libs/gn-api/src/lib/gn4/gn-api.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "GnApiModule", function () {
        return _gn_api_module__WEBPACK_IMPORTED_MODULE_0__["GnApiModule"];
      });
      /* harmony import */


      var _openapi___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./openapi/ */
      "../../libs/gn-api/src/lib/gn4/openapi/index.ts");
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _openapi___WEBPACK_IMPORTED_MODULE_1__) {
        if (["GnApiModule", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _openapi___WEBPACK_IMPORTED_MODULE_1__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _fixtures___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./fixtures/ */
      "../../libs/gn-api/src/lib/gn4/fixtures/index.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SITE_FIXTURES", function () {
        return _fixtures___WEBPACK_IMPORTED_MODULE_2__["SITE_FIXTURES"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SETTINGS_FIXTURES", function () {
        return _fixtures___WEBPACK_IMPORTED_MODULE_2__["SETTINGS_FIXTURES"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UI_FIXTURES", function () {
        return _fixtures___WEBPACK_IMPORTED_MODULE_2__["UI_FIXTURES"];
      });
      /*
       * Public API Surface of gn-api
       */

      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api.module.ts":
    /*!***************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api.module.ts ***!
      \***************************************************************************************************/

    /*! exports provided: ApiModule */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ApiModule", function () {
        return ApiModule;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");

      var ApiModule = /*#__PURE__*/function () {
        function ApiModule(parentModule, http) {
          _classCallCheck(this, ApiModule);

          if (parentModule) {
            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');
          }

          if (!http) {
            throw new Error('You need to import the HttpClientModule in your AppModule! \n' + 'See also https://github.com/angular/angular/issues/20575');
          }
        }

        _createClass(ApiModule, null, [{
          key: "forRoot",
          value: function forRoot(configurationFactory) {
            return {
              ngModule: ApiModule,
              providers: [{
                provide: _configuration__WEBPACK_IMPORTED_MODULE_1__["Configuration"],
                useFactory: configurationFactory
              }]
            };
          }
        }]);

        return ApiModule;
      }();

      ApiModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: ApiModule
      });
      ApiModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function ApiModule_Factory(t) {
          return new (t || ApiModule)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](ApiModule, 12), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], 8));
        },
        providers: [],
        imports: [[]]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ApiModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            imports: [],
            declarations: [],
            exports: [],
            providers: []
          }]
        }], function () {
          return [{
            type: ApiModule,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["SkipSelf"]
            }]
          }, {
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/api.ts":
    /*!************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/api.ts ***!
      \************************************************************************************************/

    /*! exports provided: CustomstyleApiService, GroupsApiService, HarvestersApiService, IdentifiersApiService, LanguagesApiService, LinksApiService, LogosApiService, MapserversApiService, MeApiService, OperationsApiService, PagesApiService, ProcessesApiService, RecordsApiService, RegionsApiService, RegistriesApiService, RelatedApiService, SearchApiService, SelectionsApiService, SiteApiService, SourcesApiService, StandardsApiService, StatusApiService, TagsApiService, ToolsApiService, UiApiService, UserfeedbackApiService, UsersApiService, UsersearchesApiService, UserselectionsApiService, APIS */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiApiTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "APIS", function () {
        return APIS;
      });
      /* harmony import */


      var _customstyle_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./customstyle.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/customstyle.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "CustomstyleApiService", function () {
        return _customstyle_api_service__WEBPACK_IMPORTED_MODULE_0__["CustomstyleApiService"];
      });
      /* harmony import */


      var _groups_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./groups.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/groups.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "GroupsApiService", function () {
        return _groups_api_service__WEBPACK_IMPORTED_MODULE_1__["GroupsApiService"];
      });
      /* harmony import */


      var _harvesters_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./harvesters.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/harvesters.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "HarvestersApiService", function () {
        return _harvesters_api_service__WEBPACK_IMPORTED_MODULE_2__["HarvestersApiService"];
      });
      /* harmony import */


      var _identifiers_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./identifiers.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/identifiers.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "IdentifiersApiService", function () {
        return _identifiers_api_service__WEBPACK_IMPORTED_MODULE_3__["IdentifiersApiService"];
      });
      /* harmony import */


      var _languages_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./languages.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/languages.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LanguagesApiService", function () {
        return _languages_api_service__WEBPACK_IMPORTED_MODULE_4__["LanguagesApiService"];
      });
      /* harmony import */


      var _links_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./links.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/links.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LinksApiService", function () {
        return _links_api_service__WEBPACK_IMPORTED_MODULE_5__["LinksApiService"];
      });
      /* harmony import */


      var _logos_api_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./logos.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/logos.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LogosApiService", function () {
        return _logos_api_service__WEBPACK_IMPORTED_MODULE_6__["LogosApiService"];
      });
      /* harmony import */


      var _mapservers_api_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./mapservers.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/mapservers.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "MapserversApiService", function () {
        return _mapservers_api_service__WEBPACK_IMPORTED_MODULE_7__["MapserversApiService"];
      });
      /* harmony import */


      var _me_api_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./me.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/me.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "MeApiService", function () {
        return _me_api_service__WEBPACK_IMPORTED_MODULE_8__["MeApiService"];
      });
      /* harmony import */


      var _operations_api_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./operations.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/operations.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "OperationsApiService", function () {
        return _operations_api_service__WEBPACK_IMPORTED_MODULE_9__["OperationsApiService"];
      });
      /* harmony import */


      var _pages_api_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./pages.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/pages.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "PagesApiService", function () {
        return _pages_api_service__WEBPACK_IMPORTED_MODULE_10__["PagesApiService"];
      });
      /* harmony import */


      var _processes_api_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./processes.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/processes.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ProcessesApiService", function () {
        return _processes_api_service__WEBPACK_IMPORTED_MODULE_11__["ProcessesApiService"];
      });
      /* harmony import */


      var _records_api_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./records.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/records.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RecordsApiService", function () {
        return _records_api_service__WEBPACK_IMPORTED_MODULE_12__["RecordsApiService"];
      });
      /* harmony import */


      var _regions_api_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./regions.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/regions.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RegionsApiService", function () {
        return _regions_api_service__WEBPACK_IMPORTED_MODULE_13__["RegionsApiService"];
      });
      /* harmony import */


      var _registries_api_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./registries.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/registries.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RegistriesApiService", function () {
        return _registries_api_service__WEBPACK_IMPORTED_MODULE_14__["RegistriesApiService"];
      });
      /* harmony import */


      var _related_api_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./related.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/related.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RelatedApiService", function () {
        return _related_api_service__WEBPACK_IMPORTED_MODULE_15__["RelatedApiService"];
      });
      /* harmony import */


      var _search_api_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! ./search.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/search.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SearchApiService", function () {
        return _search_api_service__WEBPACK_IMPORTED_MODULE_16__["SearchApiService"];
      });
      /* harmony import */


      var _selections_api_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ./selections.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/selections.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SelectionsApiService", function () {
        return _selections_api_service__WEBPACK_IMPORTED_MODULE_17__["SelectionsApiService"];
      });
      /* harmony import */


      var _site_api_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! ./site.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/site.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SiteApiService", function () {
        return _site_api_service__WEBPACK_IMPORTED_MODULE_18__["SiteApiService"];
      });
      /* harmony import */


      var _sources_api_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! ./sources.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/sources.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SourcesApiService", function () {
        return _sources_api_service__WEBPACK_IMPORTED_MODULE_19__["SourcesApiService"];
      });
      /* harmony import */


      var _standards_api_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! ./standards.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/standards.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "StandardsApiService", function () {
        return _standards_api_service__WEBPACK_IMPORTED_MODULE_20__["StandardsApiService"];
      });
      /* harmony import */


      var _status_api_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! ./status.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/status.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "StatusApiService", function () {
        return _status_api_service__WEBPACK_IMPORTED_MODULE_21__["StatusApiService"];
      });
      /* harmony import */


      var _tags_api_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! ./tags.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/tags.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "TagsApiService", function () {
        return _tags_api_service__WEBPACK_IMPORTED_MODULE_22__["TagsApiService"];
      });
      /* harmony import */


      var _tools_api_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! ./tools.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/tools.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ToolsApiService", function () {
        return _tools_api_service__WEBPACK_IMPORTED_MODULE_23__["ToolsApiService"];
      });
      /* harmony import */


      var _ui_api_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
      /*! ./ui.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/ui.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UiApiService", function () {
        return _ui_api_service__WEBPACK_IMPORTED_MODULE_24__["UiApiService"];
      });
      /* harmony import */


      var _userfeedback_api_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
      /*! ./userfeedback.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/userfeedback.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UserfeedbackApiService", function () {
        return _userfeedback_api_service__WEBPACK_IMPORTED_MODULE_25__["UserfeedbackApiService"];
      });
      /* harmony import */


      var _users_api_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
      /*! ./users.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/users.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UsersApiService", function () {
        return _users_api_service__WEBPACK_IMPORTED_MODULE_26__["UsersApiService"];
      });
      /* harmony import */


      var _usersearches_api_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
      /*! ./usersearches.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/usersearches.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UsersearchesApiService", function () {
        return _usersearches_api_service__WEBPACK_IMPORTED_MODULE_27__["UsersearchesApiService"];
      });
      /* harmony import */


      var _userselections_api_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
      /*! ./userselections.api.service */
      "../../libs/gn-api/src/lib/gn4/openapi/api/userselections.api.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UserselectionsApiService", function () {
        return _userselections_api_service__WEBPACK_IMPORTED_MODULE_28__["UserselectionsApiService"];
      });

      var APIS = [_customstyle_api_service__WEBPACK_IMPORTED_MODULE_0__["CustomstyleApiService"], _groups_api_service__WEBPACK_IMPORTED_MODULE_1__["GroupsApiService"], _harvesters_api_service__WEBPACK_IMPORTED_MODULE_2__["HarvestersApiService"], _identifiers_api_service__WEBPACK_IMPORTED_MODULE_3__["IdentifiersApiService"], _languages_api_service__WEBPACK_IMPORTED_MODULE_4__["LanguagesApiService"], _links_api_service__WEBPACK_IMPORTED_MODULE_5__["LinksApiService"], _logos_api_service__WEBPACK_IMPORTED_MODULE_6__["LogosApiService"], _mapservers_api_service__WEBPACK_IMPORTED_MODULE_7__["MapserversApiService"], _me_api_service__WEBPACK_IMPORTED_MODULE_8__["MeApiService"], _operations_api_service__WEBPACK_IMPORTED_MODULE_9__["OperationsApiService"], _pages_api_service__WEBPACK_IMPORTED_MODULE_10__["PagesApiService"], _processes_api_service__WEBPACK_IMPORTED_MODULE_11__["ProcessesApiService"], _records_api_service__WEBPACK_IMPORTED_MODULE_12__["RecordsApiService"], _regions_api_service__WEBPACK_IMPORTED_MODULE_13__["RegionsApiService"], _registries_api_service__WEBPACK_IMPORTED_MODULE_14__["RegistriesApiService"], _related_api_service__WEBPACK_IMPORTED_MODULE_15__["RelatedApiService"], _search_api_service__WEBPACK_IMPORTED_MODULE_16__["SearchApiService"], _selections_api_service__WEBPACK_IMPORTED_MODULE_17__["SelectionsApiService"], _site_api_service__WEBPACK_IMPORTED_MODULE_18__["SiteApiService"], _sources_api_service__WEBPACK_IMPORTED_MODULE_19__["SourcesApiService"], _standards_api_service__WEBPACK_IMPORTED_MODULE_20__["StandardsApiService"], _status_api_service__WEBPACK_IMPORTED_MODULE_21__["StatusApiService"], _tags_api_service__WEBPACK_IMPORTED_MODULE_22__["TagsApiService"], _tools_api_service__WEBPACK_IMPORTED_MODULE_23__["ToolsApiService"], _ui_api_service__WEBPACK_IMPORTED_MODULE_24__["UiApiService"], _userfeedback_api_service__WEBPACK_IMPORTED_MODULE_25__["UserfeedbackApiService"], _users_api_service__WEBPACK_IMPORTED_MODULE_26__["UsersApiService"], _usersearches_api_service__WEBPACK_IMPORTED_MODULE_27__["UsersearchesApiService"], _userselections_api_service__WEBPACK_IMPORTED_MODULE_28__["UserselectionsApiService"]];
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/customstyle.api.service.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/customstyle.api.service.ts ***!
      \********************************************************************************************************************/

    /*! exports provided: CustomstyleApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiCustomstyleApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CustomstyleApiService", function () {
        return CustomstyleApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var CustomstyleApiService = /*#__PURE__*/function () {
        function CustomstyleApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, CustomstyleApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(CustomstyleApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this2 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this2.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this2.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getCssStyle",
          value: function getCssStyle() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/customstyle"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "saveCssStyle",
          value: function saveCssStyle(body) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (body === null || body === undefined) {
              throw new Error('Required parameter body was null or undefined when calling saveCssStyle.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/customstyle"), body, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return CustomstyleApiService;
      }();

      CustomstyleApiService.ɵfac = function CustomstyleApiService_Factory(t) {
        return new (t || CustomstyleApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      CustomstyleApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: CustomstyleApiService,
        factory: CustomstyleApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CustomstyleApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/groups.api.service.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/groups.api.service.ts ***!
      \***************************************************************************************************************/

    /*! exports provided: GroupsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiGroupsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "GroupsApiService", function () {
        return GroupsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var GroupsApiService = /*#__PURE__*/function () {
        function GroupsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, GroupsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(GroupsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this3 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this3.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this3.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "addGroup",
          value: function addGroup(groupApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (groupApiModel === null || groupApiModel === undefined) {
              throw new Error('Required parameter groupApiModel was null or undefined when calling addGroup.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/groups"), groupApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteGroup",
          value: function deleteGroup(groupIdentifier, force) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (groupIdentifier === null || groupIdentifier === undefined) {
              throw new Error('Required parameter groupIdentifier was null or undefined when calling deleteGroup.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (force !== undefined && force !== null) {
              queryParameters = this.addToHttpParams(queryParameters, force, 'force');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/groups/").concat(encodeURIComponent(String(groupIdentifier))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getGroup",
          value: function getGroup(groupIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (groupIdentifier === null || groupIdentifier === undefined) {
              throw new Error('Required parameter groupIdentifier was null or undefined when calling getGroup.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/groups/").concat(encodeURIComponent(String(groupIdentifier))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getGroupUsers",
          value: function getGroupUsers(groupIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (groupIdentifier === null || groupIdentifier === undefined) {
              throw new Error('Required parameter groupIdentifier was null or undefined when calling getGroupUsers.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/groups/").concat(encodeURIComponent(String(groupIdentifier)), "/users"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getGroups",
          value: function getGroups(withReservedGroup, profile) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (withReservedGroup !== undefined && withReservedGroup !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withReservedGroup, 'withReservedGroup');
            }

            if (profile !== undefined && profile !== null) {
              queryParameters = this.addToHttpParams(queryParameters, profile, 'profile');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/groups"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updateGroup",
          value: function updateGroup(groupIdentifier, groupApiModel) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (groupIdentifier === null || groupIdentifier === undefined) {
              throw new Error('Required parameter groupIdentifier was null or undefined when calling updateGroup.');
            }

            if (groupApiModel === null || groupApiModel === undefined) {
              throw new Error('Required parameter groupApiModel was null or undefined when calling updateGroup.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/groups/").concat(encodeURIComponent(String(groupIdentifier))), groupApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return GroupsApiService;
      }();

      GroupsApiService.ɵfac = function GroupsApiService_Factory(t) {
        return new (t || GroupsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      GroupsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: GroupsApiService,
        factory: GroupsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GroupsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/harvesters.api.service.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/harvesters.api.service.ts ***!
      \*******************************************************************************************************************/

    /*! exports provided: HarvestersApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiHarvestersApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "HarvestersApiService", function () {
        return HarvestersApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var HarvestersApiService = /*#__PURE__*/function () {
        function HarvestersApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, HarvestersApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(HarvestersApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this4 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this4.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this4.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "assignHarvestedRecordToSource",
          value: function assignHarvestedRecordToSource(harvesterUuid, source) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (harvesterUuid === null || harvesterUuid === undefined) {
              throw new Error('Required parameter harvesterUuid was null or undefined when calling assignHarvestedRecordToSource.');
            }

            if (source === null || source === undefined) {
              throw new Error('Required parameter source was null or undefined when calling assignHarvestedRecordToSource.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (source !== undefined && source !== null) {
              queryParameters = this.addToHttpParams(queryParameters, source, 'source');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/harvesters/").concat(encodeURIComponent(String(harvesterUuid)), "/assign"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return HarvestersApiService;
      }();

      HarvestersApiService.ɵfac = function HarvestersApiService_Factory(t) {
        return new (t || HarvestersApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      HarvestersApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: HarvestersApiService,
        factory: HarvestersApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](HarvestersApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/identifiers.api.service.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/identifiers.api.service.ts ***!
      \********************************************************************************************************************/

    /*! exports provided: IdentifiersApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiIdentifiersApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "IdentifiersApiService", function () {
        return IdentifiersApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var IdentifiersApiService = /*#__PURE__*/function () {
        function IdentifiersApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, IdentifiersApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(IdentifiersApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this5 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this5.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this5.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "addIdentifier",
          value: function addIdentifier(metadataIdentifierTemplateApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataIdentifierTemplateApiModel === null || metadataIdentifierTemplateApiModel === undefined) {
              throw new Error('Required parameter metadataIdentifierTemplateApiModel was null or undefined when calling addIdentifier.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/identifiers"), metadataIdentifierTemplateApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getIdentifiers",
          value: function getIdentifiers(userDefinedOnly) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (userDefinedOnly !== undefined && userDefinedOnly !== null) {
              queryParameters = this.addToHttpParams(queryParameters, userDefinedOnly, 'userDefinedOnly');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/identifiers"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updateIdentifier",
          value: function updateIdentifier(identifier, metadataIdentifierTemplateApiModel) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (identifier === null || identifier === undefined) {
              throw new Error('Required parameter identifier was null or undefined when calling updateIdentifier.');
            }

            if (metadataIdentifierTemplateApiModel === null || metadataIdentifierTemplateApiModel === undefined) {
              throw new Error('Required parameter metadataIdentifierTemplateApiModel was null or undefined when calling updateIdentifier.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/identifiers/").concat(encodeURIComponent(String(identifier))), metadataIdentifierTemplateApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return IdentifiersApiService;
      }();

      IdentifiersApiService.ɵfac = function IdentifiersApiService_Factory(t) {
        return new (t || IdentifiersApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      IdentifiersApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: IdentifiersApiService,
        factory: IdentifiersApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](IdentifiersApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/languages.api.service.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/languages.api.service.ts ***!
      \******************************************************************************************************************/

    /*! exports provided: LanguagesApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiLanguagesApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LanguagesApiService", function () {
        return LanguagesApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var LanguagesApiService = /*#__PURE__*/function () {
        function LanguagesApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, LanguagesApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(LanguagesApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this6 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this6.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this6.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getIsoLanguages",
          value: function getIsoLanguages() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/isolanguages"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return LanguagesApiService;
      }();

      LanguagesApiService.ɵfac = function LanguagesApiService_Factory(t) {
        return new (t || LanguagesApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      LanguagesApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: LanguagesApiService,
        factory: LanguagesApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LanguagesApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/links.api.service.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/links.api.service.ts ***!
      \**************************************************************************************************************/

    /*! exports provided: LinksApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiLinksApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LinksApiService", function () {
        return LinksApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var LinksApiService = /*#__PURE__*/function () {
        function LinksApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, LinksApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(LinksApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this7 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this7.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this7.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "analyzeRecordLinks",
          value: function analyzeRecordLinks(uuids, bucket, removeFirst, analyze) {
            var _this8 = this;

            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this8.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (removeFirst !== undefined && removeFirst !== null) {
              queryParameters = this.addToHttpParams(queryParameters, removeFirst, 'removeFirst');
            }

            if (analyze !== undefined && analyze !== null) {
              queryParameters = this.addToHttpParams(queryParameters, analyze, 'analyze');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records/links"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordLinks",
          value: function getRecordLinks(filter, groupIdFilter, groupOwnerIdFilter) {
            var _this9 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (filter !== undefined && filter !== null) {
              queryParameters = this.addToHttpParams(queryParameters, filter, 'filter');
            }

            if (groupIdFilter) {
              groupIdFilter.forEach(function (element) {
                queryParameters = _this9.addToHttpParams(queryParameters, element, 'groupIdFilter');
              });
            }

            if (groupOwnerIdFilter) {
              groupOwnerIdFilter.forEach(function (element) {
                queryParameters = _this9.addToHttpParams(queryParameters, element, 'groupOwnerIdFilter');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/links"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordLinksAsCsv",
          value: function getRecordLinksAsCsv(filter, groupIdFilter, groupOwnerIdFilter) {
            var _this10 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (filter !== undefined && filter !== null) {
              queryParameters = this.addToHttpParams(queryParameters, filter, 'filter');
            }

            if (groupIdFilter) {
              groupIdFilter.forEach(function (element) {
                queryParameters = _this10.addToHttpParams(queryParameters, element, 'groupIdFilter');
              });
            }

            if (groupOwnerIdFilter) {
              groupOwnerIdFilter.forEach(function (element) {
                queryParameters = _this10.addToHttpParams(queryParameters, element, 'groupOwnerIdFilter');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/links/csv"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "purgeAll",
          value: function purgeAll() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records/links"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return LinksApiService;
      }();

      LinksApiService.ɵfac = function LinksApiService_Factory(t) {
        return new (t || LinksApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      LinksApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: LinksApiService,
        factory: LinksApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LinksApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/logos.api.service.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/logos.api.service.ts ***!
      \**************************************************************************************************************/

    /*! exports provided: LogosApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiLogosApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LogosApiService", function () {
        return LogosApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var LogosApiService = /*#__PURE__*/function () {
        function LogosApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, LogosApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(LogosApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this11 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this11.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this11.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "addLogo",
          value: function addLogo(file, overwrite) {
            var _this12 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (file === null || file === undefined) {
              throw new Error('Required parameter file was null or undefined when calling addLogo.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (file) {
              file.forEach(function (element) {
                queryParameters = _this12.addToHttpParams(queryParameters, element, 'file');
              });
            }

            if (overwrite !== undefined && overwrite !== null) {
              queryParameters = this.addToHttpParams(queryParameters, overwrite, 'overwrite');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/logos"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteLogo",
          value: function deleteLogo(file) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (file === null || file === undefined) {
              throw new Error('Required parameter file was null or undefined when calling deleteLogo.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/logos/").concat(encodeURIComponent(String(file))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getLogos",
          value: function getLogos() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/logos"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return LogosApiService;
      }();

      LogosApiService.ɵfac = function LogosApiService_Factory(t) {
        return new (t || LogosApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      LogosApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: LogosApiService,
        factory: LogosApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LogosApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/mapservers.api.service.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/mapservers.api.service.ts ***!
      \*******************************************************************************************************************/

    /*! exports provided: MapserversApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiMapserversApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "MapserversApiService", function () {
        return MapserversApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var MapserversApiService = /*#__PURE__*/function () {
        function MapserversApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, MapserversApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(MapserversApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this13 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this13.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this13.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "addMapserver",
          value: function addMapserver(mapServerApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (mapServerApiModel === null || mapServerApiModel === undefined) {
              throw new Error('Required parameter mapServerApiModel was null or undefined when calling addMapserver.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/mapservers"), mapServerApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteMapserverResource",
          value: function deleteMapserverResource(mapserverId, metadataUuid, resource, metadataTitle, metadataAbstract) {
            var observe = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'body';
            var reportProgress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var options = arguments.length > 7 ? arguments[7] : undefined;

            if (mapserverId === null || mapserverId === undefined) {
              throw new Error('Required parameter mapserverId was null or undefined when calling deleteMapserverResource.');
            }

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling deleteMapserverResource.');
            }

            if (resource === null || resource === undefined) {
              throw new Error('Required parameter resource was null or undefined when calling deleteMapserverResource.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (resource !== undefined && resource !== null) {
              queryParameters = this.addToHttpParams(queryParameters, resource, 'resource');
            }

            if (metadataTitle !== undefined && metadataTitle !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataTitle, 'metadataTitle');
            }

            if (metadataAbstract !== undefined && metadataAbstract !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataAbstract, 'metadataAbstract');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/mapservers/").concat(encodeURIComponent(String(mapserverId)), "/records/").concat(encodeURIComponent(String(metadataUuid))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getMapserver",
          value: function getMapserver(mapserverId) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (mapserverId === null || mapserverId === undefined) {
              throw new Error('Required parameter mapserverId was null or undefined when calling getMapserver.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/mapservers/").concat(encodeURIComponent(String(mapserverId))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getMapserverResource",
          value: function getMapserverResource(mapserverId, metadataUuid, resource, metadataTitle, metadataAbstract) {
            var observe = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'body';
            var reportProgress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var options = arguments.length > 7 ? arguments[7] : undefined;

            if (mapserverId === null || mapserverId === undefined) {
              throw new Error('Required parameter mapserverId was null or undefined when calling getMapserverResource.');
            }

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getMapserverResource.');
            }

            if (resource === null || resource === undefined) {
              throw new Error('Required parameter resource was null or undefined when calling getMapserverResource.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (resource !== undefined && resource !== null) {
              queryParameters = this.addToHttpParams(queryParameters, resource, 'resource');
            }

            if (metadataTitle !== undefined && metadataTitle !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataTitle, 'metadataTitle');
            }

            if (metadataAbstract !== undefined && metadataAbstract !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataAbstract, 'metadataAbstract');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/mapservers/").concat(encodeURIComponent(String(mapserverId)), "/records/").concat(encodeURIComponent(String(metadataUuid))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getMapservers",
          value: function getMapservers() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/mapservers"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "publishMapserverResource",
          value: function publishMapserverResource(mapserverId, metadataUuid, resource, metadataTitle, metadataAbstract) {
            var observe = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'body';
            var reportProgress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var options = arguments.length > 7 ? arguments[7] : undefined;

            if (mapserverId === null || mapserverId === undefined) {
              throw new Error('Required parameter mapserverId was null or undefined when calling publishMapserverResource.');
            }

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling publishMapserverResource.');
            }

            if (resource === null || resource === undefined) {
              throw new Error('Required parameter resource was null or undefined when calling publishMapserverResource.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (resource !== undefined && resource !== null) {
              queryParameters = this.addToHttpParams(queryParameters, resource, 'resource');
            }

            if (metadataTitle !== undefined && metadataTitle !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataTitle, 'metadataTitle');
            }

            if (metadataAbstract !== undefined && metadataAbstract !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataAbstract, 'metadataAbstract');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/mapservers/").concat(encodeURIComponent(String(mapserverId)), "/records/").concat(encodeURIComponent(String(metadataUuid))), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updateMapserver",
          value: function updateMapserver(mapserverId, mapServerApiModel) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (mapserverId === null || mapserverId === undefined) {
              throw new Error('Required parameter mapserverId was null or undefined when calling updateMapserver.');
            }

            if (mapServerApiModel === null || mapServerApiModel === undefined) {
              throw new Error('Required parameter mapServerApiModel was null or undefined when calling updateMapserver.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/mapservers/").concat(encodeURIComponent(String(mapserverId))), mapServerApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return MapserversApiService;
      }();

      MapserversApiService.ɵfac = function MapserversApiService_Factory(t) {
        return new (t || MapserversApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      MapserversApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: MapserversApiService,
        factory: MapserversApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MapserversApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/me.api.service.ts":
    /*!***********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/me.api.service.ts ***!
      \***********************************************************************************************************/

    /*! exports provided: MeApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiMeApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "MeApiService", function () {
        return MeApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var MeApiService = /*#__PURE__*/function () {
        function MeApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, MeApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(MeApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this14 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this14.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this14.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getMe",
          value: function getMe() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/me"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return MeApiService;
      }();

      MeApiService.ɵfac = function MeApiService_Factory(t) {
        return new (t || MeApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      MeApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: MeApiService,
        factory: MeApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MeApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/operations.api.service.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/operations.api.service.ts ***!
      \*******************************************************************************************************************/

    /*! exports provided: OperationsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiOperationsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "OperationsApiService", function () {
        return OperationsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var OperationsApiService = /*#__PURE__*/function () {
        function OperationsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, OperationsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(OperationsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this15 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this15.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this15.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getOperations",
          value: function getOperations() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/operations"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return OperationsApiService;
      }();

      OperationsApiService.ɵfac = function OperationsApiService_Factory(t) {
        return new (t || OperationsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      OperationsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: OperationsApiService,
        factory: OperationsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](OperationsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/pages.api.service.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/pages.api.service.ts ***!
      \**************************************************************************************************************/

    /*! exports provided: PagesApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiPagesApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "PagesApiService", function () {
        return PagesApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var PagesApiService = /*#__PURE__*/function () {
        function PagesApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, PagesApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(PagesApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this16 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this16.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this16.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getPage",
          value: function getPage(language, pageId) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (language === null || language === undefined) {
              throw new Error('Required parameter language was null or undefined when calling getPage.');
            }

            if (pageId === null || pageId === undefined) {
              throw new Error('Required parameter pageId was null or undefined when calling getPage.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/pages/").concat(encodeURIComponent(String(language)), "/").concat(encodeURIComponent(String(pageId))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getPageContent",
          value: function getPageContent(language, pageId) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (language === null || language === undefined) {
              throw new Error('Required parameter language was null or undefined when calling getPageContent.');
            }

            if (pageId === null || pageId === undefined) {
              throw new Error('Required parameter pageId was null or undefined when calling getPageContent.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain;charset=UTF-8'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/pages/").concat(encodeURIComponent(String(language)), "/").concat(encodeURIComponent(String(pageId)), "/content"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "listPages",
          value: function listPages(language, section, format) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (language !== undefined && language !== null) {
              queryParameters = this.addToHttpParams(queryParameters, language, 'language');
            }

            if (section !== undefined && section !== null) {
              queryParameters = this.addToHttpParams(queryParameters, section, 'section');
            }

            if (format !== undefined && format !== null) {
              queryParameters = this.addToHttpParams(queryParameters, format, 'format');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/pages/list"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return PagesApiService;
      }();

      PagesApiService.ɵfac = function PagesApiService_Factory(t) {
        return new (t || PagesApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      PagesApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: PagesApiService,
        factory: PagesApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PagesApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/processes.api.service.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/processes.api.service.ts ***!
      \******************************************************************************************************************/

    /*! exports provided: ProcessesApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiProcessesApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ProcessesApiService", function () {
        return ProcessesApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var ProcessesApiService = /*#__PURE__*/function () {
        function ProcessesApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, ProcessesApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(ProcessesApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this17 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this17.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this17.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "_delete",
          value: function _delete() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/processes/reports"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getProcessReport",
          value: function getProcessReport() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/processes/reports"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "previewProcessRecords",
          value: function previewProcessRecords(process, uuids, bucket, appendFirst) {
            var _this18 = this;

            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (process === null || process === undefined) {
              throw new Error('Required parameter process was null or undefined when calling previewProcessRecords.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this18.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (appendFirst !== undefined && appendFirst !== null) {
              queryParameters = this.addToHttpParams(queryParameters, appendFirst, 'appendFirst');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/processes/").concat(encodeURIComponent(String(process))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "processRecords",
          value: function processRecords(process, uuids, bucket, updateDateStamp, index) {
            var _this19 = this;

            var observe = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'body';
            var reportProgress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var options = arguments.length > 7 ? arguments[7] : undefined;

            if (process === null || process === undefined) {
              throw new Error('Required parameter process was null or undefined when calling processRecords.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this19.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (updateDateStamp !== undefined && updateDateStamp !== null) {
              queryParameters = this.addToHttpParams(queryParameters, updateDateStamp, 'updateDateStamp');
            }

            if (index !== undefined && index !== null) {
              queryParameters = this.addToHttpParams(queryParameters, index, 'index');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/processes/").concat(encodeURIComponent(String(process))), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "searchAndReplace",
          value: function searchAndReplace(process, uuids, bucket, isTesting, isCaseInsensitive, vacuumMode) {
            var _this20 = this;

            var observe = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'body';
            var reportProgress = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
            var options = arguments.length > 8 ? arguments[8] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (process !== undefined && process !== null) {
              queryParameters = this.addToHttpParams(queryParameters, process, 'process');
            }

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this20.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (isTesting !== undefined && isTesting !== null) {
              queryParameters = this.addToHttpParams(queryParameters, isTesting, 'isTesting');
            }

            if (isCaseInsensitive !== undefined && isCaseInsensitive !== null) {
              queryParameters = this.addToHttpParams(queryParameters, isCaseInsensitive, 'isCaseInsensitive');
            }

            if (vacuumMode !== undefined && vacuumMode !== null) {
              queryParameters = this.addToHttpParams(queryParameters, vacuumMode, 'vacuumMode');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/processes/search-and-replace"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return ProcessesApiService;
      }();

      ProcessesApiService.ɵfac = function ProcessesApiService_Factory(t) {
        return new (t || ProcessesApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      ProcessesApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: ProcessesApiService,
        factory: ProcessesApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ProcessesApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/records.api.service.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/records.api.service.ts ***!
      \****************************************************************************************************************/

    /*! exports provided: RecordsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiRecordsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordsApiService", function () {
        return RecordsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var RecordsApiService = /*#__PURE__*/function () {
        function RecordsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, RecordsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(RecordsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this21 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this21.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this21.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "addElement",
          value: function addElement(metadataUuid, ref, direction, displayAttributes) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling addElement.');
            }

            if (ref === null || ref === undefined) {
              throw new Error('Required parameter ref was null or undefined when calling addElement.');
            }

            if (direction === null || direction === undefined) {
              throw new Error('Required parameter direction was null or undefined when calling addElement.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (ref !== undefined && ref !== null) {
              queryParameters = this.addToHttpParams(queryParameters, ref, 'ref');
            }

            if (displayAttributes !== undefined && displayAttributes !== null) {
              queryParameters = this.addToHttpParams(queryParameters, displayAttributes, 'displayAttributes');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/editor/elements/").concat(encodeURIComponent(String(direction))), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "addSamples",
          value: function addSamples(schema) {
            var _this22 = this;

            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (schema === null || schema === undefined) {
              throw new Error('Required parameter schema was null or undefined when calling addSamples.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (schema) {
              schema.forEach(function (element) {
                queryParameters = _this22.addToHttpParams(queryParameters, element, 'schema');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/samples"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "addTemplates",
          value: function addTemplates(schema) {
            var _this23 = this;

            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (schema === null || schema === undefined) {
              throw new Error('Required parameter schema was null or undefined when calling addTemplates.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (schema) {
              schema.forEach(function (element) {
                queryParameters = _this23.addToHttpParams(queryParameters, element, 'schema');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/templates"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "applyQuery",
          value: function applyQuery(metadataUuid, savedQuery) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling applyQuery.');
            }

            if (savedQuery === null || savedQuery === undefined) {
              throw new Error('Required parameter savedQuery was null or undefined when calling applyQuery.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/query/").concat(encodeURIComponent(String(savedQuery))), null, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "batchEdit",
          value: function batchEdit(batchEditParameterApiModel, uuids, bucket, updateDateStamp) {
            var _this24 = this;

            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (batchEditParameterApiModel === null || batchEditParameterApiModel === undefined) {
              throw new Error('Required parameter batchEditParameterApiModel was null or undefined when calling batchEdit.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this24.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (updateDateStamp !== undefined && updateDateStamp !== null) {
              queryParameters = this.addToHttpParams(queryParameters, updateDateStamp, 'updateDateStamp');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/batchediting"), batchEditParameterApiModel, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "cancelEdits",
          value: function cancelEdits(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling cancelEdits.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/editor"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "checkDoiStatus",
          value: function checkDoiStatus(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling checkDoiStatus.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/doi/checkPreConditions"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "checkValidation",
          value: function checkValidation(testId) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (testId === null || testId === undefined) {
              throw new Error('Required parameter testId was null or undefined when calling checkValidation.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(testId)), "/validate/inspire"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "cleanValidationStatus",
          value: function cleanValidationStatus(uuids, bucket) {
            var _this25 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this25.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records/validate"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "create",
          value: function create(sourceUuid, group, metadataType, targetUuid, isVisibleByAllGroupMembers, category, hasCategoryOfSource, isChildOfSource) {
            var _this26 = this;

            var observe = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 'body';
            var reportProgress = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;
            var options = arguments.length > 10 ? arguments[10] : undefined;

            if (sourceUuid === null || sourceUuid === undefined) {
              throw new Error('Required parameter sourceUuid was null or undefined when calling create.');
            }

            if (group === null || group === undefined) {
              throw new Error('Required parameter group was null or undefined when calling create.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (metadataType !== undefined && metadataType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataType, 'metadataType');
            }

            if (sourceUuid !== undefined && sourceUuid !== null) {
              queryParameters = this.addToHttpParams(queryParameters, sourceUuid, 'sourceUuid');
            }

            if (targetUuid !== undefined && targetUuid !== null) {
              queryParameters = this.addToHttpParams(queryParameters, targetUuid, 'targetUuid');
            }

            if (group !== undefined && group !== null) {
              queryParameters = this.addToHttpParams(queryParameters, group, 'group');
            }

            if (isVisibleByAllGroupMembers !== undefined && isVisibleByAllGroupMembers !== null) {
              queryParameters = this.addToHttpParams(queryParameters, isVisibleByAllGroupMembers, 'isVisibleByAllGroupMembers');
            }

            if (category) {
              category.forEach(function (element) {
                queryParameters = _this26.addToHttpParams(queryParameters, element, 'category');
              });
            }

            if (hasCategoryOfSource !== undefined && hasCategoryOfSource !== null) {
              queryParameters = this.addToHttpParams(queryParameters, hasCategoryOfSource, 'hasCategoryOfSource');
            }

            if (isChildOfSource !== undefined && isChildOfSource !== null) {
              queryParameters = this.addToHttpParams(queryParameters, isChildOfSource, 'isChildOfSource');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/duplicate"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "createDoi",
          value: function createDoi(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling createDoi.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/doi"), null, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteAttribute",
          value: function deleteAttribute(metadataUuid, ref, displayAttributes) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling deleteAttribute.');
            }

            if (ref === null || ref === undefined) {
              throw new Error('Required parameter ref was null or undefined when calling deleteAttribute.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (ref !== undefined && ref !== null) {
              queryParameters = this.addToHttpParams(queryParameters, ref, 'ref');
            }

            if (displayAttributes !== undefined && displayAttributes !== null) {
              queryParameters = this.addToHttpParams(queryParameters, displayAttributes, 'displayAttributes');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/editor/attributes"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteElement",
          value: function deleteElement(metadataUuid, ref, parent, displayAttributes) {
            var _this27 = this;

            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling deleteElement.');
            }

            if (ref === null || ref === undefined) {
              throw new Error('Required parameter ref was null or undefined when calling deleteElement.');
            }

            if (parent === null || parent === undefined) {
              throw new Error('Required parameter parent was null or undefined when calling deleteElement.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (ref) {
              ref.forEach(function (element) {
                queryParameters = _this27.addToHttpParams(queryParameters, element, 'ref');
              });
            }

            if (parent !== undefined && parent !== null) {
              queryParameters = this.addToHttpParams(queryParameters, parent, 'parent');
            }

            if (displayAttributes !== undefined && displayAttributes !== null) {
              queryParameters = this.addToHttpParams(queryParameters, displayAttributes, 'displayAttributes');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/editor/elements"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteRecords",
          value: function deleteRecords(uuids, bucket, withBackup) {
            var _this28 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this28.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (withBackup !== undefined && withBackup !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withBackup, 'withBackup');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteTagForRecords",
          value: function deleteTagForRecords(id, uuids, bucket) {
            var _this29 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (id === null || id === undefined) {
              throw new Error('Required parameter id was null or undefined when calling deleteTagForRecords.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this29.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (id) {
              id.forEach(function (element) {
                queryParameters = _this29.addToHttpParams(queryParameters, element, 'id');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records/tags"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteTags",
          value: function deleteTags(metadataUuid, id) {
            var _this30 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling deleteTags.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (id) {
              id.forEach(function (element) {
                queryParameters = _this30.addToHttpParams(queryParameters, element, 'id');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/tags"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "downloadBackup",
          value: function downloadBackup() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/zip'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/backups/latest"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "enableVersionControl",
          value: function enableVersionControl(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling enableVersionControl.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/versions"), null, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "enableVersionControlForRecords",
          value: function enableVersionControlForRecords(uuids, bucket) {
            var _this31 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this31.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/versions"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "exportAsCsv",
          value: function exportAsCsv(uuids, bucket) {
            var _this32 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this32.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/csv"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "exportAsMef",
          value: function exportAsMef(uuids, bucket, format, withRelated, withXLinksResolved, withXLinkAttribute, addSchemaLocation, approved, accept) {
            var _this33 = this;

            var observe = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 'body';
            var reportProgress = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : false;
            var options = arguments.length > 11 ? arguments[11] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this33.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (format !== undefined && format !== null) {
              queryParameters = this.addToHttpParams(queryParameters, format, 'format');
            }

            if (withRelated !== undefined && withRelated !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withRelated, 'withRelated');
            }

            if (withXLinksResolved !== undefined && withXLinksResolved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withXLinksResolved, 'withXLinksResolved');
            }

            if (withXLinkAttribute !== undefined && withXLinkAttribute !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withXLinkAttribute, 'withXLinkAttribute');
            }

            if (addSchemaLocation !== undefined && addSchemaLocation !== null) {
              queryParameters = this.addToHttpParams(queryParameters, addSchemaLocation, 'addSchemaLocation');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;

            if (accept !== undefined && accept !== null) {
              headers = headers.set('Accept', String(accept));
            }

            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/zip"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "exportAsPdf",
          value: function exportAsPdf(uuids, bucket) {
            var _this34 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this34.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/pdf"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getActiveUsers",
          value: function getActiveUsers(dateFrom, dateTo, groups) {
            var _this35 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (dateFrom === null || dateFrom === undefined) {
              throw new Error('Required parameter dateFrom was null or undefined when calling getActiveUsers.');
            }

            if (dateTo === null || dateTo === undefined) {
              throw new Error('Required parameter dateTo was null or undefined when calling getActiveUsers.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (dateFrom !== undefined && dateFrom !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateFrom, 'dateFrom');
            }

            if (dateTo !== undefined && dateTo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateTo, 'dateTo');
            }

            if (groups) {
              groups.forEach(function (element) {
                queryParameters = _this35.addToHttpParams(queryParameters, element, 'groups');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/reports/users"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getAllRecordExtentAsJson",
          value: function getAllRecordExtentAsJson(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getAllRecordExtentAsJson.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/extents.json"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getAllResources",
          value: function getAllResources(metadataUuid, sort, approved, filter) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getAllResources.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (sort !== undefined && sort !== null) {
              queryParameters = this.addToHttpParams(queryParameters, sort, 'sort');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            if (filter !== undefined && filter !== null) {
              queryParameters = this.addToHttpParams(queryParameters, filter, 'filter');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/attachments"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getAsRdf",
          value: function getAsRdf() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getAssociatedResources",
          value: function getAssociatedResources(metadataUuid, type, start, rows) {
            var _this36 = this;

            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getAssociatedResources.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (type) {
              type.forEach(function (element) {
                queryParameters = _this36.addToHttpParams(queryParameters, element, 'type');
              });
            }

            if (start !== undefined && start !== null) {
              queryParameters = this.addToHttpParams(queryParameters, start, 'start');
            }

            if (rows !== undefined && rows !== null) {
              queryParameters = this.addToHttpParams(queryParameters, rows, 'rows');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/related"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getFeatureCatalog",
          value: function getFeatureCatalog(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getFeatureCatalog.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/featureCatalog"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordAs",
          value: function getRecordAs(metadataUuid, addSchemaLocation, increasePopularity, withInfo, attachment, approved, accept) {
            var observe = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'body';
            var reportProgress = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
            var options = arguments.length > 9 ? arguments[9] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getRecordAs.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (addSchemaLocation !== undefined && addSchemaLocation !== null) {
              queryParameters = this.addToHttpParams(queryParameters, addSchemaLocation, 'addSchemaLocation');
            }

            if (increasePopularity !== undefined && increasePopularity !== null) {
              queryParameters = this.addToHttpParams(queryParameters, increasePopularity, 'increasePopularity');
            }

            if (withInfo !== undefined && withInfo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withInfo, 'withInfo');
            }

            if (attachment !== undefined && attachment !== null) {
              queryParameters = this.addToHttpParams(queryParameters, attachment, 'attachment');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;

            if (accept !== undefined && accept !== null) {
              headers = headers.set('Accept', String(accept));
            }

            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/formatters/xml"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordAs1",
          value: function getRecordAs1(metadataUuid, addSchemaLocation, increasePopularity, withInfo, attachment, approved, accept) {
            var observe = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'body';
            var reportProgress = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
            var options = arguments.length > 9 ? arguments[9] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getRecordAs1.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (addSchemaLocation !== undefined && addSchemaLocation !== null) {
              queryParameters = this.addToHttpParams(queryParameters, addSchemaLocation, 'addSchemaLocation');
            }

            if (increasePopularity !== undefined && increasePopularity !== null) {
              queryParameters = this.addToHttpParams(queryParameters, increasePopularity, 'increasePopularity');
            }

            if (withInfo !== undefined && withInfo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withInfo, 'withInfo');
            }

            if (attachment !== undefined && attachment !== null) {
              queryParameters = this.addToHttpParams(queryParameters, attachment, 'attachment');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;

            if (accept !== undefined && accept !== null) {
              headers = headers.set('Accept', String(accept));
            }

            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/formatters/json"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordAsZip",
          value: function getRecordAsZip(metadataUuid, format, withRelated, withXLinksResolved, withXLinkAttribute, addSchemaLocation, approved, accept) {
            var observe = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 'body';
            var reportProgress = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;
            var options = arguments.length > 10 ? arguments[10] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getRecordAsZip.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (format !== undefined && format !== null) {
              queryParameters = this.addToHttpParams(queryParameters, format, 'format');
            }

            if (withRelated !== undefined && withRelated !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withRelated, 'withRelated');
            }

            if (withXLinksResolved !== undefined && withXLinksResolved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withXLinksResolved, 'withXLinksResolved');
            }

            if (withXLinkAttribute !== undefined && withXLinkAttribute !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withXLinkAttribute, 'withXLinkAttribute');
            }

            if (addSchemaLocation !== undefined && addSchemaLocation !== null) {
              queryParameters = this.addToHttpParams(queryParameters, addSchemaLocation, 'addSchemaLocation');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;

            if (accept !== undefined && accept !== null) {
              headers = headers.set('Accept', String(accept));
            }

            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/formatters/zip"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordFormattedBy",
          value: function getRecordFormattedBy(formatterId, metadataUuid, accept, width, mdpath, language, output, approved) {
            var observe = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 'body';
            var reportProgress = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;
            var options = arguments.length > 10 ? arguments[10] : undefined;

            if (formatterId === null || formatterId === undefined) {
              throw new Error('Required parameter formatterId was null or undefined when calling getRecordFormattedBy.');
            }

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getRecordFormattedBy.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (width !== undefined && width !== null) {
              queryParameters = this.addToHttpParams(queryParameters, width, 'width');
            }

            if (mdpath !== undefined && mdpath !== null) {
              queryParameters = this.addToHttpParams(queryParameters, mdpath, 'mdpath');
            }

            if (language !== undefined && language !== null) {
              queryParameters = this.addToHttpParams(queryParameters, language, 'language');
            }

            if (output !== undefined && output !== null) {
              queryParameters = this.addToHttpParams(queryParameters, output, 'output');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;

            if (accept !== undefined && accept !== null) {
              headers = headers.set('Accept', String(accept));
            }

            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/formatters/").concat(encodeURIComponent(String(formatterId))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordSharingSettings",
          value: function getRecordSharingSettings(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getRecordSharingSettings.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/sharing"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordStatusHistory",
          value: function getRecordStatusHistory(metadataUuid, details, sortOrder) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getRecordStatusHistory.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (details !== undefined && details !== null) {
              queryParameters = this.addToHttpParams(queryParameters, details, 'details');
            }

            if (sortOrder !== undefined && sortOrder !== null) {
              queryParameters = this.addToHttpParams(queryParameters, sortOrder, 'sortOrder');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/status"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordStatusHistoryByType",
          value: function getRecordStatusHistoryByType(metadataUuid, type, details, sortOrder) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getRecordStatusHistoryByType.');
            }

            if (type === null || type === undefined) {
              throw new Error('Required parameter type was null or undefined when calling getRecordStatusHistoryByType.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (details !== undefined && details !== null) {
              queryParameters = this.addToHttpParams(queryParameters, details, 'details');
            }

            if (sortOrder !== undefined && sortOrder !== null) {
              queryParameters = this.addToHttpParams(queryParameters, sortOrder, 'sortOrder');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/status/").concat(encodeURIComponent(String(type))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordTags",
          value: function getRecordTags(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getRecordTags.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/tags"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getReportDataDownloads",
          value: function getReportDataDownloads(dateFrom, dateTo, groups) {
            var _this37 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (dateFrom === null || dateFrom === undefined) {
              throw new Error('Required parameter dateFrom was null or undefined when calling getReportDataDownloads.');
            }

            if (dateTo === null || dateTo === undefined) {
              throw new Error('Required parameter dateTo was null or undefined when calling getReportDataDownloads.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (dateFrom !== undefined && dateFrom !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateFrom, 'dateFrom');
            }

            if (dateTo !== undefined && dateTo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateTo, 'dateTo');
            }

            if (groups) {
              groups.forEach(function (element) {
                queryParameters = _this37.addToHttpParams(queryParameters, element, 'groups');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/reports/datadownloads"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getReportDataUploads",
          value: function getReportDataUploads(dateFrom, dateTo, groups) {
            var _this38 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (dateFrom === null || dateFrom === undefined) {
              throw new Error('Required parameter dateFrom was null or undefined when calling getReportDataUploads.');
            }

            if (dateTo === null || dateTo === undefined) {
              throw new Error('Required parameter dateTo was null or undefined when calling getReportDataUploads.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (dateFrom !== undefined && dateFrom !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateFrom, 'dateFrom');
            }

            if (dateTo !== undefined && dateTo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateTo, 'dateTo');
            }

            if (groups) {
              groups.forEach(function (element) {
                queryParameters = _this38.addToHttpParams(queryParameters, element, 'groups');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/reports/datauploads"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getReportInternalMetadata",
          value: function getReportInternalMetadata(dateFrom, dateTo, groups) {
            var _this39 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (dateFrom === null || dateFrom === undefined) {
              throw new Error('Required parameter dateFrom was null or undefined when calling getReportInternalMetadata.');
            }

            if (dateTo === null || dateTo === undefined) {
              throw new Error('Required parameter dateTo was null or undefined when calling getReportInternalMetadata.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (dateFrom !== undefined && dateFrom !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateFrom, 'dateFrom');
            }

            if (dateTo !== undefined && dateTo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateTo, 'dateTo');
            }

            if (groups) {
              groups.forEach(function (element) {
                queryParameters = _this39.addToHttpParams(queryParameters, element, 'groups');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/reports/metadatainternal"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getReportUpdatedMetadata",
          value: function getReportUpdatedMetadata(dateFrom, dateTo, groups) {
            var _this40 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (dateFrom === null || dateFrom === undefined) {
              throw new Error('Required parameter dateFrom was null or undefined when calling getReportUpdatedMetadata.');
            }

            if (dateTo === null || dateTo === undefined) {
              throw new Error('Required parameter dateTo was null or undefined when calling getReportUpdatedMetadata.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (dateFrom !== undefined && dateFrom !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateFrom, 'dateFrom');
            }

            if (dateTo !== undefined && dateTo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateTo, 'dateTo');
            }

            if (groups) {
              groups.forEach(function (element) {
                queryParameters = _this40.addToHttpParams(queryParameters, element, 'groups');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/reports/metadataupdated"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getResource",
          value: function getResource(metadataUuid, resourceId, approved, size) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getResource.');
            }

            if (resourceId === null || resourceId === undefined) {
              throw new Error('Required parameter resourceId was null or undefined when calling getResource.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            if (size !== undefined && size !== null) {
              queryParameters = this.addToHttpParams(queryParameters, size, 'size');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/attachments/").concat(encodeURIComponent(String(resourceId))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSavedQueries",
          value: function getSavedQueries(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getSavedQueries.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/query"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSharingSettings",
          value: function getSharingSettings() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/sharing"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getStatus",
          value: function getStatus(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getStatus.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/status/workflow/last"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSuggestions",
          value: function getSuggestions(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getSuggestions.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/processes"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getTestSuites",
          value: function getTestSuites(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getTestSuites.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/validate/inspire/testsuites"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getWorkflowStatusByType",
          value: function getWorkflowStatusByType(type, details, author, owner, id, record, uuid, dateFrom, dateTo, from, size) {
            var _this41 = this;

            var observe = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 'body';
            var reportProgress = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : false;
            var options = arguments.length > 13 ? arguments[13] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (type) {
              type.forEach(function (element) {
                queryParameters = _this41.addToHttpParams(queryParameters, element, 'type');
              });
            }

            if (details !== undefined && details !== null) {
              queryParameters = this.addToHttpParams(queryParameters, details, 'details');
            }

            if (author) {
              author.forEach(function (element) {
                queryParameters = _this41.addToHttpParams(queryParameters, element, 'author');
              });
            }

            if (owner) {
              owner.forEach(function (element) {
                queryParameters = _this41.addToHttpParams(queryParameters, element, 'owner');
              });
            }

            if (id) {
              id.forEach(function (element) {
                queryParameters = _this41.addToHttpParams(queryParameters, element, 'id');
              });
            }

            if (record) {
              record.forEach(function (element) {
                queryParameters = _this41.addToHttpParams(queryParameters, element, 'record');
              });
            }

            if (uuid) {
              uuid.forEach(function (element) {
                queryParameters = _this41.addToHttpParams(queryParameters, element, 'uuid');
              });
            }

            if (dateFrom !== undefined && dateFrom !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateFrom, 'dateFrom');
            }

            if (dateTo !== undefined && dateTo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dateTo, 'dateTo');
            }

            if (from !== undefined && from !== null) {
              queryParameters = this.addToHttpParams(queryParameters, from, 'from');
            }

            if (size !== undefined && size !== null) {
              queryParameters = this.addToHttpParams(queryParameters, size, 'size');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/status/search"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "index",
          value: function index(uuids, bucket) {
            var _this42 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this42.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/index"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "insert",
          value: function insert(metadataType, url, serverFolder, recursiveSearch, publishToAll, assignToCatalog, uuidProcessing, group, category, rejectIfInvalid, transformWith, schema, extra, body) {
            var _this43 = this;

            var observe = arguments.length > 14 && arguments[14] !== undefined ? arguments[14] : 'body';
            var reportProgress = arguments.length > 15 && arguments[15] !== undefined ? arguments[15] : false;
            var options = arguments.length > 16 ? arguments[16] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (metadataType !== undefined && metadataType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataType, 'metadataType');
            }

            if (url) {
              url.forEach(function (element) {
                queryParameters = _this43.addToHttpParams(queryParameters, element, 'url');
              });
            }

            if (serverFolder !== undefined && serverFolder !== null) {
              queryParameters = this.addToHttpParams(queryParameters, serverFolder, 'serverFolder');
            }

            if (recursiveSearch !== undefined && recursiveSearch !== null) {
              queryParameters = this.addToHttpParams(queryParameters, recursiveSearch, 'recursiveSearch');
            }

            if (publishToAll !== undefined && publishToAll !== null) {
              queryParameters = this.addToHttpParams(queryParameters, publishToAll, 'publishToAll');
            }

            if (assignToCatalog !== undefined && assignToCatalog !== null) {
              queryParameters = this.addToHttpParams(queryParameters, assignToCatalog, 'assignToCatalog');
            }

            if (uuidProcessing !== undefined && uuidProcessing !== null) {
              queryParameters = this.addToHttpParams(queryParameters, uuidProcessing, 'uuidProcessing');
            }

            if (group !== undefined && group !== null) {
              queryParameters = this.addToHttpParams(queryParameters, group, 'group');
            }

            if (category) {
              category.forEach(function (element) {
                queryParameters = _this43.addToHttpParams(queryParameters, element, 'category');
              });
            }

            if (rejectIfInvalid !== undefined && rejectIfInvalid !== null) {
              queryParameters = this.addToHttpParams(queryParameters, rejectIfInvalid, 'rejectIfInvalid');
            }

            if (transformWith !== undefined && transformWith !== null) {
              queryParameters = this.addToHttpParams(queryParameters, transformWith, 'transformWith');
            }

            if (schema !== undefined && schema !== null) {
              queryParameters = this.addToHttpParams(queryParameters, schema, 'schema');
            }

            if (extra !== undefined && extra !== null) {
              queryParameters = this.addToHttpParams(queryParameters, extra, 'extra');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/xml', 'application/json', 'application/x-www-form-urlencoded'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records"), body, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "insertFile",
          value: function insertFile(metadataType, file, uuidProcessing, group, category, rejectIfInvalid, publishToAll, assignToCatalog, transformWith, schema, extra) {
            var _this44 = this;

            var observe = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 'body';
            var reportProgress = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : false;
            var options = arguments.length > 13 ? arguments[13] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (metadataType !== undefined && metadataType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataType, 'metadataType');
            }

            if (file) {
              file.forEach(function (element) {
                queryParameters = _this44.addToHttpParams(queryParameters, element, 'file');
              });
            }

            if (uuidProcessing !== undefined && uuidProcessing !== null) {
              queryParameters = this.addToHttpParams(queryParameters, uuidProcessing, 'uuidProcessing');
            }

            if (group !== undefined && group !== null) {
              queryParameters = this.addToHttpParams(queryParameters, group, 'group');
            }

            if (category) {
              category.forEach(function (element) {
                queryParameters = _this44.addToHttpParams(queryParameters, element, 'category');
              });
            }

            if (rejectIfInvalid !== undefined && rejectIfInvalid !== null) {
              queryParameters = this.addToHttpParams(queryParameters, rejectIfInvalid, 'rejectIfInvalid');
            }

            if (publishToAll !== undefined && publishToAll !== null) {
              queryParameters = this.addToHttpParams(queryParameters, publishToAll, 'publishToAll');
            }

            if (assignToCatalog !== undefined && assignToCatalog !== null) {
              queryParameters = this.addToHttpParams(queryParameters, assignToCatalog, 'assignToCatalog');
            }

            if (transformWith !== undefined && transformWith !== null) {
              queryParameters = this.addToHttpParams(queryParameters, transformWith, 'transformWith');
            }

            if (schema !== undefined && schema !== null) {
              queryParameters = this.addToHttpParams(queryParameters, schema, 'schema');
            }

            if (extra !== undefined && extra !== null) {
              queryParameters = this.addToHttpParams(queryParameters, extra, 'extra');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "insertOgcMapContextFile",
          value: function insertOgcMapContextFile(title, recordAbstract, xml, filename, url, viewerUrl, overview, overviewFilename, topic, publishToAll, uuidProcessing, group) {
            var observe = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : 'body';
            var reportProgress = arguments.length > 13 && arguments[13] !== undefined ? arguments[13] : false;
            var options = arguments.length > 14 ? arguments[14] : undefined;

            if (title === null || title === undefined) {
              throw new Error('Required parameter title was null or undefined when calling insertOgcMapContextFile.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (title !== undefined && title !== null) {
              queryParameters = this.addToHttpParams(queryParameters, title, 'title');
            }

            if (recordAbstract !== undefined && recordAbstract !== null) {
              queryParameters = this.addToHttpParams(queryParameters, recordAbstract, 'recordAbstract');
            }

            if (xml !== undefined && xml !== null) {
              queryParameters = this.addToHttpParams(queryParameters, xml, 'xml');
            }

            if (filename !== undefined && filename !== null) {
              queryParameters = this.addToHttpParams(queryParameters, filename, 'filename');
            }

            if (url !== undefined && url !== null) {
              queryParameters = this.addToHttpParams(queryParameters, url, 'url');
            }

            if (viewerUrl !== undefined && viewerUrl !== null) {
              queryParameters = this.addToHttpParams(queryParameters, viewerUrl, 'viewerUrl');
            }

            if (overview !== undefined && overview !== null) {
              queryParameters = this.addToHttpParams(queryParameters, overview, 'overview');
            }

            if (overviewFilename !== undefined && overviewFilename !== null) {
              queryParameters = this.addToHttpParams(queryParameters, overviewFilename, 'overviewFilename');
            }

            if (topic !== undefined && topic !== null) {
              queryParameters = this.addToHttpParams(queryParameters, topic, 'topic');
            }

            if (publishToAll !== undefined && publishToAll !== null) {
              queryParameters = this.addToHttpParams(queryParameters, publishToAll, 'publishToAll');
            }

            if (uuidProcessing !== undefined && uuidProcessing !== null) {
              queryParameters = this.addToHttpParams(queryParameters, uuidProcessing, 'uuidProcessing');
            }

            if (group !== undefined && group !== null) {
              queryParameters = this.addToHttpParams(queryParameters, group, 'group');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records/importfrommap"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "patchResource",
          value: function patchResource(metadataUuid, resourceId, visibility, approved) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling patchResource.');
            }

            if (resourceId === null || resourceId === undefined) {
              throw new Error('Required parameter resourceId was null or undefined when calling patchResource.');
            }

            if (visibility === null || visibility === undefined) {
              throw new Error('Required parameter visibility was null or undefined when calling patchResource.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (visibility !== undefined && visibility !== null) {
              queryParameters = this.addToHttpParams(queryParameters, visibility, 'visibility');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.patch("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/attachments/").concat(encodeURIComponent(String(resourceId))), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "processRecord",
          value: function processRecord(metadataUuid, process) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling processRecord.');
            }

            if (process === null || process === undefined) {
              throw new Error('Required parameter process was null or undefined when calling processRecord.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/processes/").concat(encodeURIComponent(String(process))), null, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "processRecordPreview",
          value: function processRecordPreview(metadataUuid, process) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling processRecordPreview.');
            }

            if (process === null || process === undefined) {
              throw new Error('Required parameter process was null or undefined when calling processRecordPreview.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/processes/").concat(encodeURIComponent(String(process))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "publish",
          value: function publish(uuids, bucket) {
            var _this45 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this45.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/publish"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "putResource",
          value: function putResource(metadataUuid, visibility, approved, inlineObject1ApiModel) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling putResource.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (visibility !== undefined && visibility !== null) {
              queryParameters = this.addToHttpParams(queryParameters, visibility, 'visibility');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/attachments"), inlineObject1ApiModel, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "putResourceFromURL",
          value: function putResourceFromURL(metadataUuid, url, visibility, approved) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling putResourceFromURL.');
            }

            if (url === null || url === undefined) {
              throw new Error('Required parameter url was null or undefined when calling putResourceFromURL.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (visibility !== undefined && visibility !== null) {
              queryParameters = this.addToHttpParams(queryParameters, visibility, 'visibility');
            }

            if (url !== undefined && url !== null) {
              queryParameters = this.addToHttpParams(queryParameters, url, 'url');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/attachments"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "rateRecord",
          value: function rateRecord(metadataUuid, body) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling rateRecord.');
            }

            if (body === null || body === undefined) {
              throw new Error('Required parameter body was null or undefined when calling rateRecord.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/rate"), body, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "restoreAtStatusSave",
          value: function restoreAtStatusSave(metadataUuid, statusId, userId, changeDate) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling restoreAtStatusSave.');
            }

            if (statusId === null || statusId === undefined) {
              throw new Error('Required parameter statusId was null or undefined when calling restoreAtStatusSave.');
            }

            if (userId === null || userId === undefined) {
              throw new Error('Required parameter userId was null or undefined when calling restoreAtStatusSave.');
            }

            if (changeDate === null || changeDate === undefined) {
              throw new Error('Required parameter changeDate was null or undefined when calling restoreAtStatusSave.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/status/").concat(encodeURIComponent(String(statusId)), ".").concat(encodeURIComponent(String(userId)), ".").concat(encodeURIComponent(String(changeDate)), "/restore"), null, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "saveEdits",
          value: function saveEdits(metadataUuid, tab, withAttributes, withValidationErrors, minor, status, commit, terminate, data) {
            var observe = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 'body';
            var reportProgress = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : false;
            var options = arguments.length > 11 ? arguments[11] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling saveEdits.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (tab !== undefined && tab !== null) {
              queryParameters = this.addToHttpParams(queryParameters, tab, 'tab');
            }

            if (withAttributes !== undefined && withAttributes !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withAttributes, 'withAttributes');
            }

            if (withValidationErrors !== undefined && withValidationErrors !== null) {
              queryParameters = this.addToHttpParams(queryParameters, withValidationErrors, 'withValidationErrors');
            }

            if (minor !== undefined && minor !== null) {
              queryParameters = this.addToHttpParams(queryParameters, minor, 'minor');
            }

            if (status !== undefined && status !== null) {
              queryParameters = this.addToHttpParams(queryParameters, status, 'status');
            }

            if (commit !== undefined && commit !== null) {
              queryParameters = this.addToHttpParams(queryParameters, commit, 'commit');
            }

            if (terminate !== undefined && terminate !== null) {
              queryParameters = this.addToHttpParams(queryParameters, terminate, 'terminate');
            }

            if (data !== undefined && data !== null) {
              queryParameters = this.addToHttpParams(queryParameters, data, 'data');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/editor"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "saveThumbnail",
          value: function saveThumbnail(metadataUuid, jsonConfig, rotationAngle) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling saveThumbnail.');
            }

            if (jsonConfig === null || jsonConfig === undefined) {
              throw new Error('Required parameter jsonConfig was null or undefined when calling saveThumbnail.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (jsonConfig !== undefined && jsonConfig !== null) {
              queryParameters = this.addToHttpParams(queryParameters, jsonConfig, 'jsonConfig');
            }

            if (rotationAngle !== undefined && rotationAngle !== null) {
              queryParameters = this.addToHttpParams(queryParameters, rotationAngle, 'rotationAngle');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/attachments/print-thumbnail"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "setGroupAndOwner",
          value: function setGroupAndOwner(groupIdentifier, userIdentifier, uuids, bucket, approved) {
            var _this46 = this;

            var observe = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'body';
            var reportProgress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var options = arguments.length > 7 ? arguments[7] : undefined;

            if (groupIdentifier === null || groupIdentifier === undefined) {
              throw new Error('Required parameter groupIdentifier was null or undefined when calling setGroupAndOwner.');
            }

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling setGroupAndOwner.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this46.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (groupIdentifier !== undefined && groupIdentifier !== null) {
              queryParameters = this.addToHttpParams(queryParameters, groupIdentifier, 'groupIdentifier');
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (userIdentifier !== undefined && userIdentifier !== null) {
              queryParameters = this.addToHttpParams(queryParameters, userIdentifier, 'userIdentifier');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/ownership"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "setRecordGroup",
          value: function setRecordGroup(metadataUuid, body) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling setRecordGroup.');
            }

            if (body === null || body === undefined) {
              throw new Error('Required parameter body was null or undefined when calling setRecordGroup.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/group"), body, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "setRecordOwnership",
          value: function setRecordOwnership(metadataUuid, groupIdentifier, userIdentifier, approved) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling setRecordOwnership.');
            }

            if (groupIdentifier === null || groupIdentifier === undefined) {
              throw new Error('Required parameter groupIdentifier was null or undefined when calling setRecordOwnership.');
            }

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling setRecordOwnership.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (groupIdentifier !== undefined && groupIdentifier !== null) {
              queryParameters = this.addToHttpParams(queryParameters, groupIdentifier, 'groupIdentifier');
            }

            if (userIdentifier !== undefined && userIdentifier !== null) {
              queryParameters = this.addToHttpParams(queryParameters, userIdentifier, 'userIdentifier');
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/ownership"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "share",
          value: function share(sharingParameterApiModel, uuids, bucket) {
            var _this47 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (sharingParameterApiModel === null || sharingParameterApiModel === undefined) {
              throw new Error('Required parameter sharingParameterApiModel was null or undefined when calling share.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this47.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/sharing"), sharingParameterApiModel, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "showStatusAfter",
          value: function showStatusAfter(metadataUuid, statusId, userId, changeDate) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling showStatusAfter.');
            }

            if (statusId === null || statusId === undefined) {
              throw new Error('Required parameter statusId was null or undefined when calling showStatusAfter.');
            }

            if (userId === null || userId === undefined) {
              throw new Error('Required parameter userId was null or undefined when calling showStatusAfter.');
            }

            if (changeDate === null || changeDate === undefined) {
              throw new Error('Required parameter changeDate was null or undefined when calling showStatusAfter.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/status/").concat(encodeURIComponent(String(statusId)), ".").concat(encodeURIComponent(String(userId)), ".").concat(encodeURIComponent(String(changeDate)), "/after"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "showStatusBefore",
          value: function showStatusBefore(metadataUuid, statusId, userId, changeDate) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling showStatusBefore.');
            }

            if (statusId === null || statusId === undefined) {
              throw new Error('Required parameter statusId was null or undefined when calling showStatusBefore.');
            }

            if (userId === null || userId === undefined) {
              throw new Error('Required parameter userId was null or undefined when calling showStatusBefore.');
            }

            if (changeDate === null || changeDate === undefined) {
              throw new Error('Required parameter changeDate was null or undefined when calling showStatusBefore.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/status/").concat(encodeURIComponent(String(statusId)), ".").concat(encodeURIComponent(String(userId)), ".").concat(encodeURIComponent(String(changeDate)), "/before"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "tagRecord",
          value: function tagRecord(metadataUuid, id, clear) {
            var _this48 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling tagRecord.');
            }

            if (id === null || id === undefined) {
              throw new Error('Required parameter id was null or undefined when calling tagRecord.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (id) {
              id.forEach(function (element) {
                queryParameters = _this48.addToHttpParams(queryParameters, element, 'id');
              });
            }

            if (clear !== undefined && clear !== null) {
              queryParameters = this.addToHttpParams(queryParameters, clear, 'clear');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/tags"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "tagRecords",
          value: function tagRecords(uuids, bucket, id, removeId, clear) {
            var _this49 = this;

            var observe = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'body';
            var reportProgress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var options = arguments.length > 7 ? arguments[7] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this49.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (id) {
              id.forEach(function (element) {
                queryParameters = _this49.addToHttpParams(queryParameters, element, 'id');
              });
            }

            if (removeId) {
              removeId.forEach(function (element) {
                queryParameters = _this49.addToHttpParams(queryParameters, element, 'removeId');
              });
            }

            if (clear !== undefined && clear !== null) {
              queryParameters = this.addToHttpParams(queryParameters, clear, 'clear');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/tags"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "trigger",
          value: function trigger() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/backups"), null, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "unpublish",
          value: function unpublish(uuids, bucket) {
            var _this50 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this50.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/unpublish"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "unregisterDoi",
          value: function unregisterDoi(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling unregisterDoi.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/doi"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "validateRecord",
          value: function validateRecord(metadataUuid, isvalid) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling validateRecord.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (isvalid !== undefined && isvalid !== null) {
              queryParameters = this.addToHttpParams(queryParameters, isvalid, 'isvalid');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/validate/internal"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "validateRecordForInspire",
          value: function validateRecordForInspire(metadataUuid, testsuite, mode) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling validateRecordForInspire.');
            }

            if (testsuite === null || testsuite === undefined) {
              throw new Error('Required parameter testsuite was null or undefined when calling validateRecordForInspire.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (testsuite !== undefined && testsuite !== null) {
              queryParameters = this.addToHttpParams(queryParameters, testsuite, 'testsuite');
            }

            if (mode !== undefined && mode !== null) {
              queryParameters = this.addToHttpParams(queryParameters, mode, 'mode');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/validate/inspire"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "validateRecords",
          value: function validateRecords(uuids, approved, bucket) {
            var _this51 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this51.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (approved !== undefined && approved !== null) {
              queryParameters = this.addToHttpParams(queryParameters, approved, 'approved');
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/validate"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "validateRecordsInspire",
          value: function validateRecordsInspire(uuids, bucket, mode) {
            var _this52 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this52.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (mode !== undefined && mode !== null) {
              queryParameters = this.addToHttpParams(queryParameters, mode, 'mode');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/records/validate/inspire"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return RecordsApiService;
      }();

      RecordsApiService.ɵfac = function RecordsApiService_Factory(t) {
        return new (t || RecordsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      RecordsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: RecordsApiService,
        factory: RecordsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/regions.api.service.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/regions.api.service.ts ***!
      \****************************************************************************************************************/

    /*! exports provided: RegionsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiRegionsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RegionsApiService", function () {
        return RegionsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var RegionsApiService = /*#__PURE__*/function () {
        function RegionsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, RegionsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(RegionsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this53 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this53.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this53.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getRegionTypes",
          value: function getRegionTypes() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/regions/types"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRegions",
          value: function getRegions(label, categoryId, maxRecords) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (label !== undefined && label !== null) {
              queryParameters = this.addToHttpParams(queryParameters, label, 'label');
            }

            if (categoryId !== undefined && categoryId !== null) {
              queryParameters = this.addToHttpParams(queryParameters, categoryId, 'categoryId');
            }

            if (maxRecords !== undefined && maxRecords !== null) {
              queryParameters = this.addToHttpParams(queryParameters, maxRecords, 'maxRecords');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/regions"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return RegionsApiService;
      }();

      RegionsApiService.ɵfac = function RegionsApiService_Factory(t) {
        return new (t || RegionsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      RegionsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: RegionsApiService,
        factory: RegionsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RegionsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/registries.api.service.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/registries.api.service.ts ***!
      \*******************************************************************************************************************/

    /*! exports provided: RegistriesApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiRegistriesApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RegistriesApiService", function () {
        return RegistriesApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var RegistriesApiService = /*#__PURE__*/function () {
        function RegistriesApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, RegistriesApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }
        /**
         * @param consumes string[] mime-types
         * @return true: consumes contains 'multipart/form-data', false: otherwise
         */


        _createClass(RegistriesApiService, [{
          key: "canConsumeForm",
          value: function canConsumeForm(consumes) {
            var form = 'multipart/form-data';

            var _iterator2 = _createForOfIteratorHelper(consumes),
                _step2;

            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                var consume = _step2.value;

                if (form === consume) {
                  return true;
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }

            return false;
          }
        }, {
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this54 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this54.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this54.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "deleteThesaurus",
          value: function deleteThesaurus(thesaurus) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (thesaurus === null || thesaurus === undefined) {
              throw new Error('Required parameter thesaurus was null or undefined when calling deleteThesaurus.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/registries/vocabularies/").concat(encodeURIComponent(String(thesaurus))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getCrs",
          value: function getCrs(id) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (id === null || id === undefined) {
              throw new Error('Required parameter id was null or undefined when calling getCrs.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/registries/crs/").concat(encodeURIComponent(String(id))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getCrsTypes",
          value: function getCrsTypes() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/registries/crs/types"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getEntry",
          value: function getEntry(uuid, process, transformation, lang, schema) {
            var _this55 = this;

            var observe = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'body';
            var reportProgress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var options = arguments.length > 7 ? arguments[7] : undefined;

            if (uuid === null || uuid === undefined) {
              throw new Error('Required parameter uuid was null or undefined when calling getEntry.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (process) {
              process.forEach(function (element) {
                queryParameters = _this55.addToHttpParams(queryParameters, element, 'process');
              });
            }

            if (transformation !== undefined && transformation !== null) {
              queryParameters = this.addToHttpParams(queryParameters, transformation, 'transformation');
            }

            if (lang) {
              lang.forEach(function (element) {
                queryParameters = _this55.addToHttpParams(queryParameters, element, 'lang');
              });
            }

            if (schema !== undefined && schema !== null) {
              queryParameters = this.addToHttpParams(queryParameters, schema, 'schema');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/registries/entries/").concat(encodeURIComponent(String(uuid))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getKeywordById",
          value: function getKeywordById(id, thesaurus, lang, keywordOnly, transformation, langMap, accept) {
            var _this56 = this;

            var observe = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'body';
            var reportProgress = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
            var options = arguments.length > 9 ? arguments[9] : undefined;

            if (id === null || id === undefined) {
              throw new Error('Required parameter id was null or undefined when calling getKeywordById.');
            }

            if (thesaurus === null || thesaurus === undefined) {
              throw new Error('Required parameter thesaurus was null or undefined when calling getKeywordById.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (id !== undefined && id !== null) {
              queryParameters = this.addToHttpParams(queryParameters, id, 'id');
            }

            if (thesaurus !== undefined && thesaurus !== null) {
              queryParameters = this.addToHttpParams(queryParameters, thesaurus, 'thesaurus');
            }

            if (lang) {
              lang.forEach(function (element) {
                queryParameters = _this56.addToHttpParams(queryParameters, element, 'lang');
              });
            }

            if (keywordOnly !== undefined && keywordOnly !== null) {
              queryParameters = this.addToHttpParams(queryParameters, keywordOnly, 'keywordOnly');
            }

            if (transformation !== undefined && transformation !== null) {
              queryParameters = this.addToHttpParams(queryParameters, transformation, 'transformation');
            }

            if (langMap !== undefined && langMap !== null) {
              queryParameters = this.addToHttpParams(queryParameters, langMap, 'langMap');
            }

            var headers = this.defaultHeaders;

            if (accept !== undefined && accept !== null) {
              headers = headers.set('Accept', String(accept));
            }

            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/registries/vocabularies/keyword"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getThesaurus",
          value: function getThesaurus(thesaurus) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (thesaurus === null || thesaurus === undefined) {
              throw new Error('Required parameter thesaurus was null or undefined when calling getThesaurus.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/registries/vocabularies/").concat(encodeURIComponent(String(thesaurus))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "importCsvAsThesaurus",
          value: function importCsvAsThesaurus(type, dir, encoding, thesaurusNs, languages, thesaurusTitle, conceptIdColumn, conceptLabelColumn, conceptDescriptionColumn, conceptBroaderIdColumn, conceptNarrowerIdColumn, conceptRelatedIdColumn, conceptLinkSeparator, importAsThesaurus, inlineObject3ApiModel) {
            var _this57 = this;

            var observe = arguments.length > 15 && arguments[15] !== undefined ? arguments[15] : 'body';
            var reportProgress = arguments.length > 16 && arguments[16] !== undefined ? arguments[16] : false;
            var options = arguments.length > 17 ? arguments[17] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (type !== undefined && type !== null) {
              queryParameters = this.addToHttpParams(queryParameters, type, 'type');
            }

            if (dir !== undefined && dir !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dir, 'dir');
            }

            if (encoding !== undefined && encoding !== null) {
              queryParameters = this.addToHttpParams(queryParameters, encoding, 'encoding');
            }

            if (thesaurusNs !== undefined && thesaurusNs !== null) {
              queryParameters = this.addToHttpParams(queryParameters, thesaurusNs, 'thesaurusNs');
            }

            if (languages) {
              languages.forEach(function (element) {
                queryParameters = _this57.addToHttpParams(queryParameters, element, 'languages');
              });
            }

            if (thesaurusTitle !== undefined && thesaurusTitle !== null) {
              queryParameters = this.addToHttpParams(queryParameters, thesaurusTitle, 'thesaurusTitle');
            }

            if (conceptIdColumn !== undefined && conceptIdColumn !== null) {
              queryParameters = this.addToHttpParams(queryParameters, conceptIdColumn, 'conceptIdColumn');
            }

            if (conceptLabelColumn !== undefined && conceptLabelColumn !== null) {
              queryParameters = this.addToHttpParams(queryParameters, conceptLabelColumn, 'conceptLabelColumn');
            }

            if (conceptDescriptionColumn !== undefined && conceptDescriptionColumn !== null) {
              queryParameters = this.addToHttpParams(queryParameters, conceptDescriptionColumn, 'conceptDescriptionColumn');
            }

            if (conceptBroaderIdColumn !== undefined && conceptBroaderIdColumn !== null) {
              queryParameters = this.addToHttpParams(queryParameters, conceptBroaderIdColumn, 'conceptBroaderIdColumn');
            }

            if (conceptNarrowerIdColumn !== undefined && conceptNarrowerIdColumn !== null) {
              queryParameters = this.addToHttpParams(queryParameters, conceptNarrowerIdColumn, 'conceptNarrowerIdColumn');
            }

            if (conceptRelatedIdColumn !== undefined && conceptRelatedIdColumn !== null) {
              queryParameters = this.addToHttpParams(queryParameters, conceptRelatedIdColumn, 'conceptRelatedIdColumn');
            }

            if (conceptLinkSeparator !== undefined && conceptLinkSeparator !== null) {
              queryParameters = this.addToHttpParams(queryParameters, conceptLinkSeparator, 'conceptLinkSeparator');
            }

            if (importAsThesaurus !== undefined && importAsThesaurus !== null) {
              queryParameters = this.addToHttpParams(queryParameters, importAsThesaurus, 'importAsThesaurus');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/registries/vocabularies/import/csv"), inlineObject3ApiModel, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "importSpatialEntries",
          value: function importSpatialEntries(uuidAttribute, uuidPattern, descriptionAttribute, geomProjectionTo, lenient, onlyBoundingBox, process, schema, uuidProcessing, group, file) {
            var observe = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 'body';
            var reportProgress = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : false;
            var options = arguments.length > 13 ? arguments[13] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuidAttribute !== undefined && uuidAttribute !== null) {
              queryParameters = this.addToHttpParams(queryParameters, uuidAttribute, 'uuidAttribute');
            }

            if (uuidPattern !== undefined && uuidPattern !== null) {
              queryParameters = this.addToHttpParams(queryParameters, uuidPattern, 'uuidPattern');
            }

            if (descriptionAttribute !== undefined && descriptionAttribute !== null) {
              queryParameters = this.addToHttpParams(queryParameters, descriptionAttribute, 'descriptionAttribute');
            }

            if (geomProjectionTo !== undefined && geomProjectionTo !== null) {
              queryParameters = this.addToHttpParams(queryParameters, geomProjectionTo, 'geomProjectionTo');
            }

            if (lenient !== undefined && lenient !== null) {
              queryParameters = this.addToHttpParams(queryParameters, lenient, 'lenient');
            }

            if (onlyBoundingBox !== undefined && onlyBoundingBox !== null) {
              queryParameters = this.addToHttpParams(queryParameters, onlyBoundingBox, 'onlyBoundingBox');
            }

            if (process !== undefined && process !== null) {
              queryParameters = this.addToHttpParams(queryParameters, process, 'process');
            }

            if (schema !== undefined && schema !== null) {
              queryParameters = this.addToHttpParams(queryParameters, schema, 'schema');
            }

            if (uuidProcessing !== undefined && uuidProcessing !== null) {
              queryParameters = this.addToHttpParams(queryParameters, uuidProcessing, 'uuidProcessing');
            }

            if (group !== undefined && group !== null) {
              queryParameters = this.addToHttpParams(queryParameters, group, 'group');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['multipart/form-data'];
            var canConsumeForm = this.canConsumeForm(consumes);
            var formParams;
            var useForm = false;
            var convertFormParamsToString = false; // use FormData to transmit files using content-type "multipart/form-data"
            // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data

            useForm = canConsumeForm;

            if (useForm) {
              formParams = new FormData();
            } else {
              formParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
                encoder: this.encoder
              });
            }

            if (file !== undefined) {
              formParams = formParams.append('file', file) || formParams;
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/registries/actions/entries/import/spatial"), convertFormParamsToString ? formParams.toString() : formParams, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "previewUpdatedRecordEntries",
          value: function previewUpdatedRecordEntries(xpath, uuids, bucket, identifierXpath, propertiesToCopy, substituteAsXLink, fq) {
            var _this58 = this;

            var observe = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'body';
            var reportProgress = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
            var options = arguments.length > 9 ? arguments[9] : undefined;

            if (xpath === null || xpath === undefined) {
              throw new Error('Required parameter xpath was null or undefined when calling previewUpdatedRecordEntries.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this58.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (xpath !== undefined && xpath !== null) {
              queryParameters = this.addToHttpParams(queryParameters, xpath, 'xpath');
            }

            if (identifierXpath !== undefined && identifierXpath !== null) {
              queryParameters = this.addToHttpParams(queryParameters, identifierXpath, 'identifierXpath');
            }

            if (propertiesToCopy) {
              propertiesToCopy.forEach(function (element) {
                queryParameters = _this58.addToHttpParams(queryParameters, element, 'propertiesToCopy');
              });
            }

            if (substituteAsXLink !== undefined && substituteAsXLink !== null) {
              queryParameters = this.addToHttpParams(queryParameters, substituteAsXLink, 'substituteAsXLink');
            }

            if (fq !== undefined && fq !== null) {
              queryParameters = this.addToHttpParams(queryParameters, fq, 'fq');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/registries/actions/entries/synchronize"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "searchCrs",
          value: function searchCrs(q, type, rows) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (q !== undefined && q !== null) {
              queryParameters = this.addToHttpParams(queryParameters, q, 'q');
            }

            if (type !== undefined && type !== null) {
              queryParameters = this.addToHttpParams(queryParameters, type, 'type');
            }

            if (rows !== undefined && rows !== null) {
              queryParameters = this.addToHttpParams(queryParameters, rows, 'rows');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/registries/crs"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "searchKeywords",
          value: function searchKeywords(q, lang, rows, start, pLang, thesaurus, type, uri, sort) {
            var _this59 = this;

            var observe = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 'body';
            var reportProgress = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : false;
            var options = arguments.length > 11 ? arguments[11] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (q !== undefined && q !== null) {
              queryParameters = this.addToHttpParams(queryParameters, q, 'q');
            }

            if (lang !== undefined && lang !== null) {
              queryParameters = this.addToHttpParams(queryParameters, lang, 'lang');
            }

            if (rows !== undefined && rows !== null) {
              queryParameters = this.addToHttpParams(queryParameters, rows, 'rows');
            }

            if (start !== undefined && start !== null) {
              queryParameters = this.addToHttpParams(queryParameters, start, 'start');
            }

            if (pLang) {
              pLang.forEach(function (element) {
                queryParameters = _this59.addToHttpParams(queryParameters, element, 'pLang');
              });
            }

            if (thesaurus) {
              thesaurus.forEach(function (element) {
                queryParameters = _this59.addToHttpParams(queryParameters, element, 'thesaurus');
              });
            }

            if (type !== undefined && type !== null) {
              queryParameters = this.addToHttpParams(queryParameters, type, 'type');
            }

            if (uri !== undefined && uri !== null) {
              queryParameters = this.addToHttpParams(queryParameters, uri, 'uri');
            }

            if (sort !== undefined && sort !== null) {
              queryParameters = this.addToHttpParams(queryParameters, sort, 'sort');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/registries/vocabularies/search"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updateRecordEntries",
          value: function updateRecordEntries(xpath, uuids, bucket, identifierXpath, propertiesToCopy, substituteAsXLink, fq) {
            var _this60 = this;

            var observe = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'body';
            var reportProgress = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
            var options = arguments.length > 9 ? arguments[9] : undefined;

            if (xpath === null || xpath === undefined) {
              throw new Error('Required parameter xpath was null or undefined when calling updateRecordEntries.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuids) {
              uuids.forEach(function (element) {
                queryParameters = _this60.addToHttpParams(queryParameters, element, 'uuids');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            if (xpath !== undefined && xpath !== null) {
              queryParameters = this.addToHttpParams(queryParameters, xpath, 'xpath');
            }

            if (identifierXpath !== undefined && identifierXpath !== null) {
              queryParameters = this.addToHttpParams(queryParameters, identifierXpath, 'identifierXpath');
            }

            if (propertiesToCopy) {
              propertiesToCopy.forEach(function (element) {
                queryParameters = _this60.addToHttpParams(queryParameters, element, 'propertiesToCopy');
              });
            }

            if (substituteAsXLink !== undefined && substituteAsXLink !== null) {
              queryParameters = this.addToHttpParams(queryParameters, substituteAsXLink, 'substituteAsXLink');
            }

            if (fq !== undefined && fq !== null) {
              queryParameters = this.addToHttpParams(queryParameters, fq, 'fq');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/registries/actions/entries/synchronize"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "uploadThesaurus",
          value: function uploadThesaurus(type, dir, stylesheet, inlineObject2ApiModel) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (type !== undefined && type !== null) {
              queryParameters = this.addToHttpParams(queryParameters, type, 'type');
            }

            if (dir !== undefined && dir !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dir, 'dir');
            }

            if (stylesheet !== undefined && stylesheet !== null) {
              queryParameters = this.addToHttpParams(queryParameters, stylesheet, 'stylesheet');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/registries/vocabularies"), inlineObject2ApiModel, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "uploadThesaurusFromUrl",
          value: function uploadThesaurusFromUrl(url, registryUrl, registryType, registryLanguage, type, dir, stylesheet) {
            var _this61 = this;

            var observe = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'body';
            var reportProgress = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
            var options = arguments.length > 9 ? arguments[9] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (url !== undefined && url !== null) {
              queryParameters = this.addToHttpParams(queryParameters, url, 'url');
            }

            if (registryUrl !== undefined && registryUrl !== null) {
              queryParameters = this.addToHttpParams(queryParameters, registryUrl, 'registryUrl');
            }

            if (registryType !== undefined && registryType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, registryType, 'registryType');
            }

            if (registryLanguage) {
              registryLanguage.forEach(function (element) {
                queryParameters = _this61.addToHttpParams(queryParameters, element, 'registryLanguage');
              });
            }

            if (type !== undefined && type !== null) {
              queryParameters = this.addToHttpParams(queryParameters, type, 'type');
            }

            if (dir !== undefined && dir !== null) {
              queryParameters = this.addToHttpParams(queryParameters, dir, 'dir');
            }

            if (stylesheet !== undefined && stylesheet !== null) {
              queryParameters = this.addToHttpParams(queryParameters, stylesheet, 'stylesheet');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/registries/vocabularies"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return RegistriesApiService;
      }();

      RegistriesApiService.ɵfac = function RegistriesApiService_Factory(t) {
        return new (t || RegistriesApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      RegistriesApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: RegistriesApiService,
        factory: RegistriesApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RegistriesApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/related.api.service.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/related.api.service.ts ***!
      \****************************************************************************************************************/

    /*! exports provided: RelatedApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiRelatedApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RelatedApiService", function () {
        return RelatedApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var RelatedApiService = /*#__PURE__*/function () {
        function RelatedApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, RelatedApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(RelatedApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this62 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this62.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this62.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getAssociatedResourcesForRecords",
          value: function getAssociatedResourcesForRecords(type, uuid) {
            var _this63 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (type) {
              type.forEach(function (element) {
                queryParameters = _this63.addToHttpParams(queryParameters, element, 'type');
              });
            }

            if (uuid) {
              uuid.forEach(function (element) {
                queryParameters = _this63.addToHttpParams(queryParameters, element, 'uuid');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/related"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return RelatedApiService;
      }();

      RelatedApiService.ɵfac = function RelatedApiService_Factory(t) {
        return new (t || RelatedApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      RelatedApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: RelatedApiService,
        factory: RelatedApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RelatedApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/search.api.service.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/search.api.service.ts ***!
      \***************************************************************************************************************/

    /*! exports provided: SearchApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiSearchApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SearchApiService", function () {
        return SearchApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var SearchApiService = /*#__PURE__*/function () {
        function SearchApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, SearchApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(SearchApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this64 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this64.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this64.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "search",
          value: function search(bucket, body) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/search/records/_search"), body, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return SearchApiService;
      }();

      SearchApiService.ɵfac = function SearchApiService_Factory(t) {
        return new (t || SearchApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      SearchApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: SearchApiService,
        factory: SearchApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SearchApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/selections.api.service.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/selections.api.service.ts ***!
      \*******************************************************************************************************************/

    /*! exports provided: SelectionsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiSelectionsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SelectionsApiService", function () {
        return SelectionsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var SelectionsApiService = /*#__PURE__*/function () {
        function SelectionsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, SelectionsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(SelectionsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this65 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this65.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this65.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "add",
          value: function add(bucket, uuid) {
            var _this66 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (bucket === null || bucket === undefined) {
              throw new Error('Required parameter bucket was null or undefined when calling add.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuid) {
              uuid.forEach(function (element) {
                queryParameters = _this66.addToHttpParams(queryParameters, element, 'uuid');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/selections/").concat(encodeURIComponent(String(bucket))), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "clear",
          value: function clear(bucket, uuid) {
            var _this67 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (bucket === null || bucket === undefined) {
              throw new Error('Required parameter bucket was null or undefined when calling clear.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuid) {
              uuid.forEach(function (element) {
                queryParameters = _this67.addToHttpParams(queryParameters, element, 'uuid');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/selections/").concat(encodeURIComponent(String(bucket))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "get",
          value: function get(bucket) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (bucket === null || bucket === undefined) {
              throw new Error('Required parameter bucket was null or undefined when calling get.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/selections/").concat(encodeURIComponent(String(bucket))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return SelectionsApiService;
      }();

      SelectionsApiService.ɵfac = function SelectionsApiService_Factory(t) {
        return new (t || SelectionsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      SelectionsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: SelectionsApiService,
        factory: SelectionsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SelectionsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/site.api.service.ts":
    /*!*************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/site.api.service.ts ***!
      \*************************************************************************************************************/

    /*! exports provided: SiteApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiSiteApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SiteApiService", function () {
        return SiteApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var SiteApiService = /*#__PURE__*/function () {
        function SiteApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, SiteApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(SiteApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this68 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this68.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this68.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getInformation",
          value: function getInformation() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/info"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getLastActivity",
          value: function getLastActivity(lines) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (lines !== undefined && lines !== null) {
              queryParameters = this.addToHttpParams(queryParameters, lines, 'lines');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/logging/activity"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getLastActivityInAZip",
          value: function getLastActivityInAZip() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/logging/activity/zip"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getLogFiles",
          value: function getLogFiles() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/logging"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRobotsText",
          value: function getRobotsText() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/robots.txt"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSettingsDetails",
          value: function getSettingsDetails(set, key) {
            var _this69 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (set) {
              set.forEach(function (element) {
                queryParameters = _this69.addToHttpParams(queryParameters, element, 'set');
              });
            }

            if (key) {
              key.forEach(function (element) {
                queryParameters = _this69.addToHttpParams(queryParameters, element, 'key');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/settings/details"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSettingsSet",
          value: function getSettingsSet(set, key) {
            var _this70 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (set) {
              set.forEach(function (element) {
                queryParameters = _this70.addToHttpParams(queryParameters, element, 'set');
              });
            }

            if (key) {
              key.forEach(function (element) {
                queryParameters = _this70.addToHttpParams(queryParameters, element, 'key');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/settings"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSiteOrPortalDescription",
          value: function getSiteOrPortalDescription() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSitemap",
          value: function getSitemap(format, doc) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (format !== undefined && format !== null) {
              queryParameters = this.addToHttpParams(queryParameters, format, 'format');
            }

            if (doc !== undefined && doc !== null) {
              queryParameters = this.addToHttpParams(queryParameters, doc, 'doc');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/sitemap"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSystemInfo",
          value: function getSystemInfo() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/info/build"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getXslTransformations",
          value: function getXslTransformations() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/info/transforms"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "index1",
          value: function index1(reset, asynchronous, havingXlinkOnly, indices, bucket) {
            var _this71 = this;

            var observe = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'body';
            var reportProgress = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var options = arguments.length > 7 ? arguments[7] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (reset !== undefined && reset !== null) {
              queryParameters = this.addToHttpParams(queryParameters, reset, 'reset');
            }

            if (asynchronous !== undefined && asynchronous !== null) {
              queryParameters = this.addToHttpParams(queryParameters, asynchronous, 'asynchronous');
            }

            if (havingXlinkOnly !== undefined && havingXlinkOnly !== null) {
              queryParameters = this.addToHttpParams(queryParameters, havingXlinkOnly, 'havingXlinkOnly');
            }

            if (indices) {
              indices.forEach(function (element) {
                queryParameters = _this71.addToHttpParams(queryParameters, element, 'indices');
              });
            }

            if (bucket !== undefined && bucket !== null) {
              queryParameters = this.addToHttpParams(queryParameters, bucket, 'bucket');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/site/index"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "indexAndDbSynchronizationStatus",
          value: function indexAndDbSynchronizationStatus() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/index/synchronized"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "indexStatus",
          value: function indexStatus() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/index/status"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "isCasEnabled",
          value: function isCasEnabled() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/info/isCasEnabled"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "isIndexing",
          value: function isIndexing() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/indexing"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "isReadOnly",
          value: function isReadOnly() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/site/info/readonly"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return SiteApiService;
      }();

      SiteApiService.ɵfac = function SiteApiService_Factory(t) {
        return new (t || SiteApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      SiteApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: SiteApiService,
        factory: SiteApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SiteApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/sources.api.service.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/sources.api.service.ts ***!
      \****************************************************************************************************************/

    /*! exports provided: SourcesApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiSourcesApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SourcesApiService", function () {
        return SourcesApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var SourcesApiService = /*#__PURE__*/function () {
        function SourcesApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, SourcesApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(SourcesApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this72 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this72.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this72.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getSources1",
          value: function getSources1(group) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (group !== undefined && group !== null) {
              queryParameters = this.addToHttpParams(queryParameters, group, 'group');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/sources"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSourcesByType",
          value: function getSourcesByType(type) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (type === null || type === undefined) {
              throw new Error('Required parameter type was null or undefined when calling getSourcesByType.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/sources/").concat(encodeURIComponent(String(type))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return SourcesApiService;
      }();

      SourcesApiService.ɵfac = function SourcesApiService_Factory(t) {
        return new (t || SourcesApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      SourcesApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: SourcesApiService,
        factory: SourcesApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SourcesApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/standards.api.service.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/standards.api.service.ts ***!
      \******************************************************************************************************************/

    /*! exports provided: StandardsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiStandardsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "StandardsApiService", function () {
        return StandardsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var StandardsApiService = /*#__PURE__*/function () {
        function StandardsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, StandardsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(StandardsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this73 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this73.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this73.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getCodelistsTranslations",
          value: function getCodelistsTranslations(schema, codelist) {
            var _this74 = this;

            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (schema === null || schema === undefined) {
              throw new Error('Required parameter schema was null or undefined when calling getCodelistsTranslations.');
            }

            if (codelist === null || codelist === undefined) {
              throw new Error('Required parameter codelist was null or undefined when calling getCodelistsTranslations.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (codelist) {
              codelist.forEach(function (element) {
                queryParameters = _this74.addToHttpParams(queryParameters, element, 'codelist');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards/").concat(encodeURIComponent(String(schema)), "/codelists"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getConfiguration",
          value: function getConfiguration(schema) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (schema === null || schema === undefined) {
              throw new Error('Required parameter schema was null or undefined when calling getConfiguration.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards/").concat(encodeURIComponent(String(schema)), "/batchconfiguration"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getConfigurations",
          value: function getConfigurations(schema) {
            var _this75 = this;

            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (schema) {
              schema.forEach(function (element) {
                queryParameters = _this75.addToHttpParams(queryParameters, element, 'schema');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards/batchconfiguration"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getEditorAssociatedPanelConfiguration",
          value: function getEditorAssociatedPanelConfiguration(schema, name) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (schema === null || schema === undefined) {
              throw new Error('Required parameter schema was null or undefined when calling getEditorAssociatedPanelConfiguration.');
            }

            if (name === null || name === undefined) {
              throw new Error('Required parameter name was null or undefined when calling getEditorAssociatedPanelConfiguration.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards/").concat(encodeURIComponent(String(schema)), "/editor/associatedpanel/config/").concat(encodeURIComponent(String(name)), ".json"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getElementDetails",
          value: function getElementDetails(schema, element, parent, displayIf, xpath, isoType) {
            var observe = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'body';
            var reportProgress = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
            var options = arguments.length > 8 ? arguments[8] : undefined;

            if (schema === null || schema === undefined) {
              throw new Error('Required parameter schema was null or undefined when calling getElementDetails.');
            }

            if (element === null || element === undefined) {
              throw new Error('Required parameter element was null or undefined when calling getElementDetails.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (parent !== undefined && parent !== null) {
              queryParameters = this.addToHttpParams(queryParameters, parent, 'parent');
            }

            if (displayIf !== undefined && displayIf !== null) {
              queryParameters = this.addToHttpParams(queryParameters, displayIf, 'displayIf');
            }

            if (xpath !== undefined && xpath !== null) {
              queryParameters = this.addToHttpParams(queryParameters, xpath, 'xpath');
            }

            if (isoType !== undefined && isoType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, isoType, 'isoType');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards/").concat(encodeURIComponent(String(schema)), "/descriptors/").concat(encodeURIComponent(String(element)), "/details"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSchemaCodelistsWithDetails",
          value: function getSchemaCodelistsWithDetails(schema, codelist, parent, displayIf, xpath, isoType) {
            var observe = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'body';
            var reportProgress = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
            var options = arguments.length > 8 ? arguments[8] : undefined;

            if (schema === null || schema === undefined) {
              throw new Error('Required parameter schema was null or undefined when calling getSchemaCodelistsWithDetails.');
            }

            if (codelist === null || codelist === undefined) {
              throw new Error('Required parameter codelist was null or undefined when calling getSchemaCodelistsWithDetails.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (parent !== undefined && parent !== null) {
              queryParameters = this.addToHttpParams(queryParameters, parent, 'parent');
            }

            if (displayIf !== undefined && displayIf !== null) {
              queryParameters = this.addToHttpParams(queryParameters, displayIf, 'displayIf');
            }

            if (xpath !== undefined && xpath !== null) {
              queryParameters = this.addToHttpParams(queryParameters, xpath, 'xpath');
            }

            if (isoType !== undefined && isoType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, isoType, 'isoType');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'application/xml'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards/").concat(encodeURIComponent(String(schema)), "/codelists/").concat(encodeURIComponent(String(codelist)), "/details"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSchemaTranslations",
          value: function getSchemaTranslations(schema, codelist, parent, displayIf, xpath, isoType) {
            var observe = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'body';
            var reportProgress = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
            var options = arguments.length > 8 ? arguments[8] : undefined;

            if (schema === null || schema === undefined) {
              throw new Error('Required parameter schema was null or undefined when calling getSchemaTranslations.');
            }

            if (codelist === null || codelist === undefined) {
              throw new Error('Required parameter codelist was null or undefined when calling getSchemaTranslations.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (parent !== undefined && parent !== null) {
              queryParameters = this.addToHttpParams(queryParameters, parent, 'parent');
            }

            if (displayIf !== undefined && displayIf !== null) {
              queryParameters = this.addToHttpParams(queryParameters, displayIf, 'displayIf');
            }

            if (xpath !== undefined && xpath !== null) {
              queryParameters = this.addToHttpParams(queryParameters, xpath, 'xpath');
            }

            if (isoType !== undefined && isoType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, isoType, 'isoType');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards/").concat(encodeURIComponent(String(schema)), "/codelists/").concat(encodeURIComponent(String(codelist))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getStandardConfigurations",
          value: function getStandardConfigurations() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "reloadSchema",
          value: function reloadSchema() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/standards/reload"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return StandardsApiService;
      }();

      StandardsApiService.ɵfac = function StandardsApiService_Factory(t) {
        return new (t || StandardsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      StandardsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: StandardsApiService,
        factory: StandardsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](StandardsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/status.api.service.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/status.api.service.ts ***!
      \***************************************************************************************************************/

    /*! exports provided: StatusApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiStatusApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "StatusApiService", function () {
        return StatusApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var StatusApiService = /*#__PURE__*/function () {
        function StatusApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, StatusApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(StatusApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this76 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this76.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this76.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getStatusByType",
          value: function getStatusByType(type) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (type === null || type === undefined) {
              throw new Error('Required parameter type was null or undefined when calling getStatusByType.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/status/").concat(encodeURIComponent(String(type))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getStatusList",
          value: function getStatusList() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/status"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return StatusApiService;
      }();

      StatusApiService.ɵfac = function StatusApiService_Factory(t) {
        return new (t || StatusApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      StatusApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: StatusApiService,
        factory: StatusApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](StatusApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/tags.api.service.ts":
    /*!*************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/tags.api.service.ts ***!
      \*************************************************************************************************************/

    /*! exports provided: TagsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiTagsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "TagsApiService", function () {
        return TagsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var TagsApiService = /*#__PURE__*/function () {
        function TagsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, TagsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(TagsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this77 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this77.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this77.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getTag",
          value: function getTag(tagIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (tagIdentifier === null || tagIdentifier === undefined) {
              throw new Error('Required parameter tagIdentifier was null or undefined when calling getTag.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/tags/").concat(encodeURIComponent(String(tagIdentifier))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getTags",
          value: function getTags() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/tags"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updateTag",
          value: function updateTag(tagIdentifier, metadataCategoryApiModel) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (tagIdentifier === null || tagIdentifier === undefined) {
              throw new Error('Required parameter tagIdentifier was null or undefined when calling updateTag.');
            }

            if (metadataCategoryApiModel === null || metadataCategoryApiModel === undefined) {
              throw new Error('Required parameter metadataCategoryApiModel was null or undefined when calling updateTag.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/tags/").concat(encodeURIComponent(String(tagIdentifier))), metadataCategoryApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return TagsApiService;
      }();

      TagsApiService.ɵfac = function TagsApiService_Factory(t) {
        return new (t || TagsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      TagsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: TagsApiService,
        factory: TagsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TagsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/tools.api.service.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/tools.api.service.ts ***!
      \**************************************************************************************************************/

    /*! exports provided: ToolsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiToolsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ToolsApiService", function () {
        return ToolsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var ToolsApiService = /*#__PURE__*/function () {
        function ToolsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, ToolsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(ToolsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this78 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this78.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this78.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "addTranslations",
          value: function addTranslations(key, requestBody, replace) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (key === null || key === undefined) {
              throw new Error('Required parameter key was null or undefined when calling addTranslations.');
            }

            if (requestBody === null || requestBody === undefined) {
              throw new Error('Required parameter requestBody was null or undefined when calling addTranslations.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (replace !== undefined && replace !== null) {
              queryParameters = this.addToHttpParams(queryParameters, replace, 'replace');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/i18n/db/translations/").concat(encodeURIComponent(String(key))), requestBody, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "buildSLD",
          value: function buildSLD(url, layers, filters) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (url === null || url === undefined) {
              throw new Error('Required parameter url was null or undefined when calling buildSLD.');
            }

            if (layers === null || layers === undefined) {
              throw new Error('Required parameter layers was null or undefined when calling buildSLD.');
            }

            if (filters === null || filters === undefined) {
              throw new Error('Required parameter filters was null or undefined when calling buildSLD.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (url !== undefined && url !== null) {
              queryParameters = this.addToHttpParams(queryParameters, url, 'url');
            }

            if (layers !== undefined && layers !== null) {
              queryParameters = this.addToHttpParams(queryParameters, layers, 'layers');
            }

            if (filters !== undefined && filters !== null) {
              queryParameters = this.addToHttpParams(queryParameters, filters, 'filters');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/tools/ogc/sld"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "callStep",
          value: function callStep(stepName) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (stepName === null || stepName === undefined) {
              throw new Error('Required parameter stepName was null or undefined when calling callStep.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/tools/migration/steps/").concat(encodeURIComponent(String(stepName))), null, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "cleanTranslationsPackagesCache",
          value: function cleanTranslationsPackagesCache() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/i18n/cache"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteTranslations",
          value: function deleteTranslations(key) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (key === null || key === undefined) {
              throw new Error('Required parameter key was null or undefined when calling deleteTranslations.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/i18n/db/translations/").concat(encodeURIComponent(String(key))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deteleSLD",
          value: function deteleSLD() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/tools/ogc/sld"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getDbTranslations",
          value: function getDbTranslations() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/i18n/db/translations"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSLD",
          value: function getSLD() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/tools/ogc/sld"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getTranslations",
          value: function getTranslations(type) {
            var _this79 = this;

            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (type) {
              type.forEach(function (element) {
                queryParameters = _this79.addToHttpParams(queryParameters, element, 'type');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/i18n/db"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getTranslationsPackage",
          value: function getTranslationsPackage() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/i18n/packages"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getTranslationsPackage1",
          value: function getTranslationsPackage1(pack) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (pack === null || pack === undefined) {
              throw new Error('Required parameter pack was null or undefined when calling getTranslationsPackage1.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/i18n/packages/").concat(encodeURIComponent(String(pack))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return ToolsApiService;
      }();

      ToolsApiService.ɵfac = function ToolsApiService_Factory(t) {
        return new (t || ToolsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      ToolsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: ToolsApiService,
        factory: ToolsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ToolsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/ui.api.service.ts":
    /*!***********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/ui.api.service.ts ***!
      \***********************************************************************************************************/

    /*! exports provided: UiApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiUiApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UiApiService", function () {
        return UiApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var UiApiService = /*#__PURE__*/function () {
        function UiApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, UiApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(UiApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this80 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this80.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this80.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "getUiConfiguration",
          value: function getUiConfiguration(uiIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (uiIdentifier === null || uiIdentifier === undefined) {
              throw new Error('Required parameter uiIdentifier was null or undefined when calling getUiConfiguration.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/ui/").concat(encodeURIComponent(String(uiIdentifier))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUiConfigurations",
          value: function getUiConfigurations() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/ui"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updateUiConfiguration",
          value: function updateUiConfiguration(uiIdentifier, uiSettingApiModel) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (uiIdentifier === null || uiIdentifier === undefined) {
              throw new Error('Required parameter uiIdentifier was null or undefined when calling updateUiConfiguration.');
            }

            if (uiSettingApiModel === null || uiSettingApiModel === undefined) {
              throw new Error('Required parameter uiSettingApiModel was null or undefined when calling updateUiConfiguration.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', '*/*'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/ui/").concat(encodeURIComponent(String(uiIdentifier))), uiSettingApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return UiApiService;
      }();

      UiApiService.ɵfac = function UiApiService_Factory(t) {
        return new (t || UiApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      UiApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: UiApiService,
        factory: UiApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](UiApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/userfeedback.api.service.ts":
    /*!*********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/userfeedback.api.service.ts ***!
      \*********************************************************************************************************************/

    /*! exports provided: UserfeedbackApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiUserfeedbackApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UserfeedbackApiService", function () {
        return UserfeedbackApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var UserfeedbackApiService = /*#__PURE__*/function () {
        function UserfeedbackApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, UserfeedbackApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(UserfeedbackApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this81 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this81.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this81.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "deleteUserFeedback",
          value: function deleteUserFeedback(uuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (uuid === null || uuid === undefined) {
              throw new Error('Required parameter uuid was null or undefined when calling deleteUserFeedback.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/userfeedback/").concat(encodeURIComponent(String(uuid))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getMetadataRating",
          value: function getMetadataRating(metadataUuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getMetadataRating.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/userfeedbackrating"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRatingCriteria",
          value: function getRatingCriteria() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/userfeedback/ratingcriteria"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUserComment",
          value: function getUserComment(uuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (uuid === null || uuid === undefined) {
              throw new Error('Required parameter uuid was null or undefined when calling getUserComment.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/userfeedback/").concat(encodeURIComponent(String(uuid))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUserComments",
          value: function getUserComments(metadataUuid, size) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (metadataUuid !== undefined && metadataUuid !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataUuid, 'metadataUuid');
            }

            if (size !== undefined && size !== null) {
              queryParameters = this.addToHttpParams(queryParameters, size, 'size');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/userfeedback"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUserCommentsOnARecord",
          value: function getUserCommentsOnARecord(metadataUuid, size) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling getUserCommentsOnARecord.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (size !== undefined && size !== null) {
              queryParameters = this.addToHttpParams(queryParameters, size, 'size');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/userfeedback"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "newUserFeedback",
          value: function newUserFeedback(userFeedbackDTOApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (userFeedbackDTOApiModel === null || userFeedbackDTOApiModel === undefined) {
              throw new Error('Required parameter userFeedbackDTOApiModel was null or undefined when calling newUserFeedback.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/userfeedback"), userFeedbackDTOApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "publishFeedback",
          value: function publishFeedback(uuid) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (uuid === null || uuid === undefined) {
              throw new Error('Required parameter uuid was null or undefined when calling publishFeedback.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/userfeedback/").concat(encodeURIComponent(String(uuid)), "/publish"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "sendEmailToContact",
          value: function sendEmailToContact(metadataUuid, name, org, email, comments, recaptcha, phone, subject, _function, type, category, metadataEmail) {
            var observe = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : 'body';
            var reportProgress = arguments.length > 13 && arguments[13] !== undefined ? arguments[13] : false;
            var options = arguments.length > 14 ? arguments[14] : undefined;

            if (metadataUuid === null || metadataUuid === undefined) {
              throw new Error('Required parameter metadataUuid was null or undefined when calling sendEmailToContact.');
            }

            if (name === null || name === undefined) {
              throw new Error('Required parameter name was null or undefined when calling sendEmailToContact.');
            }

            if (org === null || org === undefined) {
              throw new Error('Required parameter org was null or undefined when calling sendEmailToContact.');
            }

            if (email === null || email === undefined) {
              throw new Error('Required parameter email was null or undefined when calling sendEmailToContact.');
            }

            if (comments === null || comments === undefined) {
              throw new Error('Required parameter comments was null or undefined when calling sendEmailToContact.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (recaptcha !== undefined && recaptcha !== null) {
              queryParameters = this.addToHttpParams(queryParameters, recaptcha, 'recaptcha');
            }

            if (name !== undefined && name !== null) {
              queryParameters = this.addToHttpParams(queryParameters, name, 'name');
            }

            if (org !== undefined && org !== null) {
              queryParameters = this.addToHttpParams(queryParameters, org, 'org');
            }

            if (email !== undefined && email !== null) {
              queryParameters = this.addToHttpParams(queryParameters, email, 'email');
            }

            if (comments !== undefined && comments !== null) {
              queryParameters = this.addToHttpParams(queryParameters, comments, 'comments');
            }

            if (phone !== undefined && phone !== null) {
              queryParameters = this.addToHttpParams(queryParameters, phone, 'phone');
            }

            if (subject !== undefined && subject !== null) {
              queryParameters = this.addToHttpParams(queryParameters, subject, 'subject');
            }

            if (_function !== undefined && _function !== null) {
              queryParameters = this.addToHttpParams(queryParameters, _function, 'function');
            }

            if (type !== undefined && type !== null) {
              queryParameters = this.addToHttpParams(queryParameters, type, 'type');
            }

            if (category !== undefined && category !== null) {
              queryParameters = this.addToHttpParams(queryParameters, category, 'category');
            }

            if (metadataEmail !== undefined && metadataEmail !== null) {
              queryParameters = this.addToHttpParams(queryParameters, metadataEmail, 'metadataEmail');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/records/").concat(encodeURIComponent(String(metadataUuid)), "/alert"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return UserfeedbackApiService;
      }();

      UserfeedbackApiService.ɵfac = function UserfeedbackApiService_Factory(t) {
        return new (t || UserfeedbackApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      UserfeedbackApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: UserfeedbackApiService,
        factory: UserfeedbackApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](UserfeedbackApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/users.api.service.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/users.api.service.ts ***!
      \**************************************************************************************************************/

    /*! exports provided: UsersApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiUsersApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UsersApiService", function () {
        return UsersApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var UsersApiService = /*#__PURE__*/function () {
        function UsersApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, UsersApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(UsersApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this82 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this82.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this82.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "createUser",
          value: function createUser(userDtoApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (userDtoApiModel === null || userDtoApiModel === undefined) {
              throw new Error('Required parameter userDtoApiModel was null or undefined when calling createUser.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/users"), userDtoApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteUser",
          value: function deleteUser(userIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling deleteUser.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/users/").concat(encodeURIComponent(String(userIdentifier))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getRecordOwners",
          value: function getRecordOwners() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/users/owners"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUser",
          value: function getUser(userIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling getUser.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/users/").concat(encodeURIComponent(String(userIdentifier))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUserIdenticon",
          value: function getUserIdenticon(userIdentifier, size) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling getUserIdenticon.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (size !== undefined && size !== null) {
              queryParameters = this.addToHttpParams(queryParameters, size, 'size');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/users/").concat(encodeURIComponent(String(userIdentifier)), ".png"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUsers",
          value: function getUsers() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/users"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "registerUser",
          value: function registerUser(userRegisterDtoApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (userRegisterDtoApiModel === null || userRegisterDtoApiModel === undefined) {
              throw new Error('Required parameter userRegisterDtoApiModel was null or undefined when calling registerUser.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/user/actions/register"), userRegisterDtoApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "resetUserPassword",
          value: function resetUserPassword(userIdentifier, password, password2) {
            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling resetUserPassword.');
            }

            if (password === null || password === undefined) {
              throw new Error('Required parameter password was null or undefined when calling resetUserPassword.');
            }

            if (password2 === null || password2 === undefined) {
              throw new Error('Required parameter password2 was null or undefined when calling resetUserPassword.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (password !== undefined && password !== null) {
              queryParameters = this.addToHttpParams(queryParameters, password, 'password');
            }

            if (password2 !== undefined && password2 !== null) {
              queryParameters = this.addToHttpParams(queryParameters, password2, 'password2');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.post("".concat(this.configuration.basePath, "/users/").concat(encodeURIComponent(String(userIdentifier)), "/actions/forget-password"), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "retrieveAllUserGroups",
          value: function retrieveAllUserGroups() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/users/groups"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "retrieveUserGroups",
          value: function retrieveUserGroups(userIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling retrieveUserGroups.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/users/").concat(encodeURIComponent(String(userIdentifier)), "/groups"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "saveOwners",
          value: function saveOwners(transferRequestApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (transferRequestApiModel === null || transferRequestApiModel === undefined) {
              throw new Error('Required parameter transferRequestApiModel was null or undefined when calling saveOwners.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/users/owners"), transferRequestApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "sendPasswordByEmail",
          value: function sendPasswordByEmail(username) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (username === null || username === undefined) {
              throw new Error('Required parameter username was null or undefined when calling sendPasswordByEmail.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/user/").concat(encodeURIComponent(String(username)), "/actions/forgot-password"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updatePassword",
          value: function updatePassword(username, passwordUpdateParameterApiModel) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (username === null || username === undefined) {
              throw new Error('Required parameter username was null or undefined when calling updatePassword.');
            }

            if (passwordUpdateParameterApiModel === null || passwordUpdateParameterApiModel === undefined) {
              throw new Error('Required parameter passwordUpdateParameterApiModel was null or undefined when calling updatePassword.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json', 'text/plain'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.patch("".concat(this.configuration.basePath, "/user/").concat(encodeURIComponent(String(username))), passwordUpdateParameterApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updateUser",
          value: function updateUser(userIdentifier, userDtoApiModel) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling updateUser.');
            }

            if (userDtoApiModel === null || userDtoApiModel === undefined) {
              throw new Error('Required parameter userDtoApiModel was null or undefined when calling updateUser.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/users/").concat(encodeURIComponent(String(userIdentifier))), userDtoApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return UsersApiService;
      }();

      UsersApiService.ɵfac = function UsersApiService_Factory(t) {
        return new (t || UsersApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      UsersApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: UsersApiService,
        factory: UsersApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](UsersApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/usersearches.api.service.ts":
    /*!*********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/usersearches.api.service.ts ***!
      \*********************************************************************************************************************/

    /*! exports provided: UsersearchesApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiUsersearchesApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UsersearchesApiService", function () {
        return UsersearchesApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var UsersearchesApiService = /*#__PURE__*/function () {
        function UsersearchesApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, UsersearchesApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(UsersearchesApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this83 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this83.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this83.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "createUserCustomSearch",
          value: function createUserCustomSearch(userSearchDtoApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (userSearchDtoApiModel === null || userSearchDtoApiModel === undefined) {
              throw new Error('Required parameter userSearchDtoApiModel was null or undefined when calling createUserCustomSearch.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/usersearches"), userSearchDtoApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteUserCustomSerach",
          value: function deleteUserCustomSerach(searchIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (searchIdentifier === null || searchIdentifier === undefined) {
              throw new Error('Required parameter searchIdentifier was null or undefined when calling deleteUserCustomSerach.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/usersearches/").concat(encodeURIComponent(String(searchIdentifier))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getAllUserCustomSearches",
          value: function getAllUserCustomSearches(featuredType) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (featuredType !== undefined && featuredType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, featuredType, 'featuredType');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/usersearches/all"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getAllUserCustomSearchesPage",
          value: function getAllUserCustomSearchesPage(featuredType, search, offset, limit) {
            var observe = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'body';
            var reportProgress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
            var options = arguments.length > 6 ? arguments[6] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (featuredType !== undefined && featuredType !== null) {
              queryParameters = this.addToHttpParams(queryParameters, featuredType, 'featuredType');
            }

            if (search !== undefined && search !== null) {
              queryParameters = this.addToHttpParams(queryParameters, search, 'search');
            }

            if (offset !== undefined && offset !== null) {
              queryParameters = this.addToHttpParams(queryParameters, offset, 'offset');
            }

            if (limit !== undefined && limit !== null) {
              queryParameters = this.addToHttpParams(queryParameters, limit, 'limit');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/usersearches/allpaginated"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getFeaturedUserCustomSearches",
          value: function getFeaturedUserCustomSearches(type) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;
            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (type !== undefined && type !== null) {
              queryParameters = this.addToHttpParams(queryParameters, type, 'type');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/usersearches/featured"), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUserCustomSearch",
          value: function getUserCustomSearch(searchIdentifier) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (searchIdentifier === null || searchIdentifier === undefined) {
              throw new Error('Required parameter searchIdentifier was null or undefined when calling getUserCustomSearch.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/usersearches/").concat(encodeURIComponent(String(searchIdentifier))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getUserCustomSearches",
          value: function getUserCustomSearches() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/usersearches"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "updateCustomUserSearch",
          value: function updateCustomUserSearch(searchIdentifier, userSearchDtoApiModel) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (searchIdentifier === null || searchIdentifier === undefined) {
              throw new Error('Required parameter searchIdentifier was null or undefined when calling updateCustomUserSearch.');
            }

            if (userSearchDtoApiModel === null || userSearchDtoApiModel === undefined) {
              throw new Error('Required parameter userSearchDtoApiModel was null or undefined when calling updateCustomUserSearch.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/usersearches/").concat(encodeURIComponent(String(searchIdentifier))), userSearchDtoApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return UsersearchesApiService;
      }();

      UsersearchesApiService.ɵfac = function UsersearchesApiService_Factory(t) {
        return new (t || UsersearchesApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      UsersearchesApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: UsersearchesApiService,
        factory: UsersearchesApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](UsersearchesApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/api/userselections.api.service.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/api/userselections.api.service.ts ***!
      \***********************************************************************************************************************/

    /*! exports provided: UserselectionsApiService */

    /***/
    function libsGnApiSrcLibGn4OpenapiApiUserselectionsApiServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UserselectionsApiService", function () {
        return UserselectionsApiService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _encoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../encoder */
      "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts");
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /* tslint:disable:no-unused-variable member-ordering */


      var UserselectionsApiService = /*#__PURE__*/function () {
        function UserselectionsApiService(httpClient, basePath, configuration) {
          _classCallCheck(this, UserselectionsApiService);

          this.httpClient = httpClient;
          this.basePath = 'https://apps.titellus.net/geonetwork/srv/api';
          this.defaultHeaders = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
          this.configuration = new _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"]();

          if (configuration) {
            this.configuration = configuration;
          }

          if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
              basePath = this.basePath;
            }

            this.configuration.basePath = basePath;
          }

          this.encoder = this.configuration.encoder || new _encoder__WEBPACK_IMPORTED_MODULE_2__["CustomHttpParameterCodec"]();
        }

        _createClass(UserselectionsApiService, [{
          key: "addToHttpParams",
          value: function addToHttpParams(httpParams, value, key) {
            if (typeof value === 'object' && value instanceof Date === false) {
              httpParams = this.addToHttpParamsRecursive(httpParams, value);
            } else {
              httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }

            return httpParams;
          }
        }, {
          key: "addToHttpParamsRecursive",
          value: function addToHttpParamsRecursive(httpParams, value, key) {
            var _this84 = this;

            if (value == null) {
              return httpParams;
            }

            if (typeof value === 'object') {
              if (Array.isArray(value)) {
                ;
                value.forEach(function (elem) {
                  return httpParams = _this84.addToHttpParamsRecursive(httpParams, elem, key);
                });
              } else if (value instanceof Date) {
                if (key != null) {
                  httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                } else {
                  throw Error('key may not be null if value is Date');
                }
              } else {
                Object.keys(value).forEach(function (k) {
                  return httpParams = _this84.addToHttpParamsRecursive(httpParams, value[k], key != null ? "".concat(key, ".").concat(k) : k);
                });
              }
            } else if (key != null) {
              httpParams = httpParams.append(key, value);
            } else {
              throw Error('key may not be null if value is not object or array');
            }

            return httpParams;
          }
        }, {
          key: "addToUserSelection",
          value: function addToUserSelection(selectionIdentifier, userIdentifier, uuid) {
            var _this85 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (selectionIdentifier === null || selectionIdentifier === undefined) {
              throw new Error('Required parameter selectionIdentifier was null or undefined when calling addToUserSelection.');
            }

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling addToUserSelection.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuid) {
              uuid.forEach(function (element) {
                queryParameters = _this85.addToHttpParams(queryParameters, element, 'uuid');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/userselections/").concat(encodeURIComponent(String(selectionIdentifier)), "/").concat(encodeURIComponent(String(userIdentifier))), null, {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "createPersistentSelectionType",
          value: function createPersistentSelectionType(selectionApiModel) {
            var observe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';
            var reportProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var options = arguments.length > 3 ? arguments[3] : undefined;

            if (selectionApiModel === null || selectionApiModel === undefined) {
              throw new Error('Required parameter selectionApiModel was null or undefined when calling createPersistentSelectionType.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            } // to determine the Content-Type header


            var consumes = ['application/json'];
            var httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);

            if (httpContentTypeSelected !== undefined) {
              headers = headers.set('Content-Type', httpContentTypeSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.put("".concat(this.configuration.basePath, "/userselections"), selectionApiModel, {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "deleteFromUserSelection",
          value: function deleteFromUserSelection(selectionIdentifier, userIdentifier, uuid) {
            var _this86 = this;

            var observe = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'body';
            var reportProgress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var options = arguments.length > 5 ? arguments[5] : undefined;

            if (selectionIdentifier === null || selectionIdentifier === undefined) {
              throw new Error('Required parameter selectionIdentifier was null or undefined when calling deleteFromUserSelection.');
            }

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling deleteFromUserSelection.');
            }

            var queryParameters = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"]({
              encoder: this.encoder
            });

            if (uuid) {
              uuid.forEach(function (element) {
                queryParameters = _this86.addToHttpParams(queryParameters, element, 'uuid');
              });
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient["delete"]("".concat(this.configuration.basePath, "/userselections/").concat(encodeURIComponent(String(selectionIdentifier)), "/").concat(encodeURIComponent(String(userIdentifier))), {
              params: queryParameters,
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSelectionList",
          value: function getSelectionList() {
            var observe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
            var reportProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var options = arguments.length > 2 ? arguments[2] : undefined;
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/userselections"), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }, {
          key: "getSelectionRecords",
          value: function getSelectionRecords(selectionIdentifier, userIdentifier) {
            var observe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'body';
            var reportProgress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            var options = arguments.length > 4 ? arguments[4] : undefined;

            if (selectionIdentifier === null || selectionIdentifier === undefined) {
              throw new Error('Required parameter selectionIdentifier was null or undefined when calling getSelectionRecords.');
            }

            if (userIdentifier === null || userIdentifier === undefined) {
              throw new Error('Required parameter userIdentifier was null or undefined when calling getSelectionRecords.');
            }

            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;

            if (httpHeaderAcceptSelected === undefined) {
              // to determine the Accept header
              var httpHeaderAccepts = ['application/json'];
              httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }

            if (httpHeaderAcceptSelected !== undefined) {
              headers = headers.set('Accept', httpHeaderAcceptSelected);
            }

            var responseType = 'json';

            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
              responseType = 'text';
            }

            return this.httpClient.get("".concat(this.configuration.basePath, "/userselections/").concat(encodeURIComponent(String(selectionIdentifier)), "/").concat(encodeURIComponent(String(userIdentifier))), {
              responseType: responseType,
              withCredentials: this.configuration.withCredentials,
              headers: headers,
              observe: observe,
              reportProgress: reportProgress
            });
          }
        }]);

        return UserselectionsApiService;
      }();

      UserselectionsApiService.ɵfac = function UserselectionsApiService_Factory(t) {
        return new (t || UserselectionsApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"], 8));
      };

      UserselectionsApiService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: UserselectionsApiService,
        factory: UserselectionsApiService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](UserselectionsApiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
              args: [_variables__WEBPACK_IMPORTED_MODULE_3__["BASE_PATH"]]
            }]
          }, {
            type: _configuration__WEBPACK_IMPORTED_MODULE_4__["Configuration"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"]
            }]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts":
    /*!******************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/configuration.ts ***!
      \******************************************************************************************************/

    /*! exports provided: Configuration */

    /***/
    function libsGnApiSrcLibGn4OpenapiConfigurationTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Configuration", function () {
        return Configuration;
      });

      var Configuration = /*#__PURE__*/function () {
        function Configuration() {
          var configurationParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          _classCallCheck(this, Configuration);

          this.apiKeys = configurationParameters.apiKeys;
          this.username = configurationParameters.username;
          this.password = configurationParameters.password;
          this.accessToken = configurationParameters.accessToken;
          this.basePath = configurationParameters.basePath;
          this.withCredentials = configurationParameters.withCredentials;
          this.encoder = configurationParameters.encoder;
        }
        /**
         * Select the correct content-type to use for a request.
         * Uses {@link Configuration#isJsonMime} to determine the correct content-type.
         * If no content type is found return the first found type if the contentTypes is not empty
         * @param contentTypes - the array of content types that are available for selection
         * @returns the selected content-type or <code>undefined</code> if no selection could be made.
         */


        _createClass(Configuration, [{
          key: "selectHeaderContentType",
          value: function selectHeaderContentType(contentTypes) {
            var _this87 = this;

            if (contentTypes.length === 0) {
              return undefined;
            }

            var type = contentTypes.find(function (x) {
              return _this87.isJsonMime(x);
            });

            if (type === undefined) {
              return contentTypes[0];
            }

            return type;
          }
          /**
           * Select the correct accept content-type to use for a request.
           * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.
           * If no content type is found return the first found type if the contentTypes is not empty
           * @param accepts - the array of content types that are available for selection.
           * @returns the selected content-type or <code>undefined</code> if no selection could be made.
           */

        }, {
          key: "selectHeaderAccept",
          value: function selectHeaderAccept(accepts) {
            var _this88 = this;

            if (accepts.length === 0) {
              return undefined;
            }

            var type = accepts.find(function (x) {
              return _this88.isJsonMime(x);
            });

            if (type === undefined) {
              return accepts[0];
            }

            return type;
          }
          /**
           * Check if the given MIME is a JSON MIME.
           * JSON MIME examples:
           *   application/json
           *   application/json; charset=UTF8
           *   APPLICATION/JSON
           *   application/vnd.company+json
           * @param mime - MIME (Multipurpose Internet Mail Extensions)
           * @return True if the given MIME is JSON, false otherwise.
           */

        }, {
          key: "isJsonMime",
          value: function isJsonMime(mime) {
            var jsonMime = new RegExp('^(application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(;.*)?$', 'i');
            return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');
          }
        }]);

        return Configuration;
      }();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/encoder.ts":
    /*!************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/encoder.ts ***!
      \************************************************************************************************/

    /*! exports provided: CustomHttpParameterCodec */

    /***/
    function libsGnApiSrcLibGn4OpenapiEncoderTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CustomHttpParameterCodec", function () {
        return CustomHttpParameterCodec;
      });
      /**
       * Custom HttpParameterCodec
       * Workaround for https://github.com/angular/angular/issues/18261
       */


      var CustomHttpParameterCodec = /*#__PURE__*/function () {
        function CustomHttpParameterCodec() {
          _classCallCheck(this, CustomHttpParameterCodec);
        }

        _createClass(CustomHttpParameterCodec, [{
          key: "encodeKey",
          value: function encodeKey(k) {
            return encodeURIComponent(k);
          }
        }, {
          key: "encodeValue",
          value: function encodeValue(v) {
            return encodeURIComponent(v);
          }
        }, {
          key: "decodeKey",
          value: function decodeKey(k) {
            return decodeURIComponent(k);
          }
        }, {
          key: "decodeValue",
          value: function decodeValue(v) {
            return decodeURIComponent(v);
          }
        }]);

        return CustomHttpParameterCodec;
      }();
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/index.ts":
    /*!**********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/index.ts ***!
      \**********************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _api_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./api/api */
      "../../libs/gn-api/src/lib/gn4/openapi/api/api.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "CustomstyleApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["CustomstyleApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "GroupsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["GroupsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "HarvestersApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["HarvestersApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "IdentifiersApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["IdentifiersApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LanguagesApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["LanguagesApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LinksApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["LinksApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LogosApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["LogosApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "MapserversApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["MapserversApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "MeApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["MeApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "OperationsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["OperationsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "PagesApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["PagesApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ProcessesApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["ProcessesApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RecordsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["RecordsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RegionsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["RegionsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RegistriesApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["RegistriesApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RelatedApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["RelatedApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SearchApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["SearchApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SelectionsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["SelectionsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SiteApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["SiteApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SourcesApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["SourcesApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "StandardsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["StandardsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "StatusApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["StatusApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "TagsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["TagsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ToolsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["ToolsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UiApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["UiApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UserfeedbackApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["UserfeedbackApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UsersApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["UsersApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UsersearchesApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["UsersearchesApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UserselectionsApiService", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["UserselectionsApiService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "APIS", function () {
        return _api_api__WEBPACK_IMPORTED_MODULE_0__["APIS"];
      });
      /* harmony import */


      var _model_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./model/models */
      "../../libs/gn-api/src/lib/gn4/openapi/model/models.ts");
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _model_models__WEBPACK_IMPORTED_MODULE_1__) {
        if (["CustomstyleApiService", "GroupsApiService", "HarvestersApiService", "IdentifiersApiService", "LanguagesApiService", "LinksApiService", "LogosApiService", "MapserversApiService", "MeApiService", "OperationsApiService", "PagesApiService", "ProcessesApiService", "RecordsApiService", "RegionsApiService", "RegistriesApiService", "RelatedApiService", "SearchApiService", "SelectionsApiService", "SiteApiService", "SourcesApiService", "StandardsApiService", "StatusApiService", "TagsApiService", "ToolsApiService", "UiApiService", "UserfeedbackApiService", "UsersApiService", "UsersearchesApiService", "UserselectionsApiService", "APIS", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _model_models__WEBPACK_IMPORTED_MODULE_1__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _variables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./variables */
      "../../libs/gn-api/src/lib/gn4/openapi/variables.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "BASE_PATH", function () {
        return _variables__WEBPACK_IMPORTED_MODULE_2__["BASE_PATH"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "COLLECTION_FORMATS", function () {
        return _variables__WEBPACK_IMPORTED_MODULE_2__["COLLECTION_FORMATS"];
      });
      /* harmony import */


      var _configuration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./configuration */
      "../../libs/gn-api/src/lib/gn4/openapi/configuration.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "Configuration", function () {
        return _configuration__WEBPACK_IMPORTED_MODULE_3__["Configuration"];
      });
      /* harmony import */


      var _api_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./api.module */
      "../../libs/gn-api/src/lib/gn4/openapi/api.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ApiModule", function () {
        return _api_module__WEBPACK_IMPORTED_MODULE_4__["ApiModule"];
      });
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/address.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/address.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelAddressApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/anonymousMapserver.api.model.ts":
    /*!***************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/anonymousMapserver.api.model.ts ***!
      \***************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelAnonymousMapserverApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/associated.api.model.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/associated.api.model.ts ***!
      \*******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelAssociatedApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/associatedSiblingMetadataItem.api.model.ts":
    /*!**************************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/associatedSiblingMetadataItem.api.model.ts ***!
      \**************************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelAssociatedSiblingMetadataItemApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/attributeTable.api.model.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/attributeTable.api.model.ts ***!
      \***********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelAttributeTableApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/batchEditParameter.api.model.ts":
    /*!***************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/batchEditParameter.api.model.ts ***!
      \***************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelBatchEditParameterApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/batchEditing.api.model.ts":
    /*!*********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/batchEditing.api.model.ts ***!
      \*********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelBatchEditingApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/category.api.model.ts":
    /*!*****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/category.api.model.ts ***!
      \*****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelCategoryApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/categoryResponse.api.model.ts":
    /*!*************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/categoryResponse.api.model.ts ***!
      \*************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelCategoryResponseApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/children.api.model.ts":
    /*!*****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/children.api.model.ts ***!
      \*****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelChildrenApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/codelist.api.model.ts":
    /*!*****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/codelist.api.model.ts ***!
      \*****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelCodelistApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/crs.api.model.ts":
    /*!************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/crs.api.model.ts ***!
      \************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelCrsApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/dataset.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/dataset.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelDatasetApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/description.api.model.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/description.api.model.ts ***!
      \********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelDescriptionApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/element.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/element.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelElementApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/entry.api.model.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/entry.api.model.ts ***!
      \**************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelEntryApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/extentDto.api.model.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/extentDto.api.model.ts ***!
      \******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelExtentDtoApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/externalResourceManagementProperties.api.model.ts":
    /*!*********************************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/externalResourceManagementProperties.api.model.ts ***!
      \*********************************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelExternalResourceManagementPropertiesApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/fCRelatedMetadataItem.api.model.ts":
    /*!******************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/fCRelatedMetadataItem.api.model.ts ***!
      \******************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelFCRelatedMetadataItemApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/fcat.api.model.ts":
    /*!*************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/fcat.api.model.ts ***!
      \*************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelFcatApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/featureResponse.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/featureResponse.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelFeatureResponseApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/featureType.api.model.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/featureType.api.model.ts ***!
      \********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelFeatureTypeApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/field.api.model.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/field.api.model.ts ***!
      \**************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelFieldApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/grantedAuthority.api.model.ts":
    /*!*************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/grantedAuthority.api.model.ts ***!
      \*************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelGrantedAuthorityApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/group.api.model.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/group.api.model.ts ***!
      \**************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelGroupApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/groupOperations.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/groupOperations.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelGroupOperationsApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/groupPrivilege.api.model.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/groupPrivilege.api.model.ts ***!
      \***********************************************************************************************************************/

    /*! exports provided: GroupPrivilegeApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelGroupPrivilegeApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "GroupPrivilegeApiModel", function () {
        return GroupPrivilegeApiModel;
      });
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */


      var GroupPrivilegeApiModel;

      (function (GroupPrivilegeApiModel) {
        GroupPrivilegeApiModel.UserProfilesEnum = {
          Administrator: 'Administrator',
          UserAdmin: 'UserAdmin',
          Reviewer: 'Reviewer',
          Editor: 'Editor',
          RegisteredUser: 'RegisteredUser',
          Guest: 'Guest',
          Monitor: 'Monitor'
        };
        GroupPrivilegeApiModel.UserProfileEnum = {
          Administrator: 'Administrator',
          UserAdmin: 'UserAdmin',
          Reviewer: 'Reviewer',
          Editor: 'Editor',
          RegisteredUser: 'RegisteredUser',
          Guest: 'Guest',
          Monitor: 'Monitor'
        };
      })(GroupPrivilegeApiModel || (GroupPrivilegeApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/hasfeaturecats.api.model.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/hasfeaturecats.api.model.ts ***!
      \***********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelHasfeaturecatsApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/hassource.api.model.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/hassource.api.model.ts ***!
      \******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelHassourceApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/iProcessingReport.api.model.ts":
    /*!**************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/iProcessingReport.api.model.ts ***!
      \**************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelIProcessingReportApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/iSODate.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/iSODate.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelISODateApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/infoReport.api.model.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/infoReport.api.model.ts ***!
      \*******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelInfoReportApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/inlineObject.api.model.ts":
    /*!*********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/inlineObject.api.model.ts ***!
      \*********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelInlineObjectApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/inlineObject1.api.model.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/inlineObject1.api.model.ts ***!
      \**********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelInlineObject1ApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/inlineObject2.api.model.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/inlineObject2.api.model.ts ***!
      \**********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelInlineObject2ApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/inlineObject3.api.model.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/inlineObject3.api.model.ts ***!
      \**********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelInlineObject3ApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/isoLanguage.api.model.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/isoLanguage.api.model.ts ***!
      \********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelIsoLanguageApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/keywordBean.api.model.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/keywordBean.api.model.ts ***!
      \********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelKeywordBeanApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/link.api.model.ts":
    /*!*************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/link.api.model.ts ***!
      \*************************************************************************************************************/

    /*! exports provided: LinkApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelLinkApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LinkApiModel", function () {
        return LinkApiModel;
      });

      var LinkApiModel;

      (function (LinkApiModel) {
        LinkApiModel.LinkTypeEnum = {
          HTTP: 'HTTP',
          METADATA: 'METADATA'
        };
      })(LinkApiModel || (LinkApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/linkStatus.api.model.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/linkStatus.api.model.ts ***!
      \*******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelLinkStatusApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/listRegionsResponse.api.model.ts":
    /*!****************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/listRegionsResponse.api.model.ts ***!
      \****************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelListRegionsResponseApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/localizedString.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/localizedString.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelLocalizedStringApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/logFileResponse.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/logFileResponse.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelLogFileResponseApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/mapServer.api.model.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/mapServer.api.model.ts ***!
      \******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMapServerApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/meResponse.api.model.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/meResponse.api.model.ts ***!
      \*******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMeResponseApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataCategory.api.model.ts":
    /*!*************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataCategory.api.model.ts ***!
      \*************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataCategoryApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataIdentifierTemplate.api.model.ts":
    /*!***********************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataIdentifierTemplate.api.model.ts ***!
      \***********************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataIdentifierTemplateApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataLink.api.model.ts":
    /*!*********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataLink.api.model.ts ***!
      \*********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataLinkApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataProcessingReport.api.model.ts":
    /*!*********************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataProcessingReport.api.model.ts ***!
      \*********************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataProcessingReportApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataReplacementProcessingReport.api.model.ts":
    /*!********************************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataReplacementProcessingReport.api.model.ts ***!
      \********************************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataReplacementProcessingReportApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataResource.api.model.ts":
    /*!*************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataResource.api.model.ts ***!
      \*************************************************************************************************************************/

    /*! exports provided: MetadataResourceApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataResourceApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "MetadataResourceApiModel", function () {
        return MetadataResourceApiModel;
      });

      var MetadataResourceApiModel;

      (function (MetadataResourceApiModel) {
        MetadataResourceApiModel.VisibilityEnum = {
          Public: 'public',
          Private: 'private'
        };
      })(MetadataResourceApiModel || (MetadataResourceApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataSchema.api.model.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataSchema.api.model.ts ***!
      \***********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataSchemaApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataStatus.api.model.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataStatus.api.model.ts ***!
      \***********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataStatusApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataStatusResponse.api.model.ts":
    /*!*******************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataStatusResponse.api.model.ts ***!
      \*******************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataStatusResponseApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/metadataWorkflowStatusResponse.api.model.ts":
    /*!***************************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/metadataWorkflowStatusResponse.api.model.ts ***!
      \***************************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMetadataWorkflowStatusResponseApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/models.ts":
    /*!*****************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/models.ts ***!
      \*****************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelModelsTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _address_api_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./address.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/address.api.model.ts");
      /* harmony import */


      var _address_api_model__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_address_api_model__WEBPACK_IMPORTED_MODULE_0__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _address_api_model__WEBPACK_IMPORTED_MODULE_0__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _address_api_model__WEBPACK_IMPORTED_MODULE_0__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _anonymousMapserver_api_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./anonymousMapserver.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/anonymousMapserver.api.model.ts");
      /* harmony import */


      var _anonymousMapserver_api_model__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_anonymousMapserver_api_model__WEBPACK_IMPORTED_MODULE_1__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _anonymousMapserver_api_model__WEBPACK_IMPORTED_MODULE_1__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _anonymousMapserver_api_model__WEBPACK_IMPORTED_MODULE_1__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _associated_api_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./associated.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/associated.api.model.ts");
      /* harmony import */


      var _associated_api_model__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_associated_api_model__WEBPACK_IMPORTED_MODULE_2__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _associated_api_model__WEBPACK_IMPORTED_MODULE_2__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _associated_api_model__WEBPACK_IMPORTED_MODULE_2__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _associatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./associatedSiblingMetadataItem.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/associatedSiblingMetadataItem.api.model.ts");
      /* harmony import */


      var _associatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_associatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_3__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _associatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_3__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _associatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_3__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _attributeTable_api_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./attributeTable.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/attributeTable.api.model.ts");
      /* harmony import */


      var _attributeTable_api_model__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_attributeTable_api_model__WEBPACK_IMPORTED_MODULE_4__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _attributeTable_api_model__WEBPACK_IMPORTED_MODULE_4__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _attributeTable_api_model__WEBPACK_IMPORTED_MODULE_4__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _batchEditParameter_api_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./batchEditParameter.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/batchEditParameter.api.model.ts");
      /* harmony import */


      var _batchEditParameter_api_model__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_batchEditParameter_api_model__WEBPACK_IMPORTED_MODULE_5__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _batchEditParameter_api_model__WEBPACK_IMPORTED_MODULE_5__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _batchEditParameter_api_model__WEBPACK_IMPORTED_MODULE_5__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _batchEditing_api_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./batchEditing.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/batchEditing.api.model.ts");
      /* harmony import */


      var _batchEditing_api_model__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_batchEditing_api_model__WEBPACK_IMPORTED_MODULE_6__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _batchEditing_api_model__WEBPACK_IMPORTED_MODULE_6__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _batchEditing_api_model__WEBPACK_IMPORTED_MODULE_6__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _category_api_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./category.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/category.api.model.ts");
      /* harmony import */


      var _category_api_model__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_category_api_model__WEBPACK_IMPORTED_MODULE_7__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _category_api_model__WEBPACK_IMPORTED_MODULE_7__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _category_api_model__WEBPACK_IMPORTED_MODULE_7__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _categoryResponse_api_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./categoryResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/categoryResponse.api.model.ts");
      /* harmony import */


      var _categoryResponse_api_model__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_categoryResponse_api_model__WEBPACK_IMPORTED_MODULE_8__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _categoryResponse_api_model__WEBPACK_IMPORTED_MODULE_8__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _categoryResponse_api_model__WEBPACK_IMPORTED_MODULE_8__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _children_api_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./children.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/children.api.model.ts");
      /* harmony import */


      var _children_api_model__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_children_api_model__WEBPACK_IMPORTED_MODULE_9__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _children_api_model__WEBPACK_IMPORTED_MODULE_9__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _children_api_model__WEBPACK_IMPORTED_MODULE_9__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _codelist_api_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./codelist.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/codelist.api.model.ts");
      /* harmony import */


      var _codelist_api_model__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_codelist_api_model__WEBPACK_IMPORTED_MODULE_10__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _codelist_api_model__WEBPACK_IMPORTED_MODULE_10__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _codelist_api_model__WEBPACK_IMPORTED_MODULE_10__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _crs_api_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./crs.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/crs.api.model.ts");
      /* harmony import */


      var _crs_api_model__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_crs_api_model__WEBPACK_IMPORTED_MODULE_11__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _crs_api_model__WEBPACK_IMPORTED_MODULE_11__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _crs_api_model__WEBPACK_IMPORTED_MODULE_11__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _dataset_api_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./dataset.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/dataset.api.model.ts");
      /* harmony import */


      var _dataset_api_model__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_dataset_api_model__WEBPACK_IMPORTED_MODULE_12__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _dataset_api_model__WEBPACK_IMPORTED_MODULE_12__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _dataset_api_model__WEBPACK_IMPORTED_MODULE_12__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _description_api_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./description.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/description.api.model.ts");
      /* harmony import */


      var _description_api_model__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_description_api_model__WEBPACK_IMPORTED_MODULE_13__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _description_api_model__WEBPACK_IMPORTED_MODULE_13__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _description_api_model__WEBPACK_IMPORTED_MODULE_13__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _element_api_model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./element.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/element.api.model.ts");
      /* harmony import */


      var _element_api_model__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_element_api_model__WEBPACK_IMPORTED_MODULE_14__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _element_api_model__WEBPACK_IMPORTED_MODULE_14__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _element_api_model__WEBPACK_IMPORTED_MODULE_14__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _entry_api_model__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./entry.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/entry.api.model.ts");
      /* harmony import */


      var _entry_api_model__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_entry_api_model__WEBPACK_IMPORTED_MODULE_15__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _entry_api_model__WEBPACK_IMPORTED_MODULE_15__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _entry_api_model__WEBPACK_IMPORTED_MODULE_15__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _extentDto_api_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! ./extentDto.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/extentDto.api.model.ts");
      /* harmony import */


      var _extentDto_api_model__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_extentDto_api_model__WEBPACK_IMPORTED_MODULE_16__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _extentDto_api_model__WEBPACK_IMPORTED_MODULE_16__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _extentDto_api_model__WEBPACK_IMPORTED_MODULE_16__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _externalResourceManagementProperties_api_model__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ./externalResourceManagementProperties.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/externalResourceManagementProperties.api.model.ts");
      /* harmony import */


      var _externalResourceManagementProperties_api_model__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_externalResourceManagementProperties_api_model__WEBPACK_IMPORTED_MODULE_17__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _externalResourceManagementProperties_api_model__WEBPACK_IMPORTED_MODULE_17__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _externalResourceManagementProperties_api_model__WEBPACK_IMPORTED_MODULE_17__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _fCRelatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! ./fCRelatedMetadataItem.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/fCRelatedMetadataItem.api.model.ts");
      /* harmony import */


      var _fCRelatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_fCRelatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_18__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _fCRelatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_18__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _fCRelatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_18__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _fcat_api_model__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! ./fcat.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/fcat.api.model.ts");
      /* harmony import */


      var _fcat_api_model__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_fcat_api_model__WEBPACK_IMPORTED_MODULE_19__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _fcat_api_model__WEBPACK_IMPORTED_MODULE_19__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _fcat_api_model__WEBPACK_IMPORTED_MODULE_19__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _featureResponse_api_model__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! ./featureResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/featureResponse.api.model.ts");
      /* harmony import */


      var _featureResponse_api_model__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_featureResponse_api_model__WEBPACK_IMPORTED_MODULE_20__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _featureResponse_api_model__WEBPACK_IMPORTED_MODULE_20__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _featureResponse_api_model__WEBPACK_IMPORTED_MODULE_20__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _featureType_api_model__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! ./featureType.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/featureType.api.model.ts");
      /* harmony import */


      var _featureType_api_model__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_featureType_api_model__WEBPACK_IMPORTED_MODULE_21__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _featureType_api_model__WEBPACK_IMPORTED_MODULE_21__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _featureType_api_model__WEBPACK_IMPORTED_MODULE_21__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _field_api_model__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! ./field.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/field.api.model.ts");
      /* harmony import */


      var _field_api_model__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_field_api_model__WEBPACK_IMPORTED_MODULE_22__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _field_api_model__WEBPACK_IMPORTED_MODULE_22__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _field_api_model__WEBPACK_IMPORTED_MODULE_22__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _grantedAuthority_api_model__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! ./grantedAuthority.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/grantedAuthority.api.model.ts");
      /* harmony import */


      var _grantedAuthority_api_model__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_grantedAuthority_api_model__WEBPACK_IMPORTED_MODULE_23__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _grantedAuthority_api_model__WEBPACK_IMPORTED_MODULE_23__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _grantedAuthority_api_model__WEBPACK_IMPORTED_MODULE_23__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _group_api_model__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
      /*! ./group.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/group.api.model.ts");
      /* harmony import */


      var _group_api_model__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_group_api_model__WEBPACK_IMPORTED_MODULE_24__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _group_api_model__WEBPACK_IMPORTED_MODULE_24__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _group_api_model__WEBPACK_IMPORTED_MODULE_24__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _groupOperations_api_model__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
      /*! ./groupOperations.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/groupOperations.api.model.ts");
      /* harmony import */


      var _groupOperations_api_model__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_groupOperations_api_model__WEBPACK_IMPORTED_MODULE_25__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _groupOperations_api_model__WEBPACK_IMPORTED_MODULE_25__) {
        if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _groupOperations_api_model__WEBPACK_IMPORTED_MODULE_25__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _groupPrivilege_api_model__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
      /*! ./groupPrivilege.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/groupPrivilege.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "GroupPrivilegeApiModel", function () {
        return _groupPrivilege_api_model__WEBPACK_IMPORTED_MODULE_26__["GroupPrivilegeApiModel"];
      });
      /* harmony import */


      var _hasfeaturecats_api_model__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
      /*! ./hasfeaturecats.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/hasfeaturecats.api.model.ts");
      /* harmony import */


      var _hasfeaturecats_api_model__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_hasfeaturecats_api_model__WEBPACK_IMPORTED_MODULE_27__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _hasfeaturecats_api_model__WEBPACK_IMPORTED_MODULE_27__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _hasfeaturecats_api_model__WEBPACK_IMPORTED_MODULE_27__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _hassource_api_model__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
      /*! ./hassource.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/hassource.api.model.ts");
      /* harmony import */


      var _hassource_api_model__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_hassource_api_model__WEBPACK_IMPORTED_MODULE_28__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _hassource_api_model__WEBPACK_IMPORTED_MODULE_28__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _hassource_api_model__WEBPACK_IMPORTED_MODULE_28__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _iProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
      /*! ./iProcessingReport.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/iProcessingReport.api.model.ts");
      /* harmony import */


      var _iProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(_iProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_29__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _iProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_29__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _iProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_29__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _iSODate_api_model__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
      /*! ./iSODate.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/iSODate.api.model.ts");
      /* harmony import */


      var _iSODate_api_model__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(_iSODate_api_model__WEBPACK_IMPORTED_MODULE_30__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _iSODate_api_model__WEBPACK_IMPORTED_MODULE_30__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _iSODate_api_model__WEBPACK_IMPORTED_MODULE_30__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _infoReport_api_model__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
      /*! ./infoReport.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/infoReport.api.model.ts");
      /* harmony import */


      var _infoReport_api_model__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_infoReport_api_model__WEBPACK_IMPORTED_MODULE_31__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _infoReport_api_model__WEBPACK_IMPORTED_MODULE_31__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _infoReport_api_model__WEBPACK_IMPORTED_MODULE_31__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _inlineObject1_api_model__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
      /*! ./inlineObject1.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/inlineObject1.api.model.ts");
      /* harmony import */


      var _inlineObject1_api_model__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_inlineObject1_api_model__WEBPACK_IMPORTED_MODULE_32__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _inlineObject1_api_model__WEBPACK_IMPORTED_MODULE_32__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _inlineObject1_api_model__WEBPACK_IMPORTED_MODULE_32__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _inlineObject2_api_model__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
      /*! ./inlineObject2.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/inlineObject2.api.model.ts");
      /* harmony import */


      var _inlineObject2_api_model__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_inlineObject2_api_model__WEBPACK_IMPORTED_MODULE_33__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _inlineObject2_api_model__WEBPACK_IMPORTED_MODULE_33__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _inlineObject2_api_model__WEBPACK_IMPORTED_MODULE_33__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _inlineObject3_api_model__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
      /*! ./inlineObject3.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/inlineObject3.api.model.ts");
      /* harmony import */


      var _inlineObject3_api_model__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(_inlineObject3_api_model__WEBPACK_IMPORTED_MODULE_34__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _inlineObject3_api_model__WEBPACK_IMPORTED_MODULE_34__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _inlineObject3_api_model__WEBPACK_IMPORTED_MODULE_34__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _inlineObject_api_model__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
      /*! ./inlineObject.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/inlineObject.api.model.ts");
      /* harmony import */


      var _inlineObject_api_model__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_inlineObject_api_model__WEBPACK_IMPORTED_MODULE_35__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _inlineObject_api_model__WEBPACK_IMPORTED_MODULE_35__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _inlineObject_api_model__WEBPACK_IMPORTED_MODULE_35__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _isoLanguage_api_model__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
      /*! ./isoLanguage.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/isoLanguage.api.model.ts");
      /* harmony import */


      var _isoLanguage_api_model__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(_isoLanguage_api_model__WEBPACK_IMPORTED_MODULE_36__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _isoLanguage_api_model__WEBPACK_IMPORTED_MODULE_36__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _isoLanguage_api_model__WEBPACK_IMPORTED_MODULE_36__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _keywordBean_api_model__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
      /*! ./keywordBean.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/keywordBean.api.model.ts");
      /* harmony import */


      var _keywordBean_api_model__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_keywordBean_api_model__WEBPACK_IMPORTED_MODULE_37__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _keywordBean_api_model__WEBPACK_IMPORTED_MODULE_37__) {
        if (["GroupPrivilegeApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _keywordBean_api_model__WEBPACK_IMPORTED_MODULE_37__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _link_api_model__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
      /*! ./link.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/link.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LinkApiModel", function () {
        return _link_api_model__WEBPACK_IMPORTED_MODULE_38__["LinkApiModel"];
      });
      /* harmony import */


      var _linkStatus_api_model__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
      /*! ./linkStatus.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/linkStatus.api.model.ts");
      /* harmony import */


      var _linkStatus_api_model__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(_linkStatus_api_model__WEBPACK_IMPORTED_MODULE_39__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _linkStatus_api_model__WEBPACK_IMPORTED_MODULE_39__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _linkStatus_api_model__WEBPACK_IMPORTED_MODULE_39__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _listRegionsResponse_api_model__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
      /*! ./listRegionsResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/listRegionsResponse.api.model.ts");
      /* harmony import */


      var _listRegionsResponse_api_model__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(_listRegionsResponse_api_model__WEBPACK_IMPORTED_MODULE_40__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _listRegionsResponse_api_model__WEBPACK_IMPORTED_MODULE_40__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _listRegionsResponse_api_model__WEBPACK_IMPORTED_MODULE_40__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _localizedString_api_model__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
      /*! ./localizedString.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/localizedString.api.model.ts");
      /* harmony import */


      var _localizedString_api_model__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_localizedString_api_model__WEBPACK_IMPORTED_MODULE_41__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _localizedString_api_model__WEBPACK_IMPORTED_MODULE_41__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _localizedString_api_model__WEBPACK_IMPORTED_MODULE_41__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _logFileResponse_api_model__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
      /*! ./logFileResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/logFileResponse.api.model.ts");
      /* harmony import */


      var _logFileResponse_api_model__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_logFileResponse_api_model__WEBPACK_IMPORTED_MODULE_42__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _logFileResponse_api_model__WEBPACK_IMPORTED_MODULE_42__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _logFileResponse_api_model__WEBPACK_IMPORTED_MODULE_42__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _mapServer_api_model__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
      /*! ./mapServer.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/mapServer.api.model.ts");
      /* harmony import */


      var _mapServer_api_model__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_mapServer_api_model__WEBPACK_IMPORTED_MODULE_43__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _mapServer_api_model__WEBPACK_IMPORTED_MODULE_43__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _mapServer_api_model__WEBPACK_IMPORTED_MODULE_43__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _meResponse_api_model__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
      /*! ./meResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/meResponse.api.model.ts");
      /* harmony import */


      var _meResponse_api_model__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_meResponse_api_model__WEBPACK_IMPORTED_MODULE_44__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _meResponse_api_model__WEBPACK_IMPORTED_MODULE_44__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _meResponse_api_model__WEBPACK_IMPORTED_MODULE_44__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataCategory_api_model__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
      /*! ./metadataCategory.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataCategory.api.model.ts");
      /* harmony import */


      var _metadataCategory_api_model__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_metadataCategory_api_model__WEBPACK_IMPORTED_MODULE_45__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataCategory_api_model__WEBPACK_IMPORTED_MODULE_45__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataCategory_api_model__WEBPACK_IMPORTED_MODULE_45__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataIdentifierTemplate_api_model__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
      /*! ./metadataIdentifierTemplate.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataIdentifierTemplate.api.model.ts");
      /* harmony import */


      var _metadataIdentifierTemplate_api_model__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_metadataIdentifierTemplate_api_model__WEBPACK_IMPORTED_MODULE_46__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataIdentifierTemplate_api_model__WEBPACK_IMPORTED_MODULE_46__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataIdentifierTemplate_api_model__WEBPACK_IMPORTED_MODULE_46__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataLink_api_model__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
      /*! ./metadataLink.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataLink.api.model.ts");
      /* harmony import */


      var _metadataLink_api_model__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(_metadataLink_api_model__WEBPACK_IMPORTED_MODULE_47__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataLink_api_model__WEBPACK_IMPORTED_MODULE_47__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataLink_api_model__WEBPACK_IMPORTED_MODULE_47__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
      /*! ./metadataProcessingReport.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataProcessingReport.api.model.ts");
      /* harmony import */


      var _metadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(_metadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_48__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_48__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_48__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataReplacementProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
      /*! ./metadataReplacementProcessingReport.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataReplacementProcessingReport.api.model.ts");
      /* harmony import */


      var _metadataReplacementProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(_metadataReplacementProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_49__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataReplacementProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_49__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataReplacementProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_49__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataResource_api_model__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
      /*! ./metadataResource.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataResource.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "MetadataResourceApiModel", function () {
        return _metadataResource_api_model__WEBPACK_IMPORTED_MODULE_50__["MetadataResourceApiModel"];
      });
      /* harmony import */


      var _metadataSchema_api_model__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
      /*! ./metadataSchema.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataSchema.api.model.ts");
      /* harmony import */


      var _metadataSchema_api_model__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(_metadataSchema_api_model__WEBPACK_IMPORTED_MODULE_51__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataSchema_api_model__WEBPACK_IMPORTED_MODULE_51__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataSchema_api_model__WEBPACK_IMPORTED_MODULE_51__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataStatus_api_model__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
      /*! ./metadataStatus.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataStatus.api.model.ts");
      /* harmony import */


      var _metadataStatus_api_model__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(_metadataStatus_api_model__WEBPACK_IMPORTED_MODULE_52__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataStatus_api_model__WEBPACK_IMPORTED_MODULE_52__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataStatus_api_model__WEBPACK_IMPORTED_MODULE_52__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
      /*! ./metadataStatusResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataStatusResponse.api.model.ts");
      /* harmony import */


      var _metadataStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(_metadataStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_53__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_53__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_53__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _metadataWorkflowStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
      /*! ./metadataWorkflowStatusResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/metadataWorkflowStatusResponse.api.model.ts");
      /* harmony import */


      var _metadataWorkflowStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(_metadataWorkflowStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_54__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _metadataWorkflowStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_54__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _metadataWorkflowStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_54__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _multilingualValue_api_model__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
      /*! ./multilingualValue.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/multilingualValue.api.model.ts");
      /* harmony import */


      var _multilingualValue_api_model__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(_multilingualValue_api_model__WEBPACK_IMPORTED_MODULE_55__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _multilingualValue_api_model__WEBPACK_IMPORTED_MODULE_55__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _multilingualValue_api_model__WEBPACK_IMPORTED_MODULE_55__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _online_api_model__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
      /*! ./online.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/online.api.model.ts");
      /* harmony import */


      var _online_api_model__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(_online_api_model__WEBPACK_IMPORTED_MODULE_56__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _online_api_model__WEBPACK_IMPORTED_MODULE_56__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _online_api_model__WEBPACK_IMPORTED_MODULE_56__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _operation_api_model__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
      /*! ./operation.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/operation.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "OperationApiModel", function () {
        return _operation_api_model__WEBPACK_IMPORTED_MODULE_57__["OperationApiModel"];
      });
      /* harmony import */


      var _ownerResponse_api_model__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
      /*! ./ownerResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/ownerResponse.api.model.ts");
      /* harmony import */


      var _ownerResponse_api_model__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__webpack_require__.n(_ownerResponse_api_model__WEBPACK_IMPORTED_MODULE_58__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _ownerResponse_api_model__WEBPACK_IMPORTED_MODULE_58__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _ownerResponse_api_model__WEBPACK_IMPORTED_MODULE_58__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _pageJSONWrapper_api_model__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
      /*! ./pageJSONWrapper.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/pageJSONWrapper.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "PageJSONWrapperApiModel", function () {
        return _pageJSONWrapper_api_model__WEBPACK_IMPORTED_MODULE_59__["PageJSONWrapperApiModel"];
      });
      /* harmony import */


      var _pageLink_api_model__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
      /*! ./pageLink.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/pageLink.api.model.ts");
      /* harmony import */


      var _pageLink_api_model__WEBPACK_IMPORTED_MODULE_60___default = /*#__PURE__*/__webpack_require__.n(_pageLink_api_model__WEBPACK_IMPORTED_MODULE_60__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _pageLink_api_model__WEBPACK_IMPORTED_MODULE_60__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _pageLink_api_model__WEBPACK_IMPORTED_MODULE_60__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _pageable_api_model__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
      /*! ./pageable.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/pageable.api.model.ts");
      /* harmony import */


      var _pageable_api_model__WEBPACK_IMPORTED_MODULE_61___default = /*#__PURE__*/__webpack_require__.n(_pageable_api_model__WEBPACK_IMPORTED_MODULE_61__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _pageable_api_model__WEBPACK_IMPORTED_MODULE_61__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _pageable_api_model__WEBPACK_IMPORTED_MODULE_61__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _paginatedUserSearchResponse_api_model__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
      /*! ./paginatedUserSearchResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/paginatedUserSearchResponse.api.model.ts");
      /* harmony import */


      var _paginatedUserSearchResponse_api_model__WEBPACK_IMPORTED_MODULE_62___default = /*#__PURE__*/__webpack_require__.n(_paginatedUserSearchResponse_api_model__WEBPACK_IMPORTED_MODULE_62__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _paginatedUserSearchResponse_api_model__WEBPACK_IMPORTED_MODULE_62__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _paginatedUserSearchResponse_api_model__WEBPACK_IMPORTED_MODULE_62__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _parent_api_model__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
      /*! ./parent.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/parent.api.model.ts");
      /* harmony import */


      var _parent_api_model__WEBPACK_IMPORTED_MODULE_63___default = /*#__PURE__*/__webpack_require__.n(_parent_api_model__WEBPACK_IMPORTED_MODULE_63__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _parent_api_model__WEBPACK_IMPORTED_MODULE_63__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _parent_api_model__WEBPACK_IMPORTED_MODULE_63__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _passwordUpdateParameter_api_model__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
      /*! ./passwordUpdateParameter.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/passwordUpdateParameter.api.model.ts");
      /* harmony import */


      var _passwordUpdateParameter_api_model__WEBPACK_IMPORTED_MODULE_64___default = /*#__PURE__*/__webpack_require__.n(_passwordUpdateParameter_api_model__WEBPACK_IMPORTED_MODULE_64__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _passwordUpdateParameter_api_model__WEBPACK_IMPORTED_MODULE_64__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _passwordUpdateParameter_api_model__WEBPACK_IMPORTED_MODULE_64__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _processingReport_api_model__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
      /*! ./processingReport.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/processingReport.api.model.ts");
      /* harmony import */


      var _processingReport_api_model__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__webpack_require__.n(_processingReport_api_model__WEBPACK_IMPORTED_MODULE_65__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _processingReport_api_model__WEBPACK_IMPORTED_MODULE_65__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _processingReport_api_model__WEBPACK_IMPORTED_MODULE_65__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _ratingAverage_api_model__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
      /*! ./ratingAverage.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/ratingAverage.api.model.ts");
      /* harmony import */


      var _ratingAverage_api_model__WEBPACK_IMPORTED_MODULE_66___default = /*#__PURE__*/__webpack_require__.n(_ratingAverage_api_model__WEBPACK_IMPORTED_MODULE_66__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _ratingAverage_api_model__WEBPACK_IMPORTED_MODULE_66__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _ratingAverage_api_model__WEBPACK_IMPORTED_MODULE_66__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _ratingCriteria_api_model__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
      /*! ./ratingCriteria.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/ratingCriteria.api.model.ts");
      /* harmony import */


      var _ratingCriteria_api_model__WEBPACK_IMPORTED_MODULE_67___default = /*#__PURE__*/__webpack_require__.n(_ratingCriteria_api_model__WEBPACK_IMPORTED_MODULE_67__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _ratingCriteria_api_model__WEBPACK_IMPORTED_MODULE_67__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _ratingCriteria_api_model__WEBPACK_IMPORTED_MODULE_67__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _regionResponse_api_model__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
      /*! ./regionResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/regionResponse.api.model.ts");
      /* harmony import */


      var _regionResponse_api_model__WEBPACK_IMPORTED_MODULE_68___default = /*#__PURE__*/__webpack_require__.n(_regionResponse_api_model__WEBPACK_IMPORTED_MODULE_68__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _regionResponse_api_model__WEBPACK_IMPORTED_MODULE_68__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _regionResponse_api_model__WEBPACK_IMPORTED_MODULE_68__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _related_api_model__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
      /*! ./related.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/related.api.model.ts");
      /* harmony import */


      var _related_api_model__WEBPACK_IMPORTED_MODULE_69___default = /*#__PURE__*/__webpack_require__.n(_related_api_model__WEBPACK_IMPORTED_MODULE_69__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _related_api_model__WEBPACK_IMPORTED_MODULE_69__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _related_api_model__WEBPACK_IMPORTED_MODULE_69__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _relatedLinkItem_api_model__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
      /*! ./relatedLinkItem.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/relatedLinkItem.api.model.ts");
      /* harmony import */


      var _relatedLinkItem_api_model__WEBPACK_IMPORTED_MODULE_70___default = /*#__PURE__*/__webpack_require__.n(_relatedLinkItem_api_model__WEBPACK_IMPORTED_MODULE_70__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _relatedLinkItem_api_model__WEBPACK_IMPORTED_MODULE_70__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _relatedLinkItem_api_model__WEBPACK_IMPORTED_MODULE_70__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _relatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
      /*! ./relatedMetadataItem.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/relatedMetadataItem.api.model.ts");
      /* harmony import */


      var _relatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_71___default = /*#__PURE__*/__webpack_require__.n(_relatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_71__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _relatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_71__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _relatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_71__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _relatedResponse_api_model__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
      /*! ./relatedResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/relatedResponse.api.model.ts");
      /* harmony import */


      var _relatedResponse_api_model__WEBPACK_IMPORTED_MODULE_72___default = /*#__PURE__*/__webpack_require__.n(_relatedResponse_api_model__WEBPACK_IMPORTED_MODULE_72__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _relatedResponse_api_model__WEBPACK_IMPORTED_MODULE_72__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _relatedResponse_api_model__WEBPACK_IMPORTED_MODULE_72__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _relatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
      /*! ./relatedSiblingMetadataItem.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/relatedSiblingMetadataItem.api.model.ts");
      /* harmony import */


      var _relatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_73___default = /*#__PURE__*/__webpack_require__.n(_relatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_73__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _relatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_73__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _relatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_73__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _relatedThumbnailItem_api_model__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
      /*! ./relatedThumbnailItem.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/relatedThumbnailItem.api.model.ts");
      /* harmony import */


      var _relatedThumbnailItem_api_model__WEBPACK_IMPORTED_MODULE_74___default = /*#__PURE__*/__webpack_require__.n(_relatedThumbnailItem_api_model__WEBPACK_IMPORTED_MODULE_74__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _relatedThumbnailItem_api_model__WEBPACK_IMPORTED_MODULE_74__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _relatedThumbnailItem_api_model__WEBPACK_IMPORTED_MODULE_74__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _replaceEntryChange_api_model__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
      /*! ./replaceEntryChange.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/replaceEntryChange.api.model.ts");
      /* harmony import */


      var _replaceEntryChange_api_model__WEBPACK_IMPORTED_MODULE_75___default = /*#__PURE__*/__webpack_require__.n(_replaceEntryChange_api_model__WEBPACK_IMPORTED_MODULE_75__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _replaceEntryChange_api_model__WEBPACK_IMPORTED_MODULE_75__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _replaceEntryChange_api_model__WEBPACK_IMPORTED_MODULE_75__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _replaceReport_api_model__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
      /*! ./replaceReport.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/replaceReport.api.model.ts");
      /* harmony import */


      var _replaceReport_api_model__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__webpack_require__.n(_replaceReport_api_model__WEBPACK_IMPORTED_MODULE_76__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _replaceReport_api_model__WEBPACK_IMPORTED_MODULE_76__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _replaceReport_api_model__WEBPACK_IMPORTED_MODULE_76__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _report_api_model__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
      /*! ./report.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/report.api.model.ts");
      /* harmony import */


      var _report_api_model__WEBPACK_IMPORTED_MODULE_77___default = /*#__PURE__*/__webpack_require__.n(_report_api_model__WEBPACK_IMPORTED_MODULE_77__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _report_api_model__WEBPACK_IMPORTED_MODULE_77__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _report_api_model__WEBPACK_IMPORTED_MODULE_77__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _reports_api_model__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
      /*! ./reports.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/reports.api.model.ts");
      /* harmony import */


      var _reports_api_model__WEBPACK_IMPORTED_MODULE_78___default = /*#__PURE__*/__webpack_require__.n(_reports_api_model__WEBPACK_IMPORTED_MODULE_78__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _reports_api_model__WEBPACK_IMPORTED_MODULE_78__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _reports_api_model__WEBPACK_IMPORTED_MODULE_78__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _savedQuery_api_model__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
      /*! ./savedQuery.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/savedQuery.api.model.ts");
      /* harmony import */


      var _savedQuery_api_model__WEBPACK_IMPORTED_MODULE_79___default = /*#__PURE__*/__webpack_require__.n(_savedQuery_api_model__WEBPACK_IMPORTED_MODULE_79__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _savedQuery_api_model__WEBPACK_IMPORTED_MODULE_79__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _savedQuery_api_model__WEBPACK_IMPORTED_MODULE_79__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _section_api_model__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
      /*! ./section.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/section.api.model.ts");
      /* harmony import */


      var _section_api_model__WEBPACK_IMPORTED_MODULE_80___default = /*#__PURE__*/__webpack_require__.n(_section_api_model__WEBPACK_IMPORTED_MODULE_80__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _section_api_model__WEBPACK_IMPORTED_MODULE_80__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _section_api_model__WEBPACK_IMPORTED_MODULE_80__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _selection_api_model__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
      /*! ./selection.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/selection.api.model.ts");
      /* harmony import */


      var _selection_api_model__WEBPACK_IMPORTED_MODULE_81___default = /*#__PURE__*/__webpack_require__.n(_selection_api_model__WEBPACK_IMPORTED_MODULE_81__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _selection_api_model__WEBPACK_IMPORTED_MODULE_81__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _selection_api_model__WEBPACK_IMPORTED_MODULE_81__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _service_api_model__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
      /*! ./service.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/service.api.model.ts");
      /* harmony import */


      var _service_api_model__WEBPACK_IMPORTED_MODULE_82___default = /*#__PURE__*/__webpack_require__.n(_service_api_model__WEBPACK_IMPORTED_MODULE_82__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _service_api_model__WEBPACK_IMPORTED_MODULE_82__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _service_api_model__WEBPACK_IMPORTED_MODULE_82__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _setting_api_model__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(
      /*! ./setting.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/setting.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SettingApiModel", function () {
        return _setting_api_model__WEBPACK_IMPORTED_MODULE_83__["SettingApiModel"];
      });
      /* harmony import */


      var _settingsListResponse_api_model__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(
      /*! ./settingsListResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/settingsListResponse.api.model.ts");
      /* harmony import */


      var _settingsListResponse_api_model__WEBPACK_IMPORTED_MODULE_84___default = /*#__PURE__*/__webpack_require__.n(_settingsListResponse_api_model__WEBPACK_IMPORTED_MODULE_84__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _settingsListResponse_api_model__WEBPACK_IMPORTED_MODULE_84__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _settingsListResponse_api_model__WEBPACK_IMPORTED_MODULE_84__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _sharingParameter_api_model__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(
      /*! ./sharingParameter.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/sharingParameter.api.model.ts");
      /* harmony import */


      var _sharingParameter_api_model__WEBPACK_IMPORTED_MODULE_85___default = /*#__PURE__*/__webpack_require__.n(_sharingParameter_api_model__WEBPACK_IMPORTED_MODULE_85__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _sharingParameter_api_model__WEBPACK_IMPORTED_MODULE_85__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _sharingParameter_api_model__WEBPACK_IMPORTED_MODULE_85__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _sharingResponse_api_model__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(
      /*! ./sharingResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/sharingResponse.api.model.ts");
      /* harmony import */


      var _sharingResponse_api_model__WEBPACK_IMPORTED_MODULE_86___default = /*#__PURE__*/__webpack_require__.n(_sharingResponse_api_model__WEBPACK_IMPORTED_MODULE_86__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _sharingResponse_api_model__WEBPACK_IMPORTED_MODULE_86__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _sharingResponse_api_model__WEBPACK_IMPORTED_MODULE_86__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _siblings_api_model__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(
      /*! ./siblings.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/siblings.api.model.ts");
      /* harmony import */


      var _siblings_api_model__WEBPACK_IMPORTED_MODULE_87___default = /*#__PURE__*/__webpack_require__.n(_siblings_api_model__WEBPACK_IMPORTED_MODULE_87__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _siblings_api_model__WEBPACK_IMPORTED_MODULE_87__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _siblings_api_model__WEBPACK_IMPORTED_MODULE_87__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _simpleMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(
      /*! ./simpleMetadataProcessingReport.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/simpleMetadataProcessingReport.api.model.ts");
      /* harmony import */


      var _simpleMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_88___default = /*#__PURE__*/__webpack_require__.n(_simpleMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_88__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _simpleMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_88__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _simpleMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_88__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _siteInformation_api_model__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(
      /*! ./siteInformation.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/siteInformation.api.model.ts");
      /* harmony import */


      var _siteInformation_api_model__WEBPACK_IMPORTED_MODULE_89___default = /*#__PURE__*/__webpack_require__.n(_siteInformation_api_model__WEBPACK_IMPORTED_MODULE_89__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _siteInformation_api_model__WEBPACK_IMPORTED_MODULE_89__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _siteInformation_api_model__WEBPACK_IMPORTED_MODULE_89__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _sort_api_model__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(
      /*! ./sort.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/sort.api.model.ts");
      /* harmony import */


      var _sort_api_model__WEBPACK_IMPORTED_MODULE_90___default = /*#__PURE__*/__webpack_require__.n(_sort_api_model__WEBPACK_IMPORTED_MODULE_90__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _sort_api_model__WEBPACK_IMPORTED_MODULE_90__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _sort_api_model__WEBPACK_IMPORTED_MODULE_90__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _source_api_model__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(
      /*! ./source.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/source.api.model.ts");
      /* harmony import */


      var _source_api_model__WEBPACK_IMPORTED_MODULE_91___default = /*#__PURE__*/__webpack_require__.n(_source_api_model__WEBPACK_IMPORTED_MODULE_91__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _source_api_model__WEBPACK_IMPORTED_MODULE_91__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _source_api_model__WEBPACK_IMPORTED_MODULE_91__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _status_api_model__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(
      /*! ./status.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/status.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "StatusApiModel", function () {
        return _status_api_model__WEBPACK_IMPORTED_MODULE_92__["StatusApiModel"];
      });
      /* harmony import */


      var _statusValue_api_model__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(
      /*! ./statusValue.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/statusValue.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "StatusValueApiModel", function () {
        return _statusValue_api_model__WEBPACK_IMPORTED_MODULE_93__["StatusValueApiModel"];
      });
      /* harmony import */


      var _suggestionType_api_model__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(
      /*! ./suggestionType.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/suggestionType.api.model.ts");
      /* harmony import */


      var _suggestionType_api_model__WEBPACK_IMPORTED_MODULE_94___default = /*#__PURE__*/__webpack_require__.n(_suggestionType_api_model__WEBPACK_IMPORTED_MODULE_94__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _suggestionType_api_model__WEBPACK_IMPORTED_MODULE_94__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _suggestionType_api_model__WEBPACK_IMPORTED_MODULE_94__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _systemInfo_api_model__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(
      /*! ./systemInfo.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/systemInfo.api.model.ts");
      /* harmony import */


      var _systemInfo_api_model__WEBPACK_IMPORTED_MODULE_95___default = /*#__PURE__*/__webpack_require__.n(_systemInfo_api_model__WEBPACK_IMPORTED_MODULE_95__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _systemInfo_api_model__WEBPACK_IMPORTED_MODULE_95__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _systemInfo_api_model__WEBPACK_IMPORTED_MODULE_95__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _thumbnail_api_model__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(
      /*! ./thumbnail.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/thumbnail.api.model.ts");
      /* harmony import */


      var _thumbnail_api_model__WEBPACK_IMPORTED_MODULE_96___default = /*#__PURE__*/__webpack_require__.n(_thumbnail_api_model__WEBPACK_IMPORTED_MODULE_96__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _thumbnail_api_model__WEBPACK_IMPORTED_MODULE_96__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _thumbnail_api_model__WEBPACK_IMPORTED_MODULE_96__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _transferRequest_api_model__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(
      /*! ./transferRequest.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/transferRequest.api.model.ts");
      /* harmony import */


      var _transferRequest_api_model__WEBPACK_IMPORTED_MODULE_97___default = /*#__PURE__*/__webpack_require__.n(_transferRequest_api_model__WEBPACK_IMPORTED_MODULE_97__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _transferRequest_api_model__WEBPACK_IMPORTED_MODULE_97__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _transferRequest_api_model__WEBPACK_IMPORTED_MODULE_97__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _uiSetting_api_model__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(
      /*! ./uiSetting.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/uiSetting.api.model.ts");
      /* harmony import */


      var _uiSetting_api_model__WEBPACK_IMPORTED_MODULE_98___default = /*#__PURE__*/__webpack_require__.n(_uiSetting_api_model__WEBPACK_IMPORTED_MODULE_98__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _uiSetting_api_model__WEBPACK_IMPORTED_MODULE_98__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _uiSetting_api_model__WEBPACK_IMPORTED_MODULE_98__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _user_api_model__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(
      /*! ./user.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/user.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UserApiModel", function () {
        return _user_api_model__WEBPACK_IMPORTED_MODULE_99__["UserApiModel"];
      });
      /* harmony import */


      var _userDto_api_model__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(
      /*! ./userDto.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/userDto.api.model.ts");
      /* harmony import */


      var _userDto_api_model__WEBPACK_IMPORTED_MODULE_100___default = /*#__PURE__*/__webpack_require__.n(_userDto_api_model__WEBPACK_IMPORTED_MODULE_100__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _userDto_api_model__WEBPACK_IMPORTED_MODULE_100__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "UserApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _userDto_api_model__WEBPACK_IMPORTED_MODULE_100__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _userFeedbackDTO_api_model__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(
      /*! ./userFeedbackDTO.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/userFeedbackDTO.api.model.ts");
      /* harmony import */


      var _userFeedbackDTO_api_model__WEBPACK_IMPORTED_MODULE_101___default = /*#__PURE__*/__webpack_require__.n(_userFeedbackDTO_api_model__WEBPACK_IMPORTED_MODULE_101__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _userFeedbackDTO_api_model__WEBPACK_IMPORTED_MODULE_101__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "UserApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _userFeedbackDTO_api_model__WEBPACK_IMPORTED_MODULE_101__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _userGroup_api_model__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(
      /*! ./userGroup.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/userGroup.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UserGroupApiModel", function () {
        return _userGroup_api_model__WEBPACK_IMPORTED_MODULE_102__["UserGroupApiModel"];
      });
      /* harmony import */


      var _userGroupId_api_model__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(
      /*! ./userGroupId.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/userGroupId.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UserGroupIdApiModel", function () {
        return _userGroupId_api_model__WEBPACK_IMPORTED_MODULE_103__["UserGroupIdApiModel"];
      });
      /* harmony import */


      var _userGroupsResponse_api_model__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(
      /*! ./userGroupsResponse.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/userGroupsResponse.api.model.ts");
      /* harmony import */


      var _userGroupsResponse_api_model__WEBPACK_IMPORTED_MODULE_104___default = /*#__PURE__*/__webpack_require__.n(_userGroupsResponse_api_model__WEBPACK_IMPORTED_MODULE_104__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _userGroupsResponse_api_model__WEBPACK_IMPORTED_MODULE_104__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "UserApiModel", "UserGroupApiModel", "UserGroupIdApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _userGroupsResponse_api_model__WEBPACK_IMPORTED_MODULE_104__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _userRegisterDto_api_model__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(
      /*! ./userRegisterDto.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/userRegisterDto.api.model.ts");
      /* harmony import */


      var _userRegisterDto_api_model__WEBPACK_IMPORTED_MODULE_105___default = /*#__PURE__*/__webpack_require__.n(_userRegisterDto_api_model__WEBPACK_IMPORTED_MODULE_105__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _userRegisterDto_api_model__WEBPACK_IMPORTED_MODULE_105__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "UserApiModel", "UserGroupApiModel", "UserGroupIdApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _userRegisterDto_api_model__WEBPACK_IMPORTED_MODULE_105__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _userSearchDto_api_model__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(
      /*! ./userSearchDto.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/userSearchDto.api.model.ts");
      /* harmony import */


      var _userSearchDto_api_model__WEBPACK_IMPORTED_MODULE_106___default = /*#__PURE__*/__webpack_require__.n(_userSearchDto_api_model__WEBPACK_IMPORTED_MODULE_106__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _userSearchDto_api_model__WEBPACK_IMPORTED_MODULE_106__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "UserApiModel", "UserGroupApiModel", "UserGroupIdApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _userSearchDto_api_model__WEBPACK_IMPORTED_MODULE_106__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _userSecurity_api_model__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(
      /*! ./userSecurity.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/userSecurity.api.model.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UserSecurityApiModel", function () {
        return _userSecurity_api_model__WEBPACK_IMPORTED_MODULE_107__["UserSecurityApiModel"];
      });
      /* harmony import */


      var _values_api_model__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(
      /*! ./values.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/values.api.model.ts");
      /* harmony import */


      var _values_api_model__WEBPACK_IMPORTED_MODULE_108___default = /*#__PURE__*/__webpack_require__.n(_values_api_model__WEBPACK_IMPORTED_MODULE_108__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _values_api_model__WEBPACK_IMPORTED_MODULE_108__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "UserApiModel", "UserGroupApiModel", "UserGroupIdApiModel", "UserSecurityApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _values_api_model__WEBPACK_IMPORTED_MODULE_108__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _xsltMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(
      /*! ./xsltMetadataProcessingReport.api.model */
      "../../libs/gn-api/src/lib/gn4/openapi/model/xsltMetadataProcessingReport.api.model.ts");
      /* harmony import */


      var _xsltMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_109___default = /*#__PURE__*/__webpack_require__.n(_xsltMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_109__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _xsltMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_109__) {
        if (["GroupPrivilegeApiModel", "LinkApiModel", "MetadataResourceApiModel", "OperationApiModel", "PageJSONWrapperApiModel", "SettingApiModel", "StatusApiModel", "StatusValueApiModel", "UserApiModel", "UserGroupApiModel", "UserGroupIdApiModel", "UserSecurityApiModel", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _xsltMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_109__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/multilingualValue.api.model.ts":
    /*!**************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/multilingualValue.api.model.ts ***!
      \**************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelMultilingualValueApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/online.api.model.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/online.api.model.ts ***!
      \***************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelOnlineApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/operation.api.model.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/operation.api.model.ts ***!
      \******************************************************************************************************************/

    /*! exports provided: OperationApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelOperationApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "OperationApiModel", function () {
        return OperationApiModel;
      });
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */


      var OperationApiModel;

      (function (OperationApiModel) {
        OperationApiModel.ReservedOperationEnum = {
          View: 'view',
          Download: 'download',
          Editing: 'editing',
          Notify: 'notify',
          Dynamic: 'dynamic',
          Featured: 'featured'
        };
      })(OperationApiModel || (OperationApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/ownerResponse.api.model.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/ownerResponse.api.model.ts ***!
      \**********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelOwnerResponseApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/pageJSONWrapper.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/pageJSONWrapper.api.model.ts ***!
      \************************************************************************************************************************/

    /*! exports provided: PageJSONWrapperApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelPageJSONWrapperApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "PageJSONWrapperApiModel", function () {
        return PageJSONWrapperApiModel;
      });
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */


      var PageJSONWrapperApiModel;

      (function (PageJSONWrapperApiModel) {
        PageJSONWrapperApiModel.FormatEnum = {
          LINK: 'LINK',
          HTML: 'HTML',
          TEXT: 'TEXT',
          MARKDOWN: 'MARKDOWN',
          WIKI: 'WIKI'
        };
        PageJSONWrapperApiModel.StatusEnum = {
          PUBLIC: 'PUBLIC',
          PUBLICONLY: 'PUBLIC_ONLY',
          PRIVATE: 'PRIVATE',
          HIDDEN: 'HIDDEN'
        };
        PageJSONWrapperApiModel.SectionsEnum = {
          ALL: 'ALL',
          TOP: 'TOP',
          FOOTER: 'FOOTER',
          MENU: 'MENU',
          SUBMENU: 'SUBMENU',
          CUSTOMMENU1: 'CUSTOM_MENU1',
          CUSTOMMENU2: 'CUSTOM_MENU2',
          CUSTOMMENU3: 'CUSTOM_MENU3',
          DRAFT: 'DRAFT'
        };
      })(PageJSONWrapperApiModel || (PageJSONWrapperApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/pageLink.api.model.ts":
    /*!*****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/pageLink.api.model.ts ***!
      \*****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelPageLinkApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/pageable.api.model.ts":
    /*!*****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/pageable.api.model.ts ***!
      \*****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelPageableApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/paginatedUserSearchResponse.api.model.ts":
    /*!************************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/paginatedUserSearchResponse.api.model.ts ***!
      \************************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelPaginatedUserSearchResponseApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/parent.api.model.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/parent.api.model.ts ***!
      \***************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelParentApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/passwordUpdateParameter.api.model.ts":
    /*!********************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/passwordUpdateParameter.api.model.ts ***!
      \********************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelPasswordUpdateParameterApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/processingReport.api.model.ts":
    /*!*************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/processingReport.api.model.ts ***!
      \*************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelProcessingReportApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/ratingAverage.api.model.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/ratingAverage.api.model.ts ***!
      \**********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRatingAverageApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/ratingCriteria.api.model.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/ratingCriteria.api.model.ts ***!
      \***********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRatingCriteriaApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/regionResponse.api.model.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/regionResponse.api.model.ts ***!
      \***********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRegionResponseApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/related.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/related.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRelatedApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/relatedLinkItem.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/relatedLinkItem.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRelatedLinkItemApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/relatedMetadataItem.api.model.ts":
    /*!****************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/relatedMetadataItem.api.model.ts ***!
      \****************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRelatedMetadataItemApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/relatedResponse.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/relatedResponse.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRelatedResponseApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/relatedSiblingMetadataItem.api.model.ts":
    /*!***********************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/relatedSiblingMetadataItem.api.model.ts ***!
      \***********************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRelatedSiblingMetadataItemApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/relatedThumbnailItem.api.model.ts":
    /*!*****************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/relatedThumbnailItem.api.model.ts ***!
      \*****************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelRelatedThumbnailItemApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/replaceEntryChange.api.model.ts":
    /*!***************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/replaceEntryChange.api.model.ts ***!
      \***************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelReplaceEntryChangeApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/replaceReport.api.model.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/replaceReport.api.model.ts ***!
      \**********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelReplaceReportApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/report.api.model.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/report.api.model.ts ***!
      \***************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelReportApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/reports.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/reports.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelReportsApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/savedQuery.api.model.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/savedQuery.api.model.ts ***!
      \*******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSavedQueryApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/section.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/section.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSectionApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/selection.api.model.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/selection.api.model.ts ***!
      \******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSelectionApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/service.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/service.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelServiceApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/setting.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/setting.api.model.ts ***!
      \****************************************************************************************************************/

    /*! exports provided: SettingApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSettingApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SettingApiModel", function () {
        return SettingApiModel;
      });
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */


      var SettingApiModel;

      (function (SettingApiModel) {
        SettingApiModel.DataTypeEnum = {
          STRING: 'STRING',
          INT: 'INT',
          BOOLEAN: 'BOOLEAN',
          JSON: 'JSON'
        };
      })(SettingApiModel || (SettingApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/settingsListResponse.api.model.ts":
    /*!*****************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/settingsListResponse.api.model.ts ***!
      \*****************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSettingsListResponseApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/sharingParameter.api.model.ts":
    /*!*************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/sharingParameter.api.model.ts ***!
      \*************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSharingParameterApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/sharingResponse.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/sharingResponse.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSharingResponseApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/siblings.api.model.ts":
    /*!*****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/siblings.api.model.ts ***!
      \*****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSiblingsApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/simpleMetadataProcessingReport.api.model.ts":
    /*!***************************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/simpleMetadataProcessingReport.api.model.ts ***!
      \***************************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSimpleMetadataProcessingReportApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/siteInformation.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/siteInformation.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSiteInformationApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/sort.api.model.ts":
    /*!*************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/sort.api.model.ts ***!
      \*************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSortApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/source.api.model.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/source.api.model.ts ***!
      \***************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSourceApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/status.api.model.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/status.api.model.ts ***!
      \***************************************************************************************************************/

    /*! exports provided: StatusApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelStatusApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "StatusApiModel", function () {
        return StatusApiModel;
      });
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */


      var StatusApiModel;

      (function (StatusApiModel) {
        StatusApiModel.StateEnum = {
          RED: 'RED',
          UNINITIALIZED: 'UNINITIALIZED',
          YELLOW: 'YELLOW',
          GREEN: 'GREEN',
          DISABLED: 'DISABLED'
        };
      })(StatusApiModel || (StatusApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/statusValue.api.model.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/statusValue.api.model.ts ***!
      \********************************************************************************************************************/

    /*! exports provided: StatusValueApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelStatusValueApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "StatusValueApiModel", function () {
        return StatusValueApiModel;
      });
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */


      var StatusValueApiModel;

      (function (StatusValueApiModel) {
        StatusValueApiModel.TypeEnum = {
          Workflow: 'workflow',
          Task: 'task',
          Event: 'event'
        };
        StatusValueApiModel.NotificationLevelEnum = {
          StatusUserOwner: 'statusUserOwner',
          CatalogueAdministrator: 'catalogueAdministrator',
          CatalogueProfileAdministrator: 'catalogueProfileAdministrator',
          CatalogueProfileUserAdmin: 'catalogueProfileUserAdmin',
          CatalogueProfileReviewer: 'catalogueProfileReviewer',
          CatalogueProfileEditor: 'catalogueProfileEditor',
          CatalogueProfileRegisteredUser: 'catalogueProfileRegisteredUser',
          CatalogueProfileGuest: 'catalogueProfileGuest',
          RecordProfileReviewer: 'recordProfileReviewer',
          RecordUserAuthor: 'recordUserAuthor'
        };
      })(StatusValueApiModel || (StatusValueApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/suggestionType.api.model.ts":
    /*!***********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/suggestionType.api.model.ts ***!
      \***********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSuggestionTypeApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/systemInfo.api.model.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/systemInfo.api.model.ts ***!
      \*******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelSystemInfoApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/thumbnail.api.model.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/thumbnail.api.model.ts ***!
      \******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelThumbnailApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/transferRequest.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/transferRequest.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelTransferRequestApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/uiSetting.api.model.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/uiSetting.api.model.ts ***!
      \******************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUiSettingApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/user.api.model.ts":
    /*!*************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/user.api.model.ts ***!
      \*************************************************************************************************************/

    /*! exports provided: UserApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UserApiModel", function () {
        return UserApiModel;
      });

      var UserApiModel;

      (function (UserApiModel) {
        UserApiModel.ProfileEnum = {
          Administrator: 'Administrator',
          UserAdmin: 'UserAdmin',
          Reviewer: 'Reviewer',
          Editor: 'Editor',
          RegisteredUser: 'RegisteredUser',
          Guest: 'Guest',
          Monitor: 'Monitor'
        };
      })(UserApiModel || (UserApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/userDto.api.model.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/userDto.api.model.ts ***!
      \****************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserDtoApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/userFeedbackDTO.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/userFeedbackDTO.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserFeedbackDTOApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/userGroup.api.model.ts":
    /*!******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/userGroup.api.model.ts ***!
      \******************************************************************************************************************/

    /*! exports provided: UserGroupApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserGroupApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UserGroupApiModel", function () {
        return UserGroupApiModel;
      });

      var UserGroupApiModel;

      (function (UserGroupApiModel) {
        UserGroupApiModel.ProfileEnum = {
          Administrator: 'Administrator',
          UserAdmin: 'UserAdmin',
          Reviewer: 'Reviewer',
          Editor: 'Editor',
          RegisteredUser: 'RegisteredUser',
          Guest: 'Guest',
          Monitor: 'Monitor'
        };
      })(UserGroupApiModel || (UserGroupApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/userGroupId.api.model.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/userGroupId.api.model.ts ***!
      \********************************************************************************************************************/

    /*! exports provided: UserGroupIdApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserGroupIdApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UserGroupIdApiModel", function () {
        return UserGroupIdApiModel;
      });
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */


      var UserGroupIdApiModel;

      (function (UserGroupIdApiModel) {
        UserGroupIdApiModel.ProfileEnum = {
          Administrator: 'Administrator',
          UserAdmin: 'UserAdmin',
          Reviewer: 'Reviewer',
          Editor: 'Editor',
          RegisteredUser: 'RegisteredUser',
          Guest: 'Guest',
          Monitor: 'Monitor'
        };
      })(UserGroupIdApiModel || (UserGroupIdApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/userGroupsResponse.api.model.ts":
    /*!***************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/userGroupsResponse.api.model.ts ***!
      \***************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserGroupsResponseApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/userRegisterDto.api.model.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/userRegisterDto.api.model.ts ***!
      \************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserRegisterDtoApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/userSearchDto.api.model.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/userSearchDto.api.model.ts ***!
      \**********************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserSearchDtoApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/userSecurity.api.model.ts":
    /*!*********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/userSecurity.api.model.ts ***!
      \*********************************************************************************************************************/

    /*! exports provided: UserSecurityApiModel */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelUserSecurityApiModelTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UserSecurityApiModel", function () {
        return UserSecurityApiModel;
      });

      var UserSecurityApiModel;

      (function (UserSecurityApiModel) {
        UserSecurityApiModel.SecurityNotificationsEnum = {
          UPDATEHASHREQUIRED: 'UPDATE_HASH_REQUIRED',
          UNKNOWN: 'UNKNOWN'
        };
      })(UserSecurityApiModel || (UserSecurityApiModel = {}));
      /***/

    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/values.api.model.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/values.api.model.ts ***!
      \***************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelValuesApiModelTs(module, exports) {
      /**
       * GeoNetwork 4.0.3 OpenAPI Documentation
       * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
       *
       * The version of the OpenAPI document: 4.0.3
       * Contact: geonetwork-users@lists.sourceforge.net
       *
       * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
       * https://openapi-generator.tech
       * Do not edit the class manually.
       */

      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/model/xsltMetadataProcessingReport.api.model.ts":
    /*!*************************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/model/xsltMetadataProcessingReport.api.model.ts ***!
      \*************************************************************************************************************************************/

    /*! no static exports found */

    /***/
    function libsGnApiSrcLibGn4OpenapiModelXsltMetadataProcessingReportApiModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/gn-api/src/lib/gn4/openapi/variables.ts":
    /*!**************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/gn-api/src/lib/gn4/openapi/variables.ts ***!
      \**************************************************************************************************/

    /*! exports provided: BASE_PATH, COLLECTION_FORMATS */

    /***/
    function libsGnApiSrcLibGn4OpenapiVariablesTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "BASE_PATH", function () {
        return BASE_PATH;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "COLLECTION_FORMATS", function () {
        return COLLECTION_FORMATS;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

      var BASE_PATH = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('basePath');
      var COLLECTION_FORMATS = {
        csv: ',',
        tsv: '   ',
        ssv: ' ',
        pipes: '|'
      };
      /***/
    },

    /***/
    "../../libs/search/src/index.ts":
    /*!******************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/index.ts ***!
      \******************************************************************************/

    /*! exports provided: LibSearchModule, ADD_SEARCH, SET_FILTERS, SET_CONFIG_FILTERS, UPDATE_FILTERS, SET_SEARCH, SET_SORT_BY, SET_PAGINATION, PAGINATE, SCROLL, SET_RESULTS_LAYOUT, ADD_RESULTS, CLEAR_PAGINATION, CLEAR_RESULTS, REQUEST_MORE_RESULTS, SET_RESULTS_AGGREGATIONS, SET_RESULTS_HITS, SET_CONFIG_AGGREGATIONS, REQUEST_MORE_ON_AGGREGATION, SET_INCLUDE_ON_AGGREGATION, UPDATE_REQUEST_AGGREGATION_TERM, PATCH_RESULTS_AGGREGATIONS, DEFAULT_SEARCH_KEY, AddSearch, SetConfigFilters, SetFilters, UpdateFilters, SetSearch, SetSortBy, SetPagination, Paginate, ClearPagination, Scroll, SetResultsLayout, AddResults, ClearResults, RequestMoreResults, SetResultsAggregations, SetResultsHits, SetConfigAggregations, RequestMoreOnAggregation, SetIncludeOnAggregation, UpdateRequestAggregationTerm, PatchResultsAggregations, getSearchState, getSearchStateSearch, getSearchFilters, getSearchSortBy, getSearchResultsLayout, getSearchConfigAggregations, getSearchResults, getSearchResultsLoading, getSearchResultsAggregations, getSearchResultsHits, isEndOfResults, SearchFacade, SearchEffects, SEARCH_FEATURE_KEY, initSearch, initialState, reducer, reducerSearch, ElasticsearchMapper, ElasticsearchService, ES_FIXTURE_REQUEST_WITH_AGGS, aggsOnly, ES_FIXTURE_AGGS_REQUEST, ES_FIXTURE_AGGS_RESPONSE, ES_FIXTURE_AGGS_RESPONSE_MORE */

    /***/
    function libsSearchSrcIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_search_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./lib/search.module */
      "../../libs/search/src/lib/search.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "LibSearchModule", function () {
        return _lib_search_module__WEBPACK_IMPORTED_MODULE_0__["LibSearchModule"];
      });
      /* harmony import */


      var _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./lib/state/actions */
      "../../libs/search/src/lib/state/actions.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ADD_SEARCH", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["ADD_SEARCH"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_FILTERS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_FILTERS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_CONFIG_FILTERS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_CONFIG_FILTERS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UPDATE_FILTERS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["UPDATE_FILTERS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_SEARCH", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_SEARCH"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_SORT_BY", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_SORT_BY"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_PAGINATION", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_PAGINATION"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "PAGINATE", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["PAGINATE"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SCROLL", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SCROLL"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_RESULTS_LAYOUT", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_RESULTS_LAYOUT"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ADD_RESULTS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["ADD_RESULTS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "CLEAR_PAGINATION", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["CLEAR_PAGINATION"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "CLEAR_RESULTS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["CLEAR_RESULTS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "REQUEST_MORE_RESULTS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["REQUEST_MORE_RESULTS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_RESULTS_AGGREGATIONS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_RESULTS_AGGREGATIONS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_RESULTS_HITS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_RESULTS_HITS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_CONFIG_AGGREGATIONS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_CONFIG_AGGREGATIONS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "REQUEST_MORE_ON_AGGREGATION", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["REQUEST_MORE_ON_AGGREGATION"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SET_INCLUDE_ON_AGGREGATION", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SET_INCLUDE_ON_AGGREGATION"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UPDATE_REQUEST_AGGREGATION_TERM", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["UPDATE_REQUEST_AGGREGATION_TERM"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "PATCH_RESULTS_AGGREGATIONS", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["PATCH_RESULTS_AGGREGATIONS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "DEFAULT_SEARCH_KEY", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_SEARCH_KEY"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "AddSearch", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["AddSearch"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetConfigFilters", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetConfigFilters"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetFilters", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetFilters"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UpdateFilters", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["UpdateFilters"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetSearch", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetSearch"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetSortBy", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetSortBy"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetPagination", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetPagination"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "Paginate", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["Paginate"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ClearPagination", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["ClearPagination"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "Scroll", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["Scroll"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetResultsLayout", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetResultsLayout"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "AddResults", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["AddResults"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ClearResults", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["ClearResults"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RequestMoreResults", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["RequestMoreResults"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetResultsAggregations", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetResultsAggregations"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetResultsHits", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetResultsHits"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetConfigAggregations", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetConfigAggregations"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "RequestMoreOnAggregation", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["RequestMoreOnAggregation"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SetIncludeOnAggregation", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["SetIncludeOnAggregation"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UpdateRequestAggregationTerm", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["UpdateRequestAggregationTerm"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "PatchResultsAggregations", function () {
        return _lib_state_actions__WEBPACK_IMPORTED_MODULE_1__["PatchResultsAggregations"];
      });
      /* harmony import */


      var _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./lib/state/selectors */
      "../../libs/search/src/lib/state/selectors.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchState", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchState"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchStateSearch", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchStateSearch"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchFilters", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchFilters"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchSortBy", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchSortBy"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchResultsLayout", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchResultsLayout"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchConfigAggregations", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchConfigAggregations"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchResults", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchResults"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchResultsLoading", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchResultsLoading"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchResultsAggregations", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchResultsAggregations"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSearchResultsHits", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["getSearchResultsHits"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isEndOfResults", function () {
        return _lib_state_selectors__WEBPACK_IMPORTED_MODULE_2__["isEndOfResults"];
      });
      /* harmony import */


      var _lib_state_search_facade__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./lib/state/search.facade */
      "../../libs/search/src/lib/state/search.facade.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SearchFacade", function () {
        return _lib_state_search_facade__WEBPACK_IMPORTED_MODULE_3__["SearchFacade"];
      });
      /* harmony import */


      var _lib_state_effects__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./lib/state/effects */
      "../../libs/search/src/lib/state/effects.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SearchEffects", function () {
        return _lib_state_effects__WEBPACK_IMPORTED_MODULE_4__["SearchEffects"];
      });
      /* harmony import */


      var _lib_state_reducer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./lib/state/reducer */
      "../../libs/search/src/lib/state/reducer.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "SEARCH_FEATURE_KEY", function () {
        return _lib_state_reducer__WEBPACK_IMPORTED_MODULE_5__["SEARCH_FEATURE_KEY"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "initSearch", function () {
        return _lib_state_reducer__WEBPACK_IMPORTED_MODULE_5__["initSearch"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "initialState", function () {
        return _lib_state_reducer__WEBPACK_IMPORTED_MODULE_5__["initialState"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "reducer", function () {
        return _lib_state_reducer__WEBPACK_IMPORTED_MODULE_5__["reducer"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "reducerSearch", function () {
        return _lib_state_reducer__WEBPACK_IMPORTED_MODULE_5__["reducerSearch"];
      });
      /* harmony import */


      var _lib_elasticsearch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./lib/elasticsearch */
      "../../libs/search/src/lib/elasticsearch/index.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ElasticsearchMapper", function () {
        return _lib_elasticsearch__WEBPACK_IMPORTED_MODULE_6__["ElasticsearchMapper"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ElasticsearchService", function () {
        return _lib_elasticsearch__WEBPACK_IMPORTED_MODULE_6__["ElasticsearchService"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_REQUEST_WITH_AGGS", function () {
        return _lib_elasticsearch__WEBPACK_IMPORTED_MODULE_6__["ES_FIXTURE_REQUEST_WITH_AGGS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "aggsOnly", function () {
        return _lib_elasticsearch__WEBPACK_IMPORTED_MODULE_6__["aggsOnly"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_REQUEST", function () {
        return _lib_elasticsearch__WEBPACK_IMPORTED_MODULE_6__["ES_FIXTURE_AGGS_REQUEST"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_RESPONSE", function () {
        return _lib_elasticsearch__WEBPACK_IMPORTED_MODULE_6__["ES_FIXTURE_AGGS_RESPONSE"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_RESPONSE_MORE", function () {
        return _lib_elasticsearch__WEBPACK_IMPORTED_MODULE_6__["ES_FIXTURE_AGGS_RESPONSE_MORE"];
      });
      /*
       * Public API Surface of search
       */

      /***/

    },

    /***/
    "../../libs/search/src/lib/elasticsearch/constant.ts":
    /*!***************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/constant.ts ***!
      \***************************************************************************************************/

    /*! exports provided: ElasticsearchMetadataModels, ES_SOURCE_SUMMARY, ES_SOURCE_BRIEF, ElasticSearchSources */

    /***/
    function libsSearchSrcLibElasticsearchConstantTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      var _ElasticSearchSources;

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ElasticsearchMetadataModels", function () {
        return ElasticsearchMetadataModels;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ES_SOURCE_SUMMARY", function () {
        return ES_SOURCE_SUMMARY;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ES_SOURCE_BRIEF", function () {
        return ES_SOURCE_BRIEF;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ElasticSearchSources", function () {
        return ElasticSearchSources;
      });

      var ElasticsearchMetadataModels;

      (function (ElasticsearchMetadataModels) {
        ElasticsearchMetadataModels[ElasticsearchMetadataModels["SUMMARY"] = 0] = "SUMMARY";
        ElasticsearchMetadataModels[ElasticsearchMetadataModels["BRIEF"] = 1] = "BRIEF";
        ElasticsearchMetadataModels[ElasticsearchMetadataModels["FULL"] = 2] = "FULL";
      })(ElasticsearchMetadataModels || (ElasticsearchMetadataModels = {}));

      var ES_SOURCE_SUMMARY = ['uuid', 'id', 'title', 'resource*', 'resourceTitleObject', 'resourceAbstractObject', 'overview', 'logo', 'codelist_status_text'];
      var ES_SOURCE_BRIEF = [].concat(ES_SOURCE_SUMMARY, ['resourceTypeObject', 'Org', 'link']);
      var ElasticSearchSources = (_ElasticSearchSources = {}, _defineProperty(_ElasticSearchSources, ElasticsearchMetadataModels.SUMMARY, ES_SOURCE_SUMMARY), _defineProperty(_ElasticSearchSources, ElasticsearchMetadataModels.BRIEF, ES_SOURCE_BRIEF), _ElasticSearchSources);
      /***/
    },

    /***/
    "../../libs/search/src/lib/elasticsearch/elasticsearch.mapper.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/elasticsearch.mapper.ts ***!
      \***************************************************************************************************************/

    /*! exports provided: ElasticsearchMapper */

    /***/
    function libsSearchSrcLibElasticsearchElasticsearchMapperTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ElasticsearchMapper", function () {
        return ElasticsearchMapper;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");

      var ElasticsearchMapper = /*#__PURE__*/function () {
        function ElasticsearchMapper(metadataUrlService) {
          _classCallCheck(this, ElasticsearchMapper);

          this.metadataUrlService = metadataUrlService;
        }

        _createClass(ElasticsearchMapper, [{
          key: "toRecordSummary",
          value: function toRecordSummary(response, apiPath) {
            var _this89 = this;

            return response.hits.hits.map(function (hit) {
              var _a, _b, _c;

              return {
                uuid: hit._id,
                id: hit._source.id,
                title: ((_a = hit._source.resourceTitleObject) === null || _a === void 0 ? void 0 : _a["default"]) || 'no title',
                "abstract": ((_b = hit._source.resourceAbstractObject) === null || _b === void 0 ? void 0 : _b["default"]) || 'no abstract',
                thumbnailUrl: ((_c = _this89.getFirstValue(hit._source.overview)) === null || _c === void 0 ? void 0 : _c.url) || '',
                metadataUrl: _this89.metadataUrlService.getUrl(hit._source.uuid, apiPath),
                downloadable: hit.download,
                viewable: hit.view,
                logoUrl: "/geonetwork".concat(hit._source.logo),
                updateFrequency: _this89.getFirstValue(hit._source.codelist_status_text),
                link: hit._source.link
              };
            });
          }
        }, {
          key: "toRecordBrief",
          value: function toRecordBrief(response, apiPath) {
            var _this90 = this;

            return response.hits.hits.map(function (hit) {
              var _a, _b, _c;

              return {
                uuid: hit._id,
                id: hit._source.id,
                title: ((_a = hit._source.resourceTitleObject) === null || _a === void 0 ? void 0 : _a["default"]) || 'no title',
                "abstract": ((_b = hit._source.resourceAbstractObject) === null || _b === void 0 ? void 0 : _b["default"]) || 'no abstract',
                thumbnailUrl: ((_c = _this90.getFirstValue(hit._source.overview)) === null || _c === void 0 ? void 0 : _c.url) || '',
                metadataUrl: _this90.metadataUrlService.getUrl(hit._source.uuid, apiPath),
                downloadable: hit.download,
                viewable: hit.view,
                logoUrl: "/geonetwork".concat(hit._source.logo),
                updateFrequency: _this90.getFirstValue(hit._source.codelist_status_text),
                link: hit._source.link,
                organization: hit._source.Org,
                type: hit._source.resourceType[0]
              };
            });
          }
        }, {
          key: "getFirstValue",
          value: function getFirstValue(field) {
            return Array.isArray(field) ? field[0] : field;
          }
        }]);

        return ElasticsearchMapper;
      }();

      ElasticsearchMapper.ɵfac = function ElasticsearchMapper_Factory(t) {
        return new (t || ElasticsearchMapper)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_lib_common__WEBPACK_IMPORTED_MODULE_1__["MetadataUrlService"]));
      };

      ElasticsearchMapper.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: ElasticsearchMapper,
        factory: ElasticsearchMapper.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ElasticsearchMapper, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _lib_common__WEBPACK_IMPORTED_MODULE_1__["MetadataUrlService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/elasticsearch/elasticsearch.service.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/elasticsearch.service.ts ***!
      \****************************************************************************************************************/

    /*! exports provided: ElasticsearchService */

    /***/
    function libsSearchSrcLibElasticsearchElasticsearchServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ElasticsearchService", function () {
        return ElasticsearchService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./constant */
      "../../libs/search/src/lib/elasticsearch/constant.ts");

      var ElasticsearchService = /*#__PURE__*/function () {
        function ElasticsearchService() {
          _classCallCheck(this, ElasticsearchService);
        }

        _createClass(ElasticsearchService, [{
          key: "getSearchRequestBody",
          value: function getSearchRequestBody(state, model) {
            var _state$params = state.params,
                size = _state$params.size,
                from = _state$params.from;
            var payload = {
              aggregations: state.config.aggregations,
              from: from,
              size: size,
              sort: this.buildPayloadSort(state),
              query: this.buildPayloadQuery(state),
              _source: _constant__WEBPACK_IMPORTED_MODULE_1__["ElasticSearchSources"][model]
            };
            return payload;
          }
        }, {
          key: "buildPayloadSort",
          value: function buildPayloadSort(state) {
            var sortBy = state.params.sortBy;
            return sortBy ? sortBy.split(',').map(function (s) {
              if (s.startsWith('-')) {
                return _defineProperty({}, s.substring(1), 'desc');
              } else {
                return s;
              }
            }) : undefined;
          }
        }, {
          key: "buildPayloadQuery",
          value: function buildPayloadQuery(state) {
            var filters = state.params.filters;

            var any = filters.any,
                searchFilters = _objectWithoutProperties(filters, ["any"]);

            var queryFilters = this.stateFiltersToQueryString(searchFilters);
            var queryAny = "(".concat(any || '*', ")");
            var query = queryAny + (queryFilters.length > 0 ? " AND ".concat(queryFilters) : '');
            var partialQuery = {
              bool: {
                must: [{
                  query_string: {
                    query: query
                  }
                }],
                filter: this.buildPayloadFilter(state)
              }
            };
            return partialQuery;
          }
        }, {
          key: "buildPayloadFilter",
          value: function buildPayloadFilter(state) {
            var filters = state.config.filters;
            var custom = filters.custom,
                elastic = filters.elastic;
            var queryString = this.stateFiltersToQueryString(custom);
            var query = [];

            if (elastic) {
              if (!Array.isArray(elastic)) {
                query.push(elastic);
              } else {
                query.push.apply(query, _toConsumableArray(elastic));
              }
            } else if (custom) {
              query.push({
                query_string: {
                  query: queryString
                }
              });
            }

            return query;
          }
        }, {
          key: "buildMoreOnAggregationPayload",
          value: function buildMoreOnAggregationPayload(state, key) {
            var payload = {
              aggregations: _defineProperty({}, key, state.config.aggregations[key]),
              size: 0,
              query: this.buildPayloadQuery(state)
            };
            return payload;
          }
        }, {
          key: "combineQueryGroups",
          value: function combineQueryGroups(queryGroups) {
            return queryGroups ? queryGroups.join(' AND ').trim() : '';
          }
          /**
           * Facets state is an object like this:
           *
           * {
           *   'tag': {
           *     'world': true,
           *     'vector': true
           *   },
           *   'availableInService' : {
           *     'availableInViewService': '+linkProtocol:\/OGC:WMS.*\/'
           *   },
           *   'resourceType': {
           *     'service': {
           *       'serviceType': {
           *         'OGC:WMS': true
           *         'OGC:WFS': false
           *       }
           *     },
           *     'download': {
           *       'serviceType': {
           *       }
           *     },
           *     'dataset': true
           *   }
           * }
           */

        }, {
          key: "stateFiltersToQueryString",
          value: function stateFiltersToQueryString(facetsState) {
            var query = [];

            for (var indexKey in facetsState) {
              if (facetsState.hasOwnProperty(indexKey)) {
                var queryChunk = this.parseStateNode(indexKey, facetsState[indexKey], undefined);

                if (queryChunk) {
                  query.push(queryChunk);
                }
              }
            }

            return this.combineQueryGroups(query);
          }
        }, {
          key: "parseStateNode",
          value: function parseStateNode(nodeName, node, indexKey) {
            var queryString = '';

            if (node && typeof node === 'object') {
              var chunks = [];

              for (var p in node) {
                // nesting
                if (node[p] && typeof node[p] === 'object') {
                  var nextLvlKey = Object.keys(node[p])[0];
                  var nextLvlState = node[p][nextLvlKey];

                  if (Object.keys(nextLvlState).length) {
                    var nestedChunks = [nodeName + ':' + '"' + p + '"'];
                    var chunk = this.parseStateNode(nextLvlKey, nextLvlState, nextLvlKey).trim();

                    if (chunk) {
                      nestedChunks.push(chunk);
                    }

                    chunks.push('(' + nestedChunks.join(' AND ') + ')');
                  }
                } else {
                  var _chunk = this.parseStateNode(p, node[p], nodeName).trim();

                  if (_chunk) {
                    chunks.push(_chunk);
                  }
                }
              }

              if (chunks && chunks.length) {
                queryString += '(';
                queryString += chunks.join(' ');
                queryString += ')';
              }
            } else if (typeof node === 'string') {
              queryString += node;
            } else if (node === true) {
              queryString += indexKey + ':"' + nodeName + '"';
            } else if (node === false) {
              queryString += '-' + indexKey + ':"' + nodeName + '"';
            }

            return queryString;
          }
        }]);

        return ElasticsearchService;
      }();

      ElasticsearchService.ɵfac = function ElasticsearchService_Factory(t) {
        return new (t || ElasticsearchService)();
      };

      ElasticsearchService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: ElasticsearchService,
        factory: ElasticsearchService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ElasticsearchService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/elasticsearch/fixtures/aggregations-request.ts":
    /*!************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/fixtures/aggregations-request.ts ***!
      \************************************************************************************************************************/

    /*! exports provided: ES_FIXTURE_AGGS_REQUEST */

    /***/
    function libsSearchSrcLibElasticsearchFixturesAggregationsRequestTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_REQUEST", function () {
        return ES_FIXTURE_AGGS_REQUEST;
      });

      var ES_FIXTURE_AGGS_REQUEST = {
        'tag.default': {
          terms: {
            field: 'tag.default',
            include: '.*',
            size: 10
          }
        },
        availableInServices: {
          filters: {
            filters: {
              availableInViewService: {
                query_string: {
                  query: '+linkProtocol:/OGC:WMS.*/'
                }
              },
              availableInDownloadService: {
                query_string: {
                  query: '+linkProtocol:/OGC:WFS.*/'
                }
              }
            }
          }
        },
        resolutionScaleDenominator: {
          histogram: {
            field: 'resolutionScaleDenominator',
            interval: 10000,
            keyed: true,
            min_doc_count: 1
          },
          meta: {
            collapsed: true
          }
        }
      };
      /***/
    },

    /***/
    "../../libs/search/src/lib/elasticsearch/fixtures/aggregations-response.ts":
    /*!*************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/fixtures/aggregations-response.ts ***!
      \*************************************************************************************************************************/

    /*! exports provided: ES_FIXTURE_AGGS_RESPONSE, ES_FIXTURE_AGGS_RESPONSE_MORE */

    /***/
    function libsSearchSrcLibElasticsearchFixturesAggregationsResponseTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_RESPONSE", function () {
        return ES_FIXTURE_AGGS_RESPONSE;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_RESPONSE_MORE", function () {
        return ES_FIXTURE_AGGS_RESPONSE_MORE;
      });

      var BUCKETS = [{
        key: 'Hungary',
        doc_count: 20
      }, {
        key: 'Austria',
        doc_count: 3
      }, {
        key: 'Belgium',
        doc_count: 8
      }, {
        key: 'Bulgaria',
        doc_count: 2
      }, {
        key: 'Croatia',
        doc_count: 15
      }, {
        key: 'Cyprus',
        doc_count: 5
      }];
      var ES_FIXTURE_AGGS_RESPONSE = {
        'tag.default': {
          doc_count_error_upper_bound: 0,
          sum_other_doc_count: 458,
          buckets: BUCKETS
        },
        availableInServices: {
          buckets: {
            availableInDownloadService: {
              doc_count: 0
            },
            availableInViewService: {
              doc_count: 299
            }
          }
        },
        resolutionScaleDenominator: {
          meta: {
            collapsed: true
          },
          buckets: {
            '0.0': {
              key: 0,
              doc_count: 2
            },
            '10000.0': {
              key: 10000,
              doc_count: 291
            },
            '20000.0': {
              key: 20000,
              doc_count: 1
            },
            '50000.0': {
              key: 50000,
              doc_count: 9
            },
            '100000.0': {
              key: 100000,
              doc_count: 135
            },
            '250000.0': {
              key: 250000,
              doc_count: 54
            },
            '1000000.0': {
              key: 1000000,
              doc_count: 55
            },
            '2000000.0': {
              key: 2000000,
              doc_count: 3
            },
            '3000000.0': {
              key: 3000000,
              doc_count: 10
            },
            '1.0E7': {
              key: 10000000,
              doc_count: 93
            },
            '2.0E7': {
              key: 20000000,
              doc_count: 9
            },
            '6.0E7': {
              key: 60000000,
              doc_count: 8
            }
          }
        }
      };
      var ES_FIXTURE_AGGS_RESPONSE_MORE = {
        'tag.default': {
          doc_count_error_upper_bound: 0,
          sum_other_doc_count: 456,
          buckets: [].concat(BUCKETS, [{
            key: 'Spain',
            doc_count: 86
          }, {
            key: 'United Kingdom',
            doc_count: 84
          }])
        }
      };
      /***/
    },

    /***/
    "../../libs/search/src/lib/elasticsearch/fixtures/index.ts":
    /*!*********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/fixtures/index.ts ***!
      \*********************************************************************************************************/

    /*! exports provided: ES_FIXTURE_REQUEST_WITH_AGGS, aggsOnly, ES_FIXTURE_AGGS_REQUEST, ES_FIXTURE_AGGS_RESPONSE, ES_FIXTURE_AGGS_RESPONSE_MORE */

    /***/
    function libsSearchSrcLibElasticsearchFixturesIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _search_requests__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./search-requests */
      "../../libs/search/src/lib/elasticsearch/fixtures/search-requests.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_REQUEST_WITH_AGGS", function () {
        return _search_requests__WEBPACK_IMPORTED_MODULE_0__["ES_FIXTURE_REQUEST_WITH_AGGS"];
      });
      /* harmony import */


      var _search_responses__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./search-responses */
      "../../libs/search/src/lib/elasticsearch/fixtures/search-responses.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "aggsOnly", function () {
        return _search_responses__WEBPACK_IMPORTED_MODULE_1__["aggsOnly"];
      });
      /* harmony import */


      var _aggregations_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./aggregations-request */
      "../../libs/search/src/lib/elasticsearch/fixtures/aggregations-request.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_REQUEST", function () {
        return _aggregations_request__WEBPACK_IMPORTED_MODULE_2__["ES_FIXTURE_AGGS_REQUEST"];
      });
      /* harmony import */


      var _aggregations_response__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./aggregations-response */
      "../../libs/search/src/lib/elasticsearch/fixtures/aggregations-response.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_RESPONSE", function () {
        return _aggregations_response__WEBPACK_IMPORTED_MODULE_3__["ES_FIXTURE_AGGS_RESPONSE"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_RESPONSE_MORE", function () {
        return _aggregations_response__WEBPACK_IMPORTED_MODULE_3__["ES_FIXTURE_AGGS_RESPONSE_MORE"];
      });
      /***/

    },

    /***/
    "../../libs/search/src/lib/elasticsearch/fixtures/search-requests.ts":
    /*!*******************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/fixtures/search-requests.ts ***!
      \*******************************************************************************************************************/

    /*! exports provided: ES_FIXTURE_REQUEST_WITH_AGGS */

    /***/
    function libsSearchSrcLibElasticsearchFixturesSearchRequestsTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_REQUEST_WITH_AGGS", function () {
        return ES_FIXTURE_REQUEST_WITH_AGGS;
      });

      var ES_FIXTURE_REQUEST_WITH_AGGS = {
        from: 0,
        size: 30,
        sort: ['_score'],
        query: {
          function_score: {
            boost: '5',
            functions: [{
              filter: {
                exists: {
                  field: 'parentUuid'
                }
              },
              weight: 0.3
            }, {
              filter: {
                match: {
                  codelist_status: 'obsolete'
                }
              },
              weight: 0.3
            }, {
              gauss: {
                dateStamp: {
                  scale: '365d',
                  offset: '90d',
                  decay: 0.5
                }
              }
            }],
            score_mode: 'multiply',
            query: {
              bool: {
                must: [{
                  query_string: {
                    query: '(marine resourceTitleObject.default:(marine)^2) AND (tag:"Hungary")'
                  }
                }, {
                  terms: {
                    isTemplate: ['n']
                  }
                }]
              }
            }
          }
        },
        aggregations: {
          codelist_hierarchyLevel_text: {
            terms: {
              field: 'codelist_hierarchyLevel_text'
            },
            aggs: {
              format: {
                terms: {
                  field: 'format'
                }
              }
            }
          },
          codelist_spatialRepresentationType: {
            terms: {
              field: 'codelist_spatialRepresentationType',
              size: 10
            }
          },
          availableInServices: {
            filters: {
              filters: {
                availableInViewService: {
                  query_string: {
                    query: '+linkProtocol:/OGC:WMS.*/'
                  }
                },
                availableInDownloadService: {
                  query_string: {
                    query: '+linkProtocol:/OGC:WFS.*/'
                  }
                }
              }
            }
          },
          thesaurus_geonetworkthesaurusexternalthemegemet_tree: {
            terms: {
              field: 'thesaurus_geonetworkthesaurusexternalthemegemet_tree',
              size: 100,
              order: {
                _key: 'asc'
              },
              include: '[^/]+/?[^/]+'
            }
          },
          tag: {
            terms: {
              field: 'tag',
              include: '.*',
              size: 21
            }
          },
          thesaurus_geonetworkthesaurusexternalplaceregions_tree: {
            terms: {
              field: 'thesaurus_geonetworkthesaurusexternalplaceregions_tree',
              size: 100,
              order: {
                _key: 'asc'
              }
            }
          },
          resolutionScaleDenominator: {
            terms: {
              field: 'resolutionScaleDenominator',
              size: 10,
              order: {
                _key: 'asc'
              }
            }
          },
          creationYearForResource: {
            terms: {
              field: 'creationYearForResource',
              size: 10,
              order: {
                _key: 'desc'
              }
            }
          },
          OrgForResource: {
            terms: {
              field: 'OrgForResource',
              size: 15
            }
          },
          codelist_maintenanceAndUpdateFrequency_text: {
            terms: {
              field: 'codelist_maintenanceAndUpdateFrequency_text',
              size: 10
            }
          },
          codelist_status_text: {
            terms: {
              field: 'codelist_status_text',
              size: 10
            }
          },
          dateStamp: {
            auto_date_histogram: {
              field: 'dateStamp',
              buckets: 50
            }
          }
        },
        _source: {
          includes: ['uuid', 'id', 'creat*', 'group*', 'logo', 'category', 'topic*', 'inspire*', 'resource*', 'draft', 'overview.*', 'owner*', 'link*', 'image*', 'status*', 'rating', 'tag*', 'geom', 'contact*', '*Org*', 'hasBoundingPolygon', 'isTemplate', 'valid', 'isHarvested', 'dateStamp', 'documentStandard', 'codelist_status*', 'recordLink']
        },
        track_total_hits: true
      };
      /***/
    },

    /***/
    "../../libs/search/src/lib/elasticsearch/fixtures/search-responses.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/fixtures/search-responses.ts ***!
      \********************************************************************************************************************/

    /*! exports provided: aggsOnly */

    /***/
    function libsSearchSrcLibElasticsearchFixturesSearchResponsesTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "aggsOnly", function () {
        return aggsOnly;
      });

      var aggsOnly = {
        took: 7,
        timed_out: false,
        _shards: {
          total: 1,
          successful: 1,
          skipped: 0,
          failed: 0
        },
        hits: {
          total: {
            value: 6073,
            relation: 'eq'
          },
          max_score: null,
          hits: []
        },
        aggregations: {
          results: {
            doc_count_error_upper_bound: 0,
            sum_other_doc_count: 910,
            buckets: [{
              key: 'Habitat e biotopi',
              doc_count: 49
            }, {
              key: 'Habitats and biotopes',
              doc_count: 49
            }, {
              key: 'Habitats et biotopes',
              doc_count: 49
            }, {
              key: 'Lebensräume und Biotope',
              doc_count: 49
            }, {
              key: 'Schutzgebiete',
              doc_count: 41
            }, {
              key: 'Protected sites',
              doc_count: 39
            }, {
              key: 'Sites protégés',
              doc_count: 39
            }, {
              key: 'Siti protetti',
              doc_count: 39
            }, {
              key: 'Verkehrsnetze',
              doc_count: 32
            }, {
              key: 'Gebiete mit naturbedingten Risiken',
              doc_count: 31
            }, {
              key: 'Reti di trasporto',
              doc_count: 30
            }, {
              key: 'Réseaux de transport',
              doc_count: 30
            }, {
              key: 'Transport networks',
              doc_count: 30
            }, {
              key: 'Schutzgebiete Sites protégés Siti protetti Protected sites',
              doc_count: 27
            }, {
              key: 'Zones à risque naturel',
              doc_count: 26
            }, {
              key: 'Habitats et biotopes Lebensräume und Biotope Habitat e biotopi Habitats and biotopes',
              doc_count: 25
            }, {
              key: 'Natural risk zones',
              doc_count: 25
            }, {
              key: 'Zone a rischio naturale',
              doc_count: 25
            }, {
              key: 'Lebensräume und Biotope Habitats et biotopes Habitat e biotopi Habitats and biotopes',
              doc_count: 24
            }, {
              key: 'Réseaux de transport Verkehrsnetze Reti di trasporto Transport networks',
              doc_count: 23
            }, {
              key: 'Geologia',
              doc_count: 22
            }, {
              key: 'Geologie',
              doc_count: 22
            }, {
              key: 'Geology',
              doc_count: 22
            }, {
              key: 'Géologie',
              doc_count: 22
            }, {
              key: 'Gewässernetz',
              doc_count: 20
            }, {
              key: 'Distribuzione delle specie',
              doc_count: 18
            }, {
              key: 'Dénominations géographiques',
              doc_count: 18
            }, {
              key: 'Geografische Bezeichnungen',
              doc_count: 18
            }, {
              key: 'Geographical names',
              doc_count: 18
            }, {
              key: 'Nomi geografici',
              doc_count: 18
            }, {
              key: 'Répartition des espèces',
              doc_count: 18
            }, {
              key: 'Species distribution',
              doc_count: 18
            }, {
              key: 'Verteilung der Arten',
              doc_count: 18
            }, {
              key: 'Gebäude',
              doc_count: 17
            }]
          }
        }
      };
      /***/
    },

    /***/
    "../../libs/search/src/lib/elasticsearch/index.ts":
    /*!************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/elasticsearch/index.ts ***!
      \************************************************************************************************/

    /*! exports provided: ElasticsearchMapper, ElasticsearchService, ES_FIXTURE_REQUEST_WITH_AGGS, aggsOnly, ES_FIXTURE_AGGS_REQUEST, ES_FIXTURE_AGGS_RESPONSE, ES_FIXTURE_AGGS_RESPONSE_MORE */

    /***/
    function libsSearchSrcLibElasticsearchIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _elasticsearch_mapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./elasticsearch.mapper */
      "../../libs/search/src/lib/elasticsearch/elasticsearch.mapper.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ElasticsearchMapper", function () {
        return _elasticsearch_mapper__WEBPACK_IMPORTED_MODULE_0__["ElasticsearchMapper"];
      });
      /* harmony import */


      var _elasticsearch_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./elasticsearch.service */
      "../../libs/search/src/lib/elasticsearch/elasticsearch.service.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ElasticsearchService", function () {
        return _elasticsearch_service__WEBPACK_IMPORTED_MODULE_1__["ElasticsearchService"];
      });
      /* harmony import */


      var _fixtures__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./fixtures */
      "../../libs/search/src/lib/elasticsearch/fixtures/index.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_REQUEST_WITH_AGGS", function () {
        return _fixtures__WEBPACK_IMPORTED_MODULE_2__["ES_FIXTURE_REQUEST_WITH_AGGS"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "aggsOnly", function () {
        return _fixtures__WEBPACK_IMPORTED_MODULE_2__["aggsOnly"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_REQUEST", function () {
        return _fixtures__WEBPACK_IMPORTED_MODULE_2__["ES_FIXTURE_AGGS_REQUEST"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_RESPONSE", function () {
        return _fixtures__WEBPACK_IMPORTED_MODULE_2__["ES_FIXTURE_AGGS_RESPONSE"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ES_FIXTURE_AGGS_RESPONSE_MORE", function () {
        return _fixtures__WEBPACK_IMPORTED_MODULE_2__["ES_FIXTURE_AGGS_RESPONSE_MORE"];
      });
      /***/

    },

    /***/
    "../../libs/search/src/lib/facets/facets-container/facets-container.component.ts":
    /*!*******************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/facets/facets-container/facets-container.component.ts ***!
      \*******************************************************************************************************************************/

    /*! exports provided: FacetsContainerComponent */

    /***/
    function libsSearchSrcLibFacetsFacetsContainerFacetsContainerComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetsContainerComponent", function () {
        return FacetsContainerComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var _state_search_facade__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../state/search.facade */
      "../../libs/search/src/lib/state/search.facade.ts");
      /* harmony import */


      var _facets_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../facets.service */
      "../../libs/search/src/lib/facets/facets.service.ts");
      /* harmony import */


      var _biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @biesbjerg/ngx-translate-extract-marker */
      "../../node_modules/@biesbjerg/ngx-translate-extract-marker/__ivy_ngcc__/fesm2015/biesbjerg-ngx-translate-extract-marker.js");
      /* harmony import */


      var _ui_src_lib_facets_facet_list_facet_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../../../../../ui/src/lib/facets/facet-list/facet-list.component */
      "../../libs/ui/src/lib/facets/facet-list/facet-list.component.ts");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.OrgForResource');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.availableInServices');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.cl_hierarchyLevel.key');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.cl_maintenanceAndUpdateFrequency.key');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.cl_spatialRepresentationType.key');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.cl_status.key');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.creationYearForResource');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.resolutionScaleDenominator');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.tag');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.tag.default');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_5__["marker"])('facets.block.title.th_regions_tree.default');

      var FacetsContainerComponent = /*#__PURE__*/function () {
        function FacetsContainerComponent(facets, searchFacade) {
          _classCallCheck(this, FacetsContainerComponent);

          this.facets = facets;
          this.searchFacade = searchFacade;
        }

        _createClass(FacetsContainerComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this91 = this;

            this.selectedPaths$ = this.searchFacade.searchFilters$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (filters) {
              return _this91.facets.findSelectedPaths(filters);
            }));
            this.models$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])([this.searchFacade.configAggregations$, this.searchFacade.resultsAggregations$]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref2) {
              var _ref3 = _slicedToArray(_ref2, 2),
                  configAggregations = _ref3[0],
                  resultsAggregations = _ref3[1];

              var model = _this91.facets.createFacetModel(configAggregations, resultsAggregations, false);

              return model;
            }));
          }
        }, {
          key: "onItemChange",
          value: function onItemChange(facetEvent) {
            var _this92 = this;

            this.searchFacade.searchFilters$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["take"])(1)).subscribe(function (filters) {
              _this92.updateFilters(filters, facetEvent);
            });
          }
        }, {
          key: "updateFilters",
          value: function updateFilters(filters, facetEvent) {
            var item = facetEvent.item,
                block = facetEvent.block;
            var path = item.path;
            var pathValue = this.facets.computeItemPathValue(block, item);
            var newFilters = this.facets.computeNewFiltersFromState(filters, path, pathValue);
            this.searchFacade.setFilters(newFilters);
          }
        }, {
          key: "onMore",
          value: function onMore(key) {
            this.searchFacade.requestMoreOnAggregation(key, 20);
          }
        }, {
          key: "onFilterChange",
          value: function onFilterChange(term) {
            var include = ".*".concat(term.include, ".*");
            this.searchFacade.setIncludeOnAggregation(term.field, include);
          }
        }]);

        return FacetsContainerComponent;
      }();

      FacetsContainerComponent.ɵfac = function FacetsContainerComponent_Factory(t) {
        return new (t || FacetsContainerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_facets_service__WEBPACK_IMPORTED_MODULE_4__["FacetsService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_state_search_facade__WEBPACK_IMPORTED_MODULE_3__["SearchFacade"]));
      };

      FacetsContainerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: FacetsContainerComponent,
        selectors: [["search-facets-container"]],
        decls: 3,
        vars: 6,
        consts: [[3, "models", "selectedPaths", "itemChange", "more", "filterChange"]],
        template: function FacetsContainerComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ui-facet-list", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("itemChange", function FacetsContainerComponent_Template_ui_facet_list_itemChange_0_listener($event) {
              return ctx.onItemChange($event);
            })("more", function FacetsContainerComponent_Template_ui_facet_list_more_0_listener($event) {
              return ctx.onMore($event);
            })("filterChange", function FacetsContainerComponent_Template_ui_facet_list_filterChange_0_listener($event) {
              return ctx.onFilterChange($event);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("models", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 2, ctx.models$))("selectedPaths", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 4, ctx.selectedPaths$));
          }
        },
        directives: [_ui_src_lib_facets_facet_list_facet_list_component__WEBPACK_IMPORTED_MODULE_6__["FacetListComponent"]],
        pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["AsyncPipe"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3NlYXJjaC9zcmMvbGliL2ZhY2V0cy9mYWNldHMtY29udGFpbmVyL2ZhY2V0cy1jb250YWluZXIuY29tcG9uZW50LmNzcyJ9 */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FacetsContainerComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'search-facets-container',
            templateUrl: './facets-container.component.html',
            styleUrls: ['./facets-container.component.css']
          }]
        }], function () {
          return [{
            type: _facets_service__WEBPACK_IMPORTED_MODULE_4__["FacetsService"]
          }, {
            type: _state_search_facade__WEBPACK_IMPORTED_MODULE_3__["SearchFacade"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/facets/facets.module.ts":
    /*!*************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/facets/facets.module.ts ***!
      \*************************************************************************************************/

    /*! exports provided: FacetsModule */

    /***/
    function libsSearchSrcLibFacetsFacetsModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetsModule", function () {
        return FacetsModule;
      });
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @lib/ui */
      "../../libs/ui/src/index.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _facets_container_facets_container_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./facets-container/facets-container.component */
      "../../libs/search/src/lib/facets/facets-container/facets-container.component.ts");

      var FacetsModule = function FacetsModule() {
        _classCallCheck(this, FacetsModule);
      };

      FacetsModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: FacetsModule
      });
      FacetsModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        factory: function FacetsModule_Factory(t) {
          return new (t || FacetsModule)();
        },
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"].forChild(), _lib_ui__WEBPACK_IMPORTED_MODULE_2__["FacetsModule"]]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](FacetsModule, {
          declarations: [_facets_container_facets_container_component__WEBPACK_IMPORTED_MODULE_4__["FacetsContainerComponent"]],
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"], _lib_ui__WEBPACK_IMPORTED_MODULE_2__["FacetsModule"]],
          exports: [_facets_container_facets_container_component__WEBPACK_IMPORTED_MODULE_4__["FacetsContainerComponent"]]
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](FacetsModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
          args: [{
            declarations: [_facets_container_facets_container_component__WEBPACK_IMPORTED_MODULE_4__["FacetsContainerComponent"]],
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"].forChild(), _lib_ui__WEBPACK_IMPORTED_MODULE_2__["FacetsModule"]],
            exports: [_facets_container_facets_container_component__WEBPACK_IMPORTED_MODULE_4__["FacetsContainerComponent"]]
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/facets/facets.service.ts":
    /*!**************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/facets/facets.service.ts ***!
      \**************************************************************************************************/

    /*! exports provided: FacetsService */

    /***/
    function libsSearchSrcLibFacetsFacetsServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetsService", function () {
        return FacetsService;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");

      var FacetsService = /*#__PURE__*/function () {
        function FacetsService(logger) {
          _classCallCheck(this, FacetsService);

          this.logger = logger;
        }

        _createClass(FacetsService, [{
          key: "createFacetModel",
          value: function createFacetModel(requestAggregations, responseAggregations, isNested) {
            var _this93 = this;

            var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

            var _a;

            if (requestAggregations === undefined) {
              return;
            }

            var listModel = [];

            for (var key in requestAggregations) {
              if (responseAggregations.hasOwnProperty(key)) {
                (function () {
                  var requestAgg = requestAggregations[key];
                  var responseAgg = responseAggregations[key];
                  var blockModel = {
                    key: key,
                    items: [],
                    path: [].concat(_toConsumableArray(path), [((_a = responseAgg.meta) === null || _a === void 0 ? void 0 : _a.field) || key]),
                    meta: responseAgg.meta
                  };

                  if (requestAgg.hasOwnProperty(_lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].TERMS)) {
                    blockModel = _objectSpread(_objectSpread({}, blockModel), {}, {
                      type: _lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].TERMS,
                      size: requestAgg[_lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].TERMS].size,
                      more: responseAgg.sum_other_doc_count > 0,
                      includeFilter: requestAgg.terms.include !== undefined,
                      excludeFilter: requestAgg.terms.exclude !== undefined
                    });
                    responseAgg.buckets.forEach(function (bucket) {
                      if (bucket.key) {
                        var value = bucket.key_as_string || bucket.key;
                        var itemPath = [].concat(_toConsumableArray(blockModel.path), [String(value)]);
                        var itemModel = {
                          value: value,
                          meta: bucket.meta,
                          count: bucket.doc_count,
                          path: itemPath
                        };
                        blockModel.items.push(itemModel);
                      }
                    });
                  } else if (requestAgg.hasOwnProperty(_lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].HISTOGRAM)) {
                    blockModel = _objectSpread(_objectSpread({}, blockModel), {}, {
                      type: _lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].HISTOGRAM,
                      size: requestAgg[_lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].HISTOGRAM].size
                    });

                    if (requestAgg[_lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].HISTOGRAM].keyed) {
                      var entries = Object.entries(responseAgg.buckets);

                      for (var p = 0; p < entries.length; p++) {
                        var entry = entries[p];
                        var nextEntry = entries[p + 1];
                        var lowerBound = entry[1].key;
                        var onlyOneBucket = entries.length === 1;
                        var upperBound = onlyOneBucket ? lowerBound + Number(requestAgg[_lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].HISTOGRAM].interval) : nextEntry ? nextEntry[1].key : '*';
                        var value = lowerBound + '-' + upperBound;
                        var itemPath = [].concat(_toConsumableArray(blockModel.path), [lowerBound + '']);
                        var itemModel = {
                          value: value,
                          meta: entry[1].meta,
                          count: entry[1].doc_count,
                          query_string: "+".concat(requestAgg.histogram.field, ":[").concat(lowerBound, " TO ").concat(upperBound, "}"),
                          path: itemPath
                        };
                        blockModel.items.push(itemModel);
                      }
                    } else {
                      _this93.logger.warn('Facet configuration error. Histogram are only supported with keyed mode.' + 'eg. creationYearForResource: {histogram: { ' + 'field: "creationYearForResource",' + 'interval: 5,' + 'keyed: true,' + 'min_doc_count: 1}}');
                    }
                  } else if (requestAgg.hasOwnProperty(_lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].FILTERS)) {
                    var type = _lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].FILTERS;
                    blockModel = _objectSpread(_objectSpread({}, blockModel), {}, {
                      type: type,
                      size: requestAgg[type].size
                    });
                    Object.entries(responseAgg.buckets).forEach(function (entry) {
                      var itemValue = entry[0];
                      var bucket = entry[1];
                      var itemPath = [].concat(_toConsumableArray(blockModel.path), [itemValue]);
                      var itemModel = {
                        value: itemValue,
                        meta: bucket.meta,
                        count: bucket.doc_count,
                        path: itemPath,
                        query_string: requestAgg.filters.filters[itemValue].query_string.query
                      };
                      blockModel.items.push(itemModel);
                    });
                  } else {
                    _this93.logger.warn('Unsupported aggregation config.', requestAgg);
                  }

                  listModel.push(blockModel);
                })();
              }
            }

            return listModel;
          }
          /**
           * Compute the path value of a facet item. The path value is the last
           * element of the path array.
           * If the item is not selected, returns `null`
           * For 'terms' facet, it is a boolean, true when selected, false when
           * inverted.
           * For 'filters' and 'histogram', it is a lucene expression
           *
           * @param block model
           * @param item model
           */

        }, {
          key: "computeItemPathValue",
          value: function computeItemPathValue(block, item) {
            var selected = item.selected,
                inverted = item.inverted;
            var type = block.type;
            var value = !inverted;

            if (selected) {
              if (type === _lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].FILTERS || type === _lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].HISTOGRAM) {
                value = item.query_string;

                if (inverted) {
                  value = "-(".concat(value, ")");
                }
              }
            } else {
              value = null;
            }

            return value;
          }
          /**
           * Create a new filter object that will be passed to the state.
           * It update recursively the object depending on the path structure.
           *
           * @param filters previous state
           * @param path of the updated item
           * @param value of the updated item
           */

        }, {
          key: "computeNewFiltersFromState",
          value: function computeNewFiltersFromState(filters, path, value) {
            var clone = JSON.parse(JSON.stringify(filters));
            var getter = Object(_lib_common__WEBPACK_IMPORTED_MODULE_1__["parse"])(path.join(_lib_common__WEBPACK_IMPORTED_MODULE_1__["PARSE_DELIMITER"]));

            if (value === null) {
              this.removePathFromFilters_(clone, path);
            } else {
              var setter = getter.assign;
              setter(clone, value);
            }

            return clone;
          }
          /**
           * Remove a filter in the state object, depending on the given path, which
           * could be deep in the parameter tree.
           *
           * @param filters state
           * @param path to remove from state
           */

        }, {
          key: "removePathFromFilters_",
          value: function removePathFromFilters_(filters, path) {
            var head = path[0];
            var tail = path.slice(1);

            for (var _i2 = 0, _Object$keys = Object.keys(filters); _i2 < _Object$keys.length; _i2++) {
              var prop = _Object$keys[_i2];

              if (filters.hasOwnProperty(prop)) {
                if (head.toString() === prop && tail.length === 0) {
                  delete filters[prop];
                } else {
                  if ('object' === typeof filters[prop]) {
                    this.removePathFromFilters_(filters[prop], tail);

                    if (0 === Object.keys(filters[prop]).length) {
                      delete filters[prop];
                    }
                  }
                }
              }
            }
          }
          /**
           * Compute filters recursive paths enabled in the state current
           * search
           * e.g [["tag.default", "land use"]]
           *
           * @param filters Search filters from state
           */

        }, {
          key: "findSelectedPaths",
          value: function findSelectedPaths(filters) {
            var discoveredObjects = []; // For checking for cyclic object

            var path = [];
            var results = []; // store void result to prevent ; added by prettier before iife

            var _ = function find(obj) {
              var _loop = function _loop() {
                var key = _Object$keys2[_i3];

                if (typeof obj[key] !== 'object') {
                  // Found a selected path
                  path.push(key);
                  results.push(Array.from(path));
                  path.pop();
                }

                var o = obj[key]; // The next object to be searched

                if (o && typeof o === 'object') {
                  if (!discoveredObjects.find(function (discovered) {
                    return discovered === o;
                  })) {
                    // check for cyclic link
                    path.push(key);
                    discoveredObjects.push(o);
                    find(o);
                    path.pop();
                  }
                }
              };

              for (var _i3 = 0, _Object$keys2 = Object.keys(obj); _i3 < _Object$keys2.length; _i3++) {
                _loop();
              }
            }(filters);

            return results;
          }
        }]);

        return FacetsService;
      }();

      FacetsService.ɵfac = function FacetsService_Factory(t) {
        return new (t || FacetsService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_lib_common__WEBPACK_IMPORTED_MODULE_1__["LogService"]));
      };

      FacetsService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: FacetsService,
        factory: FacetsService.ɵfac,
        providedIn: 'root'
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FacetsService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _lib_common__WEBPACK_IMPORTED_MODULE_1__["LogService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/fuzzy-search/fuzzy-search.component.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/fuzzy-search/fuzzy-search.component.ts ***!
      \****************************************************************************************************************/

    /*! exports provided: FuzzySearchComponent */

    /***/
    function libsSearchSrcLibFuzzySearchFuzzySearchComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FuzzySearchComponent", function () {
        return FuzzySearchComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/ui */
      "../../libs/ui/src/index.ts");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var _state_search_facade__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../state/search.facade */
      "../../libs/search/src/lib/state/search.facade.ts");
      /* harmony import */


      var _ui_src_lib_text_input_text_input_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../../../../ui/src/lib/text-input/text-input.component */
      "../../libs/ui/src/lib/text-input/text-input.component.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      var _c0 = ["searchText"];

      var FuzzySearchComponent = /*#__PURE__*/function () {
        function FuzzySearchComponent(searchFacade) {
          _classCallCheck(this, FuzzySearchComponent);

          this.searchFacade = searchFacade;
          this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();
          this.currentTextSearch$ = this.searchFacade.searchFilters$;
        }

        _createClass(FuzzySearchComponent, [{
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            var _this94 = this;

            this.subs.add(this.searchText.valueChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["debounceTime"])(400)).subscribe(function (value) {
              _this94.searchFacade.setFilters({
                any: value
              });
            }));
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.subs.unsubscribe();
          }
        }]);

        return FuzzySearchComponent;
      }();

      FuzzySearchComponent.ɵfac = function FuzzySearchComponent_Factory(t) {
        return new (t || FuzzySearchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_state_search_facade__WEBPACK_IMPORTED_MODULE_4__["SearchFacade"]));
      };

      FuzzySearchComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: FuzzySearchComponent,
        selectors: [["search-fuzzy-search"]],
        viewQuery: function FuzzySearchComponent_Query(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
          }

          if (rf & 2) {
            var _t;

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.searchText = _t.first);
          }
        },
        decls: 4,
        vars: 6,
        consts: [[3, "hint", "value"], ["searchText", ""]],
        template: function FuzzySearchComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "ui-text-input", 0, 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "translate");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](3, "async");
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("hint", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 2, "search.field.any.placeholder"))("value", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](3, 4, ctx.currentTextSearch$));
          }
        },
        directives: [_ui_src_lib_text_input_text_input_component__WEBPACK_IMPORTED_MODULE_5__["TextInputComponent"]],
        pipes: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslatePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["AsyncPipe"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3NlYXJjaC9zcmMvbGliL2Z1enp5LXNlYXJjaC9mdXp6eS1zZWFyY2guY29tcG9uZW50LmNzcyJ9 */"],
        changeDetection: 0
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FuzzySearchComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'search-fuzzy-search',
            templateUrl: './fuzzy-search.component.html',
            styleUrls: ['./fuzzy-search.component.css'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], function () {
          return [{
            type: _state_search_facade__WEBPACK_IMPORTED_MODULE_4__["SearchFacade"]
          }];
        }, {
          searchText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['searchText']
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/records-metrics/records-metrics.component.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/records-metrics/records-metrics.component.ts ***!
      \**********************************************************************************************************************/

    /*! exports provided: RecordsMetricsComponent */

    /***/
    function libsSearchSrcLibRecordsMetricsRecordsMetricsComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordsMetricsComponent", function () {
        return RecordsMetricsComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _ui_src_lib_record_metric_record_metric_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../../../../ui/src/lib/record-metric/record-metric.component */
      "../../libs/ui/src/lib/record-metric/record-metric.component.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      function RecordsMetricsComponent_div_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "ui-record-metric", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function RecordsMetricsComponent_div_1_Template_ui_record_metric_click_1_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);

            var category_r1 = ctx.$implicit;

            var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r2.metricSelect.emit(category_r1);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "translate");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var category_r1 = ctx.$implicit;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("label", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 3, category_r1.value))("count", category_r1.recordCount)("icon", "");
        }
      }

      var RecordsMetricsComponent = /*#__PURE__*/function () {
        function RecordsMetricsComponent(searchService) {
          _classCallCheck(this, RecordsMetricsComponent);

          this.searchService = searchService;
          this.count = 10;
          this.queryString = '+isTemplate:n';
          this.metricSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(RecordsMetricsComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.results$ = this.searchService.search('bucket', JSON.stringify({
              size: 0,
              track_total_hits: true,
              query: {
                query_string: {
                  query: this.queryString
                }
              },
              aggs: {
                results: {
                  terms: {
                    field: this.field,
                    size: this.count
                  }
                }
              }
            })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
              return response.aggregations.results.buckets.map(function (category) {
                return {
                  value: category.key,
                  recordCount: category.doc_count
                };
              });
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
          }
        }]);

        return RecordsMetricsComponent;
      }();

      RecordsMetricsComponent.ɵfac = function RecordsMetricsComponent_Factory(t) {
        return new (t || RecordsMetricsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["SearchApiService"]));
      };

      RecordsMetricsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: RecordsMetricsComponent,
        selectors: [["search-records-metrics"]],
        inputs: {
          field: "field",
          count: "count",
          queryString: "queryString"
        },
        outputs: {
          metricSelect: "metricSelect"
        },
        decls: 3,
        vars: 3,
        consts: [[1, "grid", "md:grid-cols-3", "lg:grid-cols-4", "gap-4", "p-4"], [4, "ngFor", "ngForOf"], [3, "label", "count", "icon", "click"]],
        template: function RecordsMetricsComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, RecordsMetricsComponent_div_1_Template, 3, 5, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 1, ctx.results$));
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["NgForOf"], _ui_src_lib_record_metric_record_metric_component__WEBPACK_IMPORTED_MODULE_4__["RecordMetricComponent"]],
        pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["AsyncPipe"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslatePipe"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3NlYXJjaC9zcmMvbGliL3JlY29yZHMtbWV0cmljcy9yZWNvcmRzLW1ldHJpY3MuY29tcG9uZW50LmNzcyJ9 */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordsMetricsComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'search-records-metrics',
            templateUrl: './records-metrics.component.html',
            styleUrls: ['./records-metrics.component.css']
          }]
        }], function () {
          return [{
            type: _lib_gn_api__WEBPACK_IMPORTED_MODULE_1__["SearchApiService"]
          }];
        }, {
          field: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          count: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          queryString: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          metricSelect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/results-hits-number/results-hits.container.component.ts":
    /*!*********************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/results-hits-number/results-hits.container.component.ts ***!
      \*********************************************************************************************************************************/

    /*! exports provided: ResultsHitsContainerComponent */

    /***/
    function libsSearchSrcLibResultsHitsNumberResultsHitsContainerComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResultsHitsContainerComponent", function () {
        return ResultsHitsContainerComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _state_search_facade__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../state/search.facade */
      "../../libs/search/src/lib/state/search.facade.ts");
      /* harmony import */


      var _ui_src_lib_results_hits_number_results_hits_number_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../../../../ui/src/lib/results-hits-number/results-hits-number.component */
      "../../libs/ui/src/lib/results-hits-number/results-hits-number.component.ts");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      var ResultsHitsContainerComponent = /*#__PURE__*/function () {
        function ResultsHitsContainerComponent(facade) {
          _classCallCheck(this, ResultsHitsContainerComponent);

          this.facade = facade;
        }

        _createClass(ResultsHitsContainerComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return ResultsHitsContainerComponent;
      }();

      ResultsHitsContainerComponent.ɵfac = function ResultsHitsContainerComponent_Factory(t) {
        return new (t || ResultsHitsContainerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_state_search_facade__WEBPACK_IMPORTED_MODULE_1__["SearchFacade"]));
      };

      ResultsHitsContainerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ResultsHitsContainerComponent,
        selectors: [["search-results-hits"]],
        decls: 3,
        vars: 6,
        consts: [[3, "loading", "hits"]],
        template: function ResultsHitsContainerComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "ui-results-hits-number", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "async");
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("loading", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 2, ctx.facade.isLoading$))("hits", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 4, ctx.facade.resultsHits$));
          }
        },
        directives: [_ui_src_lib_results_hits_number_results_hits_number_component__WEBPACK_IMPORTED_MODULE_2__["ResultsHitsNumberComponent"]],
        pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["AsyncPipe"]],
        encapsulation: 2
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ResultsHitsContainerComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'search-results-hits',
            templateUrl: './results-hits.container.component.html'
          }]
        }], function () {
          return [{
            type: _state_search_facade__WEBPACK_IMPORTED_MODULE_1__["SearchFacade"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/results-layout/results-layout.component.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/results-layout/results-layout.component.ts ***!
      \********************************************************************************************************************/

    /*! exports provided: ResultsLayoutComponent */

    /***/
    function libsSearchSrcLibResultsLayoutResultsLayoutComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResultsLayoutComponent", function () {
        return ResultsLayoutComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var _state_search_facade__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../state/search.facade */
      "../../libs/search/src/lib/state/search.facade.ts");
      /* harmony import */


      var _ui_src_lib_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../../../ui/src/lib/dropdown-selector/dropdown-selector.component */
      "../../libs/ui/src/lib/dropdown-selector/dropdown-selector.component.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      var ResultsLayoutComponent = /*#__PURE__*/function () {
        function ResultsLayoutComponent(searchFacade) {
          _classCallCheck(this, ResultsLayoutComponent);

          this.searchFacade = searchFacade;
          this.choices = Object.values(_lib_common__WEBPACK_IMPORTED_MODULE_1__["ResultsListLayout"]).map(function (v) {
            return {
              label: v,
              value: v
            };
          });
        }

        _createClass(ResultsLayoutComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "change",
          value: function change(layout) {
            this.searchFacade.setResultsLayout(layout);
          }
        }]);

        return ResultsLayoutComponent;
      }();

      ResultsLayoutComponent.ɵfac = function ResultsLayoutComponent_Factory(t) {
        return new (t || ResultsLayoutComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_state_search_facade__WEBPACK_IMPORTED_MODULE_2__["SearchFacade"]));
      };

      ResultsLayoutComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ResultsLayoutComponent,
        selectors: [["search-results-layout"]],
        decls: 4,
        vars: 10,
        consts: [[3, "title", "ariaName", "choices", "selected", "selectValue"]],
        template: function ResultsLayoutComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ui-dropdown-selector", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("selectValue", function ResultsLayoutComponent_Template_ui_dropdown_selector_selectValue_0_listener($event) {
              return ctx.change($event);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "translate");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "translate");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](3, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 4, "results.layout.selectOne"))("ariaName", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 6, "results.layout.selectOne"))("choices", ctx.choices)("selected", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](3, 8, ctx.searchFacade.layout$));
          }
        },
        directives: [_ui_src_lib_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_3__["DropdownSelectorComponent"]],
        pipes: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslatePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["AsyncPipe"]],
        encapsulation: 2
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ResultsLayoutComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'search-results-layout',
            templateUrl: './results-layout.component.html'
          }]
        }], function () {
          return [{
            type: _state_search_facade__WEBPACK_IMPORTED_MODULE_2__["SearchFacade"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/results-list/results-list.container.component.ts":
    /*!**************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/results-list/results-list.container.component.ts ***!
      \**************************************************************************************************************************/

    /*! exports provided: ResultsListContainerComponent */

    /***/
    function libsSearchSrcLibResultsListResultsListContainerComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResultsListContainerComponent", function () {
        return ResultsListContainerComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var _state_search_facade__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../state/search.facade */
      "../../libs/search/src/lib/state/search.facade.ts");
      /* harmony import */


      var ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ngx-infinite-scroll */
      "../../node_modules/ngx-infinite-scroll/__ivy_ngcc__/modules/ngx-infinite-scroll.js");
      /* harmony import */


      var _ui_src_lib_results_list_results_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../../../../ui/src/lib/results-list/results-list.component */
      "../../libs/ui/src/lib/results-list/results-list.component.ts");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      var ResultsListContainerComponent = /*#__PURE__*/function () {
        function ResultsListContainerComponent(facade) {
          _classCallCheck(this, ResultsListContainerComponent);

          this.facade = facade;
          this.layout = _lib_common__WEBPACK_IMPORTED_MODULE_1__["ResultsListLayout"].CARD;
          this.scrollableOptions = {};
          this.mdSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(ResultsListContainerComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this95 = this;

            this.scrollableConfig = _objectSpread(_objectSpread({}, _lib_common__WEBPACK_IMPORTED_MODULE_1__["InfiniteScrollOptionsDefault"]), this.scrollableOptions);
            this.facade.setResultsLayout(this.layout);
            this.scrollDisable$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(this.scrollableConfig.disabled).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (disabled) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["iif"])(function () {
                return !!disabled;
              }, Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true), _this95.facade.isEndOfResults$);
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["distinctUntilChanged"])());
          }
        }, {
          key: "onMetadataSelection",
          value: function onMetadataSelection(metadata) {
            this.mdSelect.emit(metadata);
          }
        }, {
          key: "onScrollDown",
          value: function onScrollDown() {
            this.facade.scroll();
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {}
        }]);

        return ResultsListContainerComponent;
      }();

      ResultsListContainerComponent.ɵfac = function ResultsListContainerComponent_Factory(t) {
        return new (t || ResultsListContainerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_state_search_facade__WEBPACK_IMPORTED_MODULE_4__["SearchFacade"]));
      };

      ResultsListContainerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ResultsListContainerComponent,
        selectors: [["search-results-list-container"]],
        inputs: {
          layout: "layout",
          scrollableOptions: "scrollableOptions"
        },
        outputs: {
          mdSelect: "mdSelect"
        },
        decls: 6,
        vars: 15,
        consts: [["infinite-scroll", "", 1, "search-results", 3, "infiniteScrollDistance", "infiniteScrollUpDistance", "infiniteScrollThrottle", "infiniteScrollDisabled", "scrolled"], [3, "loading", "records", "layout", "mdSelect"]],
        template: function ResultsListContainerComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("scrolled", function ResultsListContainerComponent_Template_div_scrolled_0_listener() {
              return ctx.onScrollDown();
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "ui-results-list", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mdSelect", function ResultsListContainerComponent_Template_ui_results_list_mdSelect_2_listener($event) {
              return ctx.onMetadataSelection($event);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](3, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](4, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](5, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("infiniteScrollDistance", ctx.scrollableConfig.distance)("infiniteScrollUpDistance", ctx.scrollableConfig.upDistance)("infiniteScrollThrottle", ctx.scrollableConfig.throttle)("infiniteScrollDisabled", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 7, ctx.scrollDisable$));

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("loading", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](3, 9, ctx.facade.isLoading$))("records", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](4, 11, ctx.facade.results$))("layout", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](5, 13, ctx.facade.layout$));
          }
        },
        directives: [ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_5__["InfiniteScrollDirective"], _ui_src_lib_results_list_results_list_component__WEBPACK_IMPORTED_MODULE_6__["ResultsListComponent"]],
        pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["AsyncPipe"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3NlYXJjaC9zcmMvbGliL3Jlc3VsdHMtbGlzdC9yZXN1bHRzLWxpc3QuY29udGFpbmVyLmNvbXBvbmVudC5jc3MifQ== */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ResultsListContainerComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'search-results-list-container',
            templateUrl: './results-list.container.component.html',
            styleUrls: ['./results-list.container.component.css']
          }]
        }], function () {
          return [{
            type: _state_search_facade__WEBPACK_IMPORTED_MODULE_4__["SearchFacade"]
          }];
        }, {
          layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          scrollableOptions: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          mdSelect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/search.module.ts":
    /*!******************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/search.module.ts ***!
      \******************************************************************************************/

    /*! exports provided: LibSearchModule */

    /***/
    function libsSearchSrcLibSearchModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LibSearchModule", function () {
        return LibSearchModule;
      });
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var _lib_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @lib/ui */
      "../../libs/ui/src/index.ts");
      /* harmony import */


      var _ngrx_effects__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ngrx/effects */
      "../../node_modules/@ngrx/effects/__ivy_ngcc__/fesm2015/effects.js");
      /* harmony import */


      var _ngrx_store__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ngrx/store */
      "../../node_modules/@ngrx/store/__ivy_ngcc__/fesm2015/store.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ngx-infinite-scroll */
      "../../node_modules/ngx-infinite-scroll/__ivy_ngcc__/modules/ngx-infinite-scroll.js");
      /* harmony import */


      var _facets_facets_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./facets/facets.module */
      "../../libs/search/src/lib/facets/facets.module.ts");
      /* harmony import */


      var _fuzzy_search_fuzzy_search_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./fuzzy-search/fuzzy-search.component */
      "../../libs/search/src/lib/fuzzy-search/fuzzy-search.component.ts");
      /* harmony import */


      var _records_metrics_records_metrics_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./records-metrics/records-metrics.component */
      "../../libs/search/src/lib/records-metrics/records-metrics.component.ts");
      /* harmony import */


      var _results_layout_results_layout_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./results-layout/results-layout.component */
      "../../libs/search/src/lib/results-layout/results-layout.component.ts");
      /* harmony import */


      var _results_list_results_list_container_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./results-list/results-list.container.component */
      "../../libs/search/src/lib/results-list/results-list.container.component.ts");
      /* harmony import */


      var _sort_by_sort_by_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./sort-by/sort-by.component */
      "../../libs/search/src/lib/sort-by/sort-by.component.ts");
      /* harmony import */


      var _state_effects__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./state/effects */
      "../../libs/search/src/lib/state/effects.ts");
      /* harmony import */


      var _state_reducer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! ./state/reducer */
      "../../libs/search/src/lib/state/reducer.ts");
      /* harmony import */


      var _results_hits_number_results_hits_container_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ./results-hits-number/results-hits.container.component */
      "../../libs/search/src/lib/results-hits-number/results-hits.container.component.ts");
      /* harmony import */


      var _state_container_search_state_container_directive__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! ./state/container/search-state.container.directive */
      "../../libs/search/src/lib/state/container/search-state.container.directive.ts");

      var LibSearchModule = function LibSearchModule() {
        _classCallCheck(this, LibSearchModule);
      };

      LibSearchModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
        type: LibSearchModule
      });
      LibSearchModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
        factory: function LibSearchModule_Factory(t) {
          return new (t || LibSearchModule)();
        },
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateModule"].forChild(), _ngrx_store__WEBPACK_IMPORTED_MODULE_6__["StoreModule"].forFeature(_state_reducer__WEBPACK_IMPORTED_MODULE_16__["SEARCH_FEATURE_KEY"], _state_reducer__WEBPACK_IMPORTED_MODULE_16__["reducer"], {
          initialState: _state_reducer__WEBPACK_IMPORTED_MODULE_16__["initialState"]
        }), _ngrx_effects__WEBPACK_IMPORTED_MODULE_5__["EffectsModule"].forFeature([_state_effects__WEBPACK_IMPORTED_MODULE_15__["SearchEffects"]]), _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientXsrfModule"], _lib_ui__WEBPACK_IMPORTED_MODULE_4__["UiModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_3__["GnApiModule"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_9__["FacetsModule"], ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_8__["InfiniteScrollModule"]], _facets_facets_module__WEBPACK_IMPORTED_MODULE_9__["FacetsModule"]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](LibSearchModule, {
          declarations: [_sort_by_sort_by_component__WEBPACK_IMPORTED_MODULE_14__["SortByComponent"], _results_layout_results_layout_component__WEBPACK_IMPORTED_MODULE_12__["ResultsLayoutComponent"], _fuzzy_search_fuzzy_search_component__WEBPACK_IMPORTED_MODULE_10__["FuzzySearchComponent"], _records_metrics_records_metrics_component__WEBPACK_IMPORTED_MODULE_11__["RecordsMetricsComponent"], _results_list_results_list_container_component__WEBPACK_IMPORTED_MODULE_13__["ResultsListContainerComponent"], _results_hits_number_results_hits_container_component__WEBPACK_IMPORTED_MODULE_17__["ResultsHitsContainerComponent"], _state_container_search_state_container_directive__WEBPACK_IMPORTED_MODULE_18__["SearchStateContainerDirective"]],
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateModule"], _ngrx_store__WEBPACK_IMPORTED_MODULE_6__["StoreFeatureModule"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_5__["EffectsFeatureModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientXsrfModule"], _lib_ui__WEBPACK_IMPORTED_MODULE_4__["UiModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_3__["GnApiModule"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_9__["FacetsModule"], ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_8__["InfiniteScrollModule"]],
          exports: [_sort_by_sort_by_component__WEBPACK_IMPORTED_MODULE_14__["SortByComponent"], _results_layout_results_layout_component__WEBPACK_IMPORTED_MODULE_12__["ResultsLayoutComponent"], _fuzzy_search_fuzzy_search_component__WEBPACK_IMPORTED_MODULE_10__["FuzzySearchComponent"], _records_metrics_records_metrics_component__WEBPACK_IMPORTED_MODULE_11__["RecordsMetricsComponent"], _results_list_results_list_container_component__WEBPACK_IMPORTED_MODULE_13__["ResultsListContainerComponent"], _results_hits_number_results_hits_container_component__WEBPACK_IMPORTED_MODULE_17__["ResultsHitsContainerComponent"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_9__["FacetsModule"], _state_container_search_state_container_directive__WEBPACK_IMPORTED_MODULE_18__["SearchStateContainerDirective"]]
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LibSearchModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
          args: [{
            declarations: [_sort_by_sort_by_component__WEBPACK_IMPORTED_MODULE_14__["SortByComponent"], _results_layout_results_layout_component__WEBPACK_IMPORTED_MODULE_12__["ResultsLayoutComponent"], _fuzzy_search_fuzzy_search_component__WEBPACK_IMPORTED_MODULE_10__["FuzzySearchComponent"], _records_metrics_records_metrics_component__WEBPACK_IMPORTED_MODULE_11__["RecordsMetricsComponent"], _results_list_results_list_container_component__WEBPACK_IMPORTED_MODULE_13__["ResultsListContainerComponent"], _results_hits_number_results_hits_container_component__WEBPACK_IMPORTED_MODULE_17__["ResultsHitsContainerComponent"], _state_container_search_state_container_directive__WEBPACK_IMPORTED_MODULE_18__["SearchStateContainerDirective"]],
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateModule"].forChild(), _ngrx_store__WEBPACK_IMPORTED_MODULE_6__["StoreModule"].forFeature(_state_reducer__WEBPACK_IMPORTED_MODULE_16__["SEARCH_FEATURE_KEY"], _state_reducer__WEBPACK_IMPORTED_MODULE_16__["reducer"], {
              initialState: _state_reducer__WEBPACK_IMPORTED_MODULE_16__["initialState"]
            }), _ngrx_effects__WEBPACK_IMPORTED_MODULE_5__["EffectsModule"].forFeature([_state_effects__WEBPACK_IMPORTED_MODULE_15__["SearchEffects"]]), _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientXsrfModule"], _lib_ui__WEBPACK_IMPORTED_MODULE_4__["UiModule"], _lib_gn_api__WEBPACK_IMPORTED_MODULE_3__["GnApiModule"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_9__["FacetsModule"], ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_8__["InfiniteScrollModule"]],
            exports: [_sort_by_sort_by_component__WEBPACK_IMPORTED_MODULE_14__["SortByComponent"], _results_layout_results_layout_component__WEBPACK_IMPORTED_MODULE_12__["ResultsLayoutComponent"], _fuzzy_search_fuzzy_search_component__WEBPACK_IMPORTED_MODULE_10__["FuzzySearchComponent"], _records_metrics_records_metrics_component__WEBPACK_IMPORTED_MODULE_11__["RecordsMetricsComponent"], _results_list_results_list_container_component__WEBPACK_IMPORTED_MODULE_13__["ResultsListContainerComponent"], _results_hits_number_results_hits_container_component__WEBPACK_IMPORTED_MODULE_17__["ResultsHitsContainerComponent"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_9__["FacetsModule"], _state_container_search_state_container_directive__WEBPACK_IMPORTED_MODULE_18__["SearchStateContainerDirective"]]
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/sort-by/sort-by.component.ts":
    /*!******************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/sort-by/sort-by.component.ts ***!
      \******************************************************************************************************/

    /*! exports provided: SortByComponent */

    /***/
    function libsSearchSrcLibSortBySortByComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SortByComponent", function () {
        return SortByComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @ngrx/store */
      "../../node_modules/@ngrx/store/__ivy_ngcc__/fesm2015/store.js");
      /* harmony import */


      var _state_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../state/actions */
      "../../libs/search/src/lib/state/actions.ts");
      /* harmony import */


      var _state_selectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../state/selectors */
      "../../libs/search/src/lib/state/selectors.ts");
      /* harmony import */


      var _biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @biesbjerg/ngx-translate-extract-marker */
      "../../node_modules/@biesbjerg/ngx-translate-extract-marker/__ivy_ngcc__/fesm2015/biesbjerg-ngx-translate-extract-marker.js");
      /* harmony import */


      var _ui_src_lib_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../../../../ui/src/lib/dropdown-selector/dropdown-selector.component */
      "../../libs/ui/src/lib/dropdown-selector/dropdown-selector.component.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_4__["marker"])('results.sortBy.relevancy');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_4__["marker"])('results.sortBy.dateStamp');
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_4__["marker"])('results.sortBy.popularity');

      var SortByComponent = /*#__PURE__*/function () {
        function SortByComponent(store) {
          _classCallCheck(this, SortByComponent);

          this.store = store;
          this.choices = [{
            label: 'results.sortBy.relevancy',
            value: '_score'
          }, {
            label: 'results.sortBy.dateStamp',
            value: '-dateStamp'
          }, {
            label: 'results.sortBy.popularity',
            value: 'popularity'
          }];
          this.currentSortBy$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_state_selectors__WEBPACK_IMPORTED_MODULE_3__["getSearchSortBy"]));
        }

        _createClass(SortByComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "changeSortBy",
          value: function changeSortBy(criteria) {
            if (typeof criteria === 'string') {
              this.store.dispatch(new _state_actions__WEBPACK_IMPORTED_MODULE_2__["SetSortBy"](criteria));
            } else {
              throw new Error("Unexpected value received: ".concat(criteria));
            }
          }
        }]);

        return SortByComponent;
      }();

      SortByComponent.ɵfac = function SortByComponent_Factory(t) {
        return new (t || SortByComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"]));
      };

      SortByComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: SortByComponent,
        selectors: [["search-sort-by"]],
        decls: 3,
        vars: 7,
        consts: [["ariaName", "search-sort-by", 3, "title", "choices", "selected", "selectValue"]],
        template: function SortByComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ui-dropdown-selector", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("selectValue", function SortByComponent_Template_ui_dropdown_selector_selectValue_0_listener($event) {
              return ctx.changeSortBy($event);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "translate");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "async");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 3, "search.field.sortBy"))("choices", ctx.choices)("selected", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 5, ctx.currentSortBy$));
          }
        },
        directives: [_ui_src_lib_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_5__["DropdownSelectorComponent"]],
        pipes: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslatePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["AsyncPipe"]],
        encapsulation: 2
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SortByComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'search-sort-by',
            templateUrl: './sort-by.component.html'
          }]
        }], function () {
          return [{
            type: _ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/state/actions.ts":
    /*!******************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/state/actions.ts ***!
      \******************************************************************************************/

    /*! exports provided: ADD_SEARCH, SET_FILTERS, SET_CONFIG_FILTERS, UPDATE_FILTERS, SET_SEARCH, SET_SORT_BY, SET_PAGINATION, PAGINATE, SCROLL, SET_RESULTS_LAYOUT, ADD_RESULTS, CLEAR_PAGINATION, CLEAR_RESULTS, REQUEST_MORE_RESULTS, SET_RESULTS_AGGREGATIONS, SET_RESULTS_HITS, SET_CONFIG_AGGREGATIONS, REQUEST_MORE_ON_AGGREGATION, SET_INCLUDE_ON_AGGREGATION, UPDATE_REQUEST_AGGREGATION_TERM, PATCH_RESULTS_AGGREGATIONS, DEFAULT_SEARCH_KEY, AddSearch, SetConfigFilters, SetFilters, UpdateFilters, SetSearch, SetSortBy, SetPagination, Paginate, ClearPagination, Scroll, SetResultsLayout, AddResults, ClearResults, RequestMoreResults, SetResultsAggregations, SetResultsHits, SetConfigAggregations, RequestMoreOnAggregation, SetIncludeOnAggregation, UpdateRequestAggregationTerm, PatchResultsAggregations */

    /***/
    function libsSearchSrcLibStateActionsTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ADD_SEARCH", function () {
        return ADD_SEARCH;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_FILTERS", function () {
        return SET_FILTERS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_CONFIG_FILTERS", function () {
        return SET_CONFIG_FILTERS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UPDATE_FILTERS", function () {
        return UPDATE_FILTERS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_SEARCH", function () {
        return SET_SEARCH;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_SORT_BY", function () {
        return SET_SORT_BY;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_PAGINATION", function () {
        return SET_PAGINATION;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "PAGINATE", function () {
        return PAGINATE;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SCROLL", function () {
        return SCROLL;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_RESULTS_LAYOUT", function () {
        return SET_RESULTS_LAYOUT;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ADD_RESULTS", function () {
        return ADD_RESULTS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CLEAR_PAGINATION", function () {
        return CLEAR_PAGINATION;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CLEAR_RESULTS", function () {
        return CLEAR_RESULTS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "REQUEST_MORE_RESULTS", function () {
        return REQUEST_MORE_RESULTS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_RESULTS_AGGREGATIONS", function () {
        return SET_RESULTS_AGGREGATIONS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_RESULTS_HITS", function () {
        return SET_RESULTS_HITS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_CONFIG_AGGREGATIONS", function () {
        return SET_CONFIG_AGGREGATIONS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "REQUEST_MORE_ON_AGGREGATION", function () {
        return REQUEST_MORE_ON_AGGREGATION;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SET_INCLUDE_ON_AGGREGATION", function () {
        return SET_INCLUDE_ON_AGGREGATION;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UPDATE_REQUEST_AGGREGATION_TERM", function () {
        return UPDATE_REQUEST_AGGREGATION_TERM;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "PATCH_RESULTS_AGGREGATIONS", function () {
        return PATCH_RESULTS_AGGREGATIONS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DEFAULT_SEARCH_KEY", function () {
        return DEFAULT_SEARCH_KEY;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AddSearch", function () {
        return AddSearch;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetConfigFilters", function () {
        return SetConfigFilters;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetFilters", function () {
        return SetFilters;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UpdateFilters", function () {
        return UpdateFilters;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetSearch", function () {
        return SetSearch;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetSortBy", function () {
        return SetSortBy;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetPagination", function () {
        return SetPagination;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Paginate", function () {
        return Paginate;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ClearPagination", function () {
        return ClearPagination;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Scroll", function () {
        return Scroll;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetResultsLayout", function () {
        return SetResultsLayout;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AddResults", function () {
        return AddResults;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ClearResults", function () {
        return ClearResults;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RequestMoreResults", function () {
        return RequestMoreResults;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetResultsAggregations", function () {
        return SetResultsAggregations;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetResultsHits", function () {
        return SetResultsHits;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetConfigAggregations", function () {
        return SetConfigAggregations;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RequestMoreOnAggregation", function () {
        return RequestMoreOnAggregation;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SetIncludeOnAggregation", function () {
        return SetIncludeOnAggregation;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UpdateRequestAggregationTerm", function () {
        return UpdateRequestAggregationTerm;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "PatchResultsAggregations", function () {
        return PatchResultsAggregations;
      });

      var ADD_SEARCH = '[Search] Add search instance';
      var SET_FILTERS = '[Search] Set Filters';
      var SET_CONFIG_FILTERS = '[Search] Set config filters';
      var UPDATE_FILTERS = '[Search] Update Filters';
      var SET_SEARCH = '[Search] Set overall search configuration';
      var SET_SORT_BY = '[Search] Sort By';
      var SET_PAGINATION = '[Search] Set pagination';
      var PAGINATE = '[Search] Paginate';
      var SCROLL = '[Search] Scroll';
      var SET_RESULTS_LAYOUT = '[Search] Set results layout';
      var ADD_RESULTS = '[Search] Add Results';
      var CLEAR_PAGINATION = '[Search] Clear Paging';
      var CLEAR_RESULTS = '[Search] Clear Results';
      var REQUEST_MORE_RESULTS = '[Search] Request More Results';
      var SET_RESULTS_AGGREGATIONS = '[Search] Set Results Aggregations';
      var SET_RESULTS_HITS = '[Search] Set Results hits';
      var SET_CONFIG_AGGREGATIONS = '[Search] Set Config Aggregations';
      var REQUEST_MORE_ON_AGGREGATION = '[Search] Request More On Aggregation';
      var SET_INCLUDE_ON_AGGREGATION = '[Search] Set term include';
      var UPDATE_REQUEST_AGGREGATION_TERM = '[Search] Update request aggregation term';
      var PATCH_RESULTS_AGGREGATIONS = '[Search] Patch Results Aggregations';
      var DEFAULT_SEARCH_KEY = 'default';

      var AbstractAction = function AbstractAction(id) {
        _classCallCheck(this, AbstractAction);

        this.id = id || DEFAULT_SEARCH_KEY;
      };

      var AddSearch = function AddSearch(id) {
        _classCallCheck(this, AddSearch);

        this.id = id;
        this.type = ADD_SEARCH;
      };

      var SetConfigFilters = /*#__PURE__*/function (_AbstractAction) {
        _inherits(SetConfigFilters, _AbstractAction);

        var _super = _createSuper(SetConfigFilters);

        function SetConfigFilters(payload, id) {
          var _this96;

          _classCallCheck(this, SetConfigFilters);

          _this96 = _super.call(this, id);
          _this96.payload = payload;
          _this96.type = SET_CONFIG_FILTERS;
          return _this96;
        }

        return SetConfigFilters;
      }(AbstractAction);

      var SetFilters = /*#__PURE__*/function (_AbstractAction2) {
        _inherits(SetFilters, _AbstractAction2);

        var _super2 = _createSuper(SetFilters);

        function SetFilters(payload, id) {
          var _this97;

          _classCallCheck(this, SetFilters);

          _this97 = _super2.call(this, id);
          _this97.payload = payload;
          _this97.type = SET_FILTERS;
          return _this97;
        }

        return SetFilters;
      }(AbstractAction);

      var UpdateFilters = /*#__PURE__*/function (_AbstractAction3) {
        _inherits(UpdateFilters, _AbstractAction3);

        var _super3 = _createSuper(UpdateFilters);

        function UpdateFilters(payload, id) {
          var _this98;

          _classCallCheck(this, UpdateFilters);

          _this98 = _super3.call(this, id);
          _this98.payload = payload;
          _this98.type = UPDATE_FILTERS;
          return _this98;
        }

        return UpdateFilters;
      }(AbstractAction);

      var SetSearch = /*#__PURE__*/function (_AbstractAction4) {
        _inherits(SetSearch, _AbstractAction4);

        var _super4 = _createSuper(SetSearch);

        function SetSearch(payload, id) {
          var _this99;

          _classCallCheck(this, SetSearch);

          _this99 = _super4.call(this, id);
          _this99.payload = payload;
          _this99.type = SET_SEARCH;
          return _this99;
        }

        return SetSearch;
      }(AbstractAction);

      var SetSortBy = /*#__PURE__*/function (_AbstractAction5) {
        _inherits(SetSortBy, _AbstractAction5);

        var _super5 = _createSuper(SetSortBy);

        function SetSortBy(sortBy, id) {
          var _this100;

          _classCallCheck(this, SetSortBy);

          _this100 = _super5.call(this, id);
          _this100.sortBy = sortBy;
          _this100.type = SET_SORT_BY;
          return _this100;
        }

        return SetSortBy;
      }(AbstractAction);

      var SetPagination = /*#__PURE__*/function (_AbstractAction6) {
        _inherits(SetPagination, _AbstractAction6);

        var _super6 = _createSuper(SetPagination);

        function SetPagination(from, size, id) {
          var _this101;

          _classCallCheck(this, SetPagination);

          _this101 = _super6.call(this, id);
          _this101.from = from;
          _this101.size = size;
          _this101.type = SET_PAGINATION;
          return _this101;
        }

        return SetPagination;
      }(AbstractAction);

      var Paginate = /*#__PURE__*/function (_AbstractAction7) {
        _inherits(Paginate, _AbstractAction7);

        var _super7 = _createSuper(Paginate);

        function Paginate(delta, id) {
          var _this102;

          _classCallCheck(this, Paginate);

          _this102 = _super7.call(this, id);
          _this102.delta = delta;
          _this102.type = PAGINATE;
          return _this102;
        }

        return Paginate;
      }(AbstractAction);

      var ClearPagination = /*#__PURE__*/function (_AbstractAction8) {
        _inherits(ClearPagination, _AbstractAction8);

        var _super8 = _createSuper(ClearPagination);

        function ClearPagination(id) {
          var _this103;

          _classCallCheck(this, ClearPagination);

          _this103 = _super8.call(this, id);
          _this103.type = CLEAR_PAGINATION;
          return _this103;
        }

        return ClearPagination;
      }(AbstractAction);

      var Scroll = /*#__PURE__*/function (_AbstractAction9) {
        _inherits(Scroll, _AbstractAction9);

        var _super9 = _createSuper(Scroll);

        function Scroll(id) {
          var _this104;

          _classCallCheck(this, Scroll);

          _this104 = _super9.call(this, id);
          _this104.type = SCROLL;
          return _this104;
        }

        return Scroll;
      }(AbstractAction);

      var SetResultsLayout = /*#__PURE__*/function (_AbstractAction10) {
        _inherits(SetResultsLayout, _AbstractAction10);

        var _super10 = _createSuper(SetResultsLayout);

        function SetResultsLayout(resultsLayout, id) {
          var _this105;

          _classCallCheck(this, SetResultsLayout);

          _this105 = _super10.call(this, id);
          _this105.resultsLayout = resultsLayout;
          _this105.type = SET_RESULTS_LAYOUT;
          return _this105;
        }

        return SetResultsLayout;
      }(AbstractAction);

      var AddResults = /*#__PURE__*/function (_AbstractAction11) {
        _inherits(AddResults, _AbstractAction11);

        var _super11 = _createSuper(AddResults);

        function AddResults(payload, id) {
          var _this106;

          _classCallCheck(this, AddResults);

          _this106 = _super11.call(this, id);
          _this106.payload = payload;
          _this106.type = ADD_RESULTS;
          return _this106;
        }

        return AddResults;
      }(AbstractAction);

      var ClearResults = /*#__PURE__*/function (_AbstractAction12) {
        _inherits(ClearResults, _AbstractAction12);

        var _super12 = _createSuper(ClearResults);

        function ClearResults(id) {
          var _this107;

          _classCallCheck(this, ClearResults);

          _this107 = _super12.call(this, id);
          _this107.type = CLEAR_RESULTS;
          return _this107;
        }

        return ClearResults;
      }(AbstractAction);

      var RequestMoreResults = /*#__PURE__*/function (_AbstractAction13) {
        _inherits(RequestMoreResults, _AbstractAction13);

        var _super13 = _createSuper(RequestMoreResults);

        function RequestMoreResults(id) {
          var _this108;

          _classCallCheck(this, RequestMoreResults);

          _this108 = _super13.call(this, id);
          _this108.type = REQUEST_MORE_RESULTS;
          return _this108;
        }

        return RequestMoreResults;
      }(AbstractAction);

      var SetResultsAggregations = /*#__PURE__*/function (_AbstractAction14) {
        _inherits(SetResultsAggregations, _AbstractAction14);

        var _super14 = _createSuper(SetResultsAggregations);

        function SetResultsAggregations(payload, id) {
          var _this109;

          _classCallCheck(this, SetResultsAggregations);

          _this109 = _super14.call(this, id);
          _this109.payload = payload;
          _this109.type = SET_RESULTS_AGGREGATIONS;
          return _this109;
        }

        return SetResultsAggregations;
      }(AbstractAction);

      var SetResultsHits = /*#__PURE__*/function (_AbstractAction15) {
        _inherits(SetResultsHits, _AbstractAction15);

        var _super15 = _createSuper(SetResultsHits);

        function SetResultsHits(payload, id) {
          var _this110;

          _classCallCheck(this, SetResultsHits);

          _this110 = _super15.call(this, id);
          _this110.payload = payload;
          _this110.type = SET_RESULTS_HITS;
          return _this110;
        }

        return SetResultsHits;
      }(AbstractAction);

      var SetConfigAggregations = /*#__PURE__*/function (_AbstractAction16) {
        _inherits(SetConfigAggregations, _AbstractAction16);

        var _super16 = _createSuper(SetConfigAggregations);

        function SetConfigAggregations(payload, id) {
          var _this111;

          _classCallCheck(this, SetConfigAggregations);

          _this111 = _super16.call(this, id);
          _this111.payload = payload;
          _this111.type = SET_CONFIG_AGGREGATIONS;
          return _this111;
        }

        return SetConfigAggregations;
      }(AbstractAction);

      var RequestMoreOnAggregation = /*#__PURE__*/function (_AbstractAction17) {
        _inherits(RequestMoreOnAggregation, _AbstractAction17);

        var _super17 = _createSuper(RequestMoreOnAggregation);

        function RequestMoreOnAggregation(key, increment, id) {
          var _this112;

          _classCallCheck(this, RequestMoreOnAggregation);

          _this112 = _super17.call(this, id);
          _this112.key = key;
          _this112.increment = increment;
          _this112.type = REQUEST_MORE_ON_AGGREGATION;
          return _this112;
        }

        return RequestMoreOnAggregation;
      }(AbstractAction);

      var SetIncludeOnAggregation = /*#__PURE__*/function (_AbstractAction18) {
        _inherits(SetIncludeOnAggregation, _AbstractAction18);

        var _super18 = _createSuper(SetIncludeOnAggregation);

        function SetIncludeOnAggregation(key, include, id) {
          var _this113;

          _classCallCheck(this, SetIncludeOnAggregation);

          _this113 = _super18.call(this, id);
          _this113.key = key;
          _this113.include = include;
          _this113.type = SET_INCLUDE_ON_AGGREGATION;
          return _this113;
        }

        return SetIncludeOnAggregation;
      }(AbstractAction);

      var UpdateRequestAggregationTerm = /*#__PURE__*/function (_AbstractAction19) {
        _inherits(UpdateRequestAggregationTerm, _AbstractAction19);

        var _super19 = _createSuper(UpdateRequestAggregationTerm);

        function UpdateRequestAggregationTerm(key, patch, id) {
          var _this114;

          _classCallCheck(this, UpdateRequestAggregationTerm);

          _this114 = _super19.call(this, id);
          _this114.key = key;
          _this114.patch = patch;
          _this114.type = UPDATE_REQUEST_AGGREGATION_TERM;
          return _this114;
        }

        return UpdateRequestAggregationTerm;
      }(AbstractAction);

      var PatchResultsAggregations = /*#__PURE__*/function (_AbstractAction20) {
        _inherits(PatchResultsAggregations, _AbstractAction20);

        var _super20 = _createSuper(PatchResultsAggregations);

        function PatchResultsAggregations(key, payload, id) {
          var _this115;

          _classCallCheck(this, PatchResultsAggregations);

          _this115 = _super20.call(this, id);
          _this115.key = key;
          _this115.payload = payload;
          _this115.type = PATCH_RESULTS_AGGREGATIONS;
          return _this115;
        }

        return PatchResultsAggregations;
      }(AbstractAction);
      /***/

    },

    /***/
    "../../libs/search/src/lib/state/container/search-state.container.directive.ts":
    /*!*****************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/state/container/search-state.container.directive.ts ***!
      \*****************************************************************************************************************************/

    /*! exports provided: SearchStateContainerDirective */

    /***/
    function libsSearchSrcLibStateContainerSearchStateContainerDirectiveTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SearchStateContainerDirective", function () {
        return SearchStateContainerDirective;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _search_facade__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../search.facade */
      "../../libs/search/src/lib/state/search.facade.ts");

      var SearchStateContainerDirective = /*#__PURE__*/function () {
        function SearchStateContainerDirective(facade) {
          _classCallCheck(this, SearchStateContainerDirective);

          this.facade = facade;
        }

        _createClass(SearchStateContainerDirective, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.facade.init(this.searchId);
          }
        }]);

        return SearchStateContainerDirective;
      }();

      SearchStateContainerDirective.ɵfac = function SearchStateContainerDirective_Factory(t) {
        return new (t || SearchStateContainerDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_search_facade__WEBPACK_IMPORTED_MODULE_1__["SearchFacade"], 1));
      };

      SearchStateContainerDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
        type: SearchStateContainerDirective,
        selectors: [["", "searchSearchStateContainer", ""]],
        inputs: {
          searchId: ["searchSearchStateContainer", "searchId"]
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([_search_facade__WEBPACK_IMPORTED_MODULE_1__["SearchFacade"]])]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SearchStateContainerDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
          args: [{
            selector: '[searchSearchStateContainer]',
            providers: [_search_facade__WEBPACK_IMPORTED_MODULE_1__["SearchFacade"]]
          }]
        }], function () {
          return [{
            type: _search_facade__WEBPACK_IMPORTED_MODULE_1__["SearchFacade"],
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Host"]
            }]
          }];
        }, {
          searchId: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
            args: ['searchSearchStateContainer']
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/state/effects.ts":
    /*!******************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/state/effects.ts ***!
      \******************************************************************************************/

    /*! exports provided: SearchEffects */

    /***/
    function libsSearchSrcLibStateEffectsTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SearchEffects", function () {
        return SearchEffects;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/auth */
      "../../libs/auth/src/index.ts");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var _ngrx_effects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ngrx/effects */
      "../../node_modules/@ngrx/effects/__ivy_ngcc__/fesm2015/effects.js");
      /* harmony import */


      var _ngrx_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ngrx/store */
      "../../node_modules/@ngrx/store/__ivy_ngcc__/fesm2015/store.js");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var _elasticsearch_constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ../elasticsearch/constant */
      "../../libs/search/src/lib/elasticsearch/constant.ts");
      /* harmony import */


      var _elasticsearch_elasticsearch_mapper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../elasticsearch/elasticsearch.mapper */
      "../../libs/search/src/lib/elasticsearch/elasticsearch.mapper.ts");
      /* harmony import */


      var _elasticsearch_elasticsearch_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ../elasticsearch/elasticsearch.service */
      "../../libs/search/src/lib/elasticsearch/elasticsearch.service.ts");
      /* harmony import */


      var _actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./actions */
      "../../libs/search/src/lib/state/actions.ts");
      /* harmony import */


      var _selectors__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./selectors */
      "../../libs/search/src/lib/state/selectors.ts");

      var SearchEffects = function SearchEffects(actions$, searchService, store$, authService, esService, esMapper) {
        var _this116 = this;

        _classCallCheck(this, SearchEffects);

        this.actions$ = actions$;
        this.searchService = searchService;
        this.store$ = store$;
        this.authService = authService;
        this.esService = esService;
        this.esMapper = esMapper;
        this.clearResults$ = Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["createEffect"])(function () {
          return _this116.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["ofType"])(_actions__WEBPACK_IMPORTED_MODULE_10__["SET_SORT_BY"], _actions__WEBPACK_IMPORTED_MODULE_10__["SET_FILTERS"], _actions__WEBPACK_IMPORTED_MODULE_10__["UPDATE_FILTERS"], _actions__WEBPACK_IMPORTED_MODULE_10__["SET_SEARCH"], _actions__WEBPACK_IMPORTED_MODULE_10__["SET_PAGINATION"], _actions__WEBPACK_IMPORTED_MODULE_10__["PAGINATE"]), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["switchMap"])(function (action) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["of"])(new _actions__WEBPACK_IMPORTED_MODULE_10__["ClearResults"](action.id), new _actions__WEBPACK_IMPORTED_MODULE_10__["ClearPagination"](action.id), new _actions__WEBPACK_IMPORTED_MODULE_10__["RequestMoreResults"](action.id));
          }));
        });
        this.scroll$ = Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["createEffect"])(function () {
          return _this116.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["ofType"])(_actions__WEBPACK_IMPORTED_MODULE_10__["SCROLL"]), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["map"])(function (action) {
            return new _actions__WEBPACK_IMPORTED_MODULE_10__["RequestMoreResults"](action.id);
          }));
        });
        this.loadResults$ = Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["createEffect"])(function () {
          return _this116.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["ofType"])(_actions__WEBPACK_IMPORTED_MODULE_10__["REQUEST_MORE_RESULTS"]), // flatMap is used because of multiple search concerns
          // TODO: should implement our own switchMap to filter by searchId
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["switchMap"])(function (action) {
            return _this116.authService.authReady().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["withLatestFrom"])(_this116.store$.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_4__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_11__["getSearchStateSearch"], action.id))), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["switchMap"])(function (_ref4) {
              var _ref5 = _slicedToArray(_ref4, 2),
                  _ = _ref5[0],
                  state = _ref5[1];

              return _this116.searchService.search('bucket', JSON.stringify(_this116.esService.getSearchRequestBody(state, _elasticsearch_constant__WEBPACK_IMPORTED_MODULE_7__["ElasticsearchMetadataModels"].BRIEF)));
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["switchMap"])(function (response) {
              var records = _this116.esMapper.toRecordBrief(response, _this116.searchService.configuration.basePath);

              var aggregations = response.aggregations;
              return [new _actions__WEBPACK_IMPORTED_MODULE_10__["AddResults"](records, action.id), new _actions__WEBPACK_IMPORTED_MODULE_10__["SetResultsAggregations"](aggregations, action.id), new _actions__WEBPACK_IMPORTED_MODULE_10__["SetResultsHits"](response.hits.total, action.id)];
            }));
          }) // wait for auth to be known
          );
        });
        this.loadMoreOnAggregation$ = Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["createEffect"])(function () {
          return _this116.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["ofType"])(_actions__WEBPACK_IMPORTED_MODULE_10__["REQUEST_MORE_ON_AGGREGATION"]), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["switchMap"])(function (action) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["of"])(new _actions__WEBPACK_IMPORTED_MODULE_10__["UpdateRequestAggregationTerm"](action.key, {
              increment: action.increment
            }, action.id));
          }));
        });
        this.setIncludeOnAggregation$ = Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["createEffect"])(function () {
          return _this116.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["ofType"])(_actions__WEBPACK_IMPORTED_MODULE_10__["SET_INCLUDE_ON_AGGREGATION"]), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["switchMap"])(function (action) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["of"])(new _actions__WEBPACK_IMPORTED_MODULE_10__["UpdateRequestAggregationTerm"](action.key, {
              include: action.include
            }, action.id));
          }));
        });
        this.updateRequestAggregationTerm$ = Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["createEffect"])(function () {
          var updateTermAction$ = _this116.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["ofType"])(_actions__WEBPACK_IMPORTED_MODULE_10__["UPDATE_REQUEST_AGGREGATION_TERM"]));

          return updateTermAction$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["switchMap"])(function (action) {
            return _this116.authService.authReady().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["withLatestFrom"])(_this116.store$.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_4__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_11__["getSearchStateSearch"]))), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["switchMap"])(function (_ref6) {
              var _ref7 = _slicedToArray(_ref6, 2),
                  _ = _ref7[0],
                  state = _ref7[1];

              return _this116.searchService.search('bucket', JSON.stringify(_this116.esService.buildMoreOnAggregationPayload(state, action.key)));
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["map"])(function (response) {
              var aggregations = response.aggregations;
              return new _actions__WEBPACK_IMPORTED_MODULE_10__["PatchResultsAggregations"](action.key, aggregations, action.id);
            }));
          }) // wait for auth to be known
          );
        });
      };

      SearchEffects.ɵfac = function SearchEffects_Factory(t) {
        return new (t || SearchEffects)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["Actions"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_lib_gn_api__WEBPACK_IMPORTED_MODULE_2__["SearchApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_4__["Store"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_lib_auth__WEBPACK_IMPORTED_MODULE_1__["AuthService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_elasticsearch_elasticsearch_service__WEBPACK_IMPORTED_MODULE_9__["ElasticsearchService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_elasticsearch_elasticsearch_mapper__WEBPACK_IMPORTED_MODULE_8__["ElasticsearchMapper"]));
      };

      SearchEffects.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: SearchEffects,
        factory: SearchEffects.ɵfac
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SearchEffects, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
        }], function () {
          return [{
            type: _ngrx_effects__WEBPACK_IMPORTED_MODULE_3__["Actions"]
          }, {
            type: _lib_gn_api__WEBPACK_IMPORTED_MODULE_2__["SearchApiService"]
          }, {
            type: _ngrx_store__WEBPACK_IMPORTED_MODULE_4__["Store"]
          }, {
            type: _lib_auth__WEBPACK_IMPORTED_MODULE_1__["AuthService"]
          }, {
            type: _elasticsearch_elasticsearch_service__WEBPACK_IMPORTED_MODULE_9__["ElasticsearchService"]
          }, {
            type: _elasticsearch_elasticsearch_mapper__WEBPACK_IMPORTED_MODULE_8__["ElasticsearchMapper"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/state/reducer.ts":
    /*!******************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/state/reducer.ts ***!
      \******************************************************************************************/

    /*! exports provided: SEARCH_FEATURE_KEY, initSearch, initialState, reducer, reducerSearch */

    /***/
    function libsSearchSrcLibStateReducerTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SEARCH_FEATURE_KEY", function () {
        return SEARCH_FEATURE_KEY;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "initSearch", function () {
        return initSearch;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "initialState", function () {
        return initialState;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "reducer", function () {
        return reducer;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "reducerSearch", function () {
        return reducerSearch;
      });
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var _actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./actions */
      "../../libs/search/src/lib/state/actions.ts");

      var SEARCH_FEATURE_KEY = 'searchState';

      var initSearch = function initSearch() {
        return {
          config: {
            filters: {}
          },
          params: {
            filters: {},
            size: _lib_common__WEBPACK_IMPORTED_MODULE_0__["RESULTS_PAGE_SIZE"],
            from: 0
          },
          results: {
            hits: null,
            records: [],
            aggregations: {}
          },
          loadingMore: false
        };
      };

      var initialState = _defineProperty({}, _actions__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_SEARCH_KEY"], initSearch());

      function reducer() {
        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
        var action = arguments.length > 1 ? arguments[1] : undefined;
        var id = action.id;

        if (id) {
          var stateSearch = state[id] || initSearch();

          if (action.type !== _actions__WEBPACK_IMPORTED_MODULE_1__["ADD_SEARCH"]) {
            stateSearch = reducerSearch(stateSearch, action);
          }

          if (stateSearch) {
            return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, id, stateSearch));
          }
        }

        return state;
      }

      function reducerSearch(state, action) {
        switch (action.type) {
          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_CONFIG_FILTERS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                config: _objectSpread(_objectSpread({}, state.config), {}, {
                  filters: _objectSpread({}, action.payload)
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_FILTERS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                params: _objectSpread(_objectSpread({}, state.params), {}, {
                  filters: _objectSpread({}, action.payload)
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["UPDATE_FILTERS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                params: _objectSpread(_objectSpread({}, state.params), {}, {
                  filters: _objectSpread(_objectSpread({}, state.params.filters), action.payload)
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_SEARCH"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                params: _objectSpread({}, action.payload)
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_SORT_BY"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                params: _objectSpread(_objectSpread({}, state.params), {}, {
                  sortBy: action.sortBy
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_PAGINATION"]:
            {
              var from = action.from,
                  size = action.size;
              return _objectSpread(_objectSpread({}, state), {}, {
                params: _objectSpread(_objectSpread({}, state.params), {}, {
                  from: from,
                  size: size
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["CLEAR_PAGINATION"]:
            return _objectSpread(_objectSpread({}, state), {}, {
              params: _objectSpread(_objectSpread({}, state.params), {}, {
                from: 0
              })
            });

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SCROLL"]:
          case _actions__WEBPACK_IMPORTED_MODULE_1__["PAGINATE"]:
            {
              var delta = action.delta || state.params.size;

              var _from = Math.max(0, state.params.from + delta);

              return _objectSpread(_objectSpread({}, state), {}, {
                params: _objectSpread(_objectSpread({}, state.params), {}, {
                  from: _from
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_RESULTS_LAYOUT"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                resultsLayout: action.resultsLayout
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["ADD_RESULTS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                results: _objectSpread(_objectSpread({}, state.results), {}, {
                  records: [].concat(_toConsumableArray(state.results.records), _toConsumableArray(action.payload))
                }),
                loadingMore: false
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["CLEAR_RESULTS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                results: _objectSpread(_objectSpread({}, state.results), {}, {
                  hits: null,
                  records: []
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["REQUEST_MORE_RESULTS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                loadingMore: true
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_RESULTS_HITS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                results: _objectSpread(_objectSpread({}, state.results), {}, {
                  hits: action.payload
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_RESULTS_AGGREGATIONS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                results: _objectSpread(_objectSpread({}, state.results), {}, {
                  aggregations: action.payload
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["SET_CONFIG_AGGREGATIONS"]:
            {
              return _objectSpread(_objectSpread({}, state), {}, {
                config: _objectSpread(_objectSpread({}, state.config), {}, {
                  aggregations: action.payload
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["UPDATE_REQUEST_AGGREGATION_TERM"]:
            {
              var config = state.config;
              var aggregations = config.aggregations;
              var terms = aggregations[action.key].terms;

              var _action$patch = action.patch,
                  increment = _action$patch.increment,
                  patch = _objectWithoutProperties(_action$patch, ["increment"]);

              if (increment) {
                patch.size = terms.size + increment;
              }

              return _objectSpread(_objectSpread({}, state), {}, {
                config: _objectSpread(_objectSpread({}, config), {}, {
                  aggregations: _objectSpread(_objectSpread({}, aggregations), {}, _defineProperty({}, action.key, {
                    terms: _objectSpread(_objectSpread({}, terms), patch)
                  }))
                })
              });
            }

          case _actions__WEBPACK_IMPORTED_MODULE_1__["PATCH_RESULTS_AGGREGATIONS"]:
            {
              var clone = JSON.parse(JSON.stringify(state.results.aggregations));
              clone[action.key].buckets = action.payload[action.key].buckets;
              return _objectSpread(_objectSpread({}, state), {}, {
                results: _objectSpread(_objectSpread({}, state.results), {}, {
                  aggregations: clone
                })
              });
            }
        }

        return state;
      }
      /***/

    },

    /***/
    "../../libs/search/src/lib/state/search.facade.ts":
    /*!************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/state/search.facade.ts ***!
      \************************************************************************************************/

    /*! exports provided: SearchFacade */

    /***/
    function libsSearchSrcLibStateSearchFacadeTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SearchFacade", function () {
        return SearchFacade;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @ngrx/store */
      "../../node_modules/@ngrx/store/__ivy_ngcc__/fesm2015/store.js");
      /* harmony import */


      var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./actions */
      "../../libs/search/src/lib/state/actions.ts");
      /* harmony import */


      var _selectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./selectors */
      "../../libs/search/src/lib/state/selectors.ts");

      var SearchFacade = /*#__PURE__*/function () {
        function SearchFacade(store) {
          _classCallCheck(this, SearchFacade);

          this.store = store;
        }

        _createClass(SearchFacade, [{
          key: "init",
          value: function init() {
            var searchId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _actions__WEBPACK_IMPORTED_MODULE_2__["DEFAULT_SEARCH_KEY"];
            this.searchId = searchId;
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["AddSearch"](searchId));
            this.results$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_3__["getSearchResults"], searchId));
            this.layout$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_3__["getSearchResultsLayout"], searchId));
            this.isLoading$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_3__["getSearchResultsLoading"], searchId));
            this.searchFilters$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_3__["getSearchFilters"], searchId));
            this.resultsHits$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_3__["getSearchResultsHits"], searchId));
            this.isEndOfResults$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_3__["isEndOfResults"], searchId));
            this.configAggregations$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_3__["getSearchConfigAggregations"], searchId));
            this.resultsAggregations$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_selectors__WEBPACK_IMPORTED_MODULE_3__["getSearchResultsAggregations"], searchId));
          }
        }, {
          key: "setConfigAggregations",
          value: function setConfigAggregations(config) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["SetConfigAggregations"](config, this.searchId));
          }
        }, {
          key: "setConfigFilters",
          value: function setConfigFilters(filters) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["SetConfigFilters"](filters, this.searchId));
          }
        }, {
          key: "requestMoreResults",
          value: function requestMoreResults() {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["RequestMoreResults"](this.searchId));
          }
        }, {
          key: "requestMoreOnAggregation",
          value: function requestMoreOnAggregation(key, increment) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["RequestMoreOnAggregation"](key, increment, this.searchId));
          }
        }, {
          key: "setResultsLayout",
          value: function setResultsLayout(layout) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["SetResultsLayout"](layout, this.searchId));
          }
        }, {
          key: "setFilters",
          value: function setFilters(filters) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["SetFilters"](filters, this.searchId));
          }
        }, {
          key: "updateFilters",
          value: function updateFilters(filters) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["UpdateFilters"](filters, this.searchId));
          }
        }, {
          key: "setSearch",
          value: function setSearch(params) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["SetSearch"](params, this.searchId));
          }
        }, {
          key: "setIncludeOnAggregation",
          value: function setIncludeOnAggregation(key, include) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["SetIncludeOnAggregation"](key, include, this.searchId));
          }
        }, {
          key: "setPagination",
          value: function setPagination(from, size) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["SetPagination"](from, size, this.searchId));
          }
        }, {
          key: "paginate",
          value: function paginate(delta) {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["Paginate"](delta, this.searchId));
          }
        }, {
          key: "scroll",
          value: function scroll() {
            this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_2__["Scroll"](this.searchId));
          }
        }]);

        return SearchFacade;
      }();

      SearchFacade.ɵfac = function SearchFacade_Factory(t) {
        return new (t || SearchFacade)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"]));
      };

      SearchFacade.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: SearchFacade,
        factory: SearchFacade.ɵfac
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SearchFacade, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
        }], function () {
          return [{
            type: _ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/search/src/lib/state/selectors.ts":
    /*!********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/search/src/lib/state/selectors.ts ***!
      \********************************************************************************************/

    /*! exports provided: getSearchState, getSearchStateSearch, getSearchFilters, getSearchSortBy, getSearchResultsLayout, getSearchConfigAggregations, getSearchResults, getSearchResultsLoading, getSearchResultsAggregations, getSearchResultsHits, isEndOfResults */

    /***/
    function libsSearchSrcLibStateSelectorsTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchState", function () {
        return getSearchState;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchStateSearch", function () {
        return getSearchStateSearch;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchFilters", function () {
        return getSearchFilters;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchSortBy", function () {
        return getSearchSortBy;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchResultsLayout", function () {
        return getSearchResultsLayout;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchConfigAggregations", function () {
        return getSearchConfigAggregations;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchResults", function () {
        return getSearchResults;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchResultsLoading", function () {
        return getSearchResultsLoading;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchResultsAggregations", function () {
        return getSearchResultsAggregations;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getSearchResultsHits", function () {
        return getSearchResultsHits;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "isEndOfResults", function () {
        return isEndOfResults;
      });
      /* harmony import */


      var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @ngrx/store */
      "../../node_modules/@ngrx/store/__ivy_ngcc__/fesm2015/store.js");
      /* harmony import */


      var _actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./actions */
      "../../libs/search/src/lib/state/actions.ts");
      /* harmony import */


      var _reducer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./reducer */
      "../../libs/search/src/lib/state/reducer.ts");

      var getSearchState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createFeatureSelector"])(_reducer__WEBPACK_IMPORTED_MODULE_2__["SEARCH_FEATURE_KEY"]);
      var getSearchStateSearch = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchState, function (state) {
        var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _actions__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_SEARCH_KEY"];
        return state[id];
      });
      var getSearchFilters = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.params.filters;
      });
      var getSearchSortBy = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.params.sortBy;
      });
      var getSearchResultsLayout = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.resultsLayout;
      });
      var getSearchConfigAggregations = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.config.aggregations;
      });
      var getSearchResults = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.results.records;
      });
      var getSearchResultsLoading = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.loadingMore;
      });
      var getSearchResultsAggregations = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.results.aggregations;
      });
      var getSearchResultsHits = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.results.hits;
      });
      var isEndOfResults = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(getSearchStateSearch, function (state) {
        return state.results.hits && state.params.from + state.params.size >= state.results.hits.value;
      });
      /***/
    },

    /***/
    "../../libs/ui/src/index.ts":
    /*!**************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/index.ts ***!
      \**************************************************************************/

    /*! no static exports found */

    /***/
    function libsUiSrcIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./lib/dropdown-selector/dropdown-selector.component */
      "../../libs/ui/src/lib/dropdown-selector/dropdown-selector.component.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "DropdownSelectorComponent", function () {
        return _lib_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_0__["DropdownSelectorComponent"];
      });
      /* harmony import */


      var _lib_facets_facets_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./lib/facets/facets.module */
      "../../libs/ui/src/lib/facets/facets.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "FacetsModule", function () {
        return _lib_facets_facets_module__WEBPACK_IMPORTED_MODULE_1__["FacetsModule"];
      });
      /* harmony import */


      var _lib_facets_facets_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./lib/facets/facets.model */
      "../../libs/ui/src/lib/facets/facets.model.ts");
      /* harmony import */


      var _lib_facets_facets_model__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_facets_facets_model__WEBPACK_IMPORTED_MODULE_2__);
      /* harmony reexport (unknown) */


      for (var __WEBPACK_IMPORT_KEY__ in _lib_facets_facets_model__WEBPACK_IMPORTED_MODULE_2__) {
        if (["DropdownSelectorComponent", "FacetsModule", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
          __webpack_require__.d(__webpack_exports__, key, function () {
            return _lib_facets_facets_model__WEBPACK_IMPORTED_MODULE_2__[key];
          });
        })(__WEBPACK_IMPORT_KEY__);
      }
      /* harmony import */


      var _lib_facets_fixtures__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./lib/facets/fixtures */
      "../../libs/ui/src/lib/facets/fixtures/index.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "BLOCK_MODEL_FIXTURE", function () {
        return _lib_facets_fixtures__WEBPACK_IMPORTED_MODULE_3__["BLOCK_MODEL_FIXTURE"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "EMPTY_BLOCK_MODEL_FIXTURE", function () {
        return _lib_facets_fixtures__WEBPACK_IMPORTED_MODULE_3__["EMPTY_BLOCK_MODEL_FIXTURE"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "FACET_ITEM_FIXTURE", function () {
        return _lib_facets_fixtures__WEBPACK_IMPORTED_MODULE_3__["FACET_ITEM_FIXTURE"];
      });
      /* harmony import */


      var _lib_text_input_text_input_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./lib/text-input/text-input.component */
      "../../libs/ui/src/lib/text-input/text-input.component.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "TextInputComponent", function () {
        return _lib_text_input_text_input_component__WEBPACK_IMPORTED_MODULE_4__["TextInputComponent"];
      });
      /* harmony import */


      var _lib_chips_input_chips_input_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./lib/chips-input/chips-input.component */
      "../../libs/ui/src/lib/chips-input/chips-input.component.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "ChipsInputComponent", function () {
        return _lib_chips_input_chips_input_component__WEBPACK_IMPORTED_MODULE_5__["ChipsInputComponent"];
      });
      /* harmony import */


      var _lib_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./lib/datepicker/datepicker.component */
      "../../libs/ui/src/lib/datepicker/datepicker.component.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "DatepickerComponent", function () {
        return _lib_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_6__["DatepickerComponent"];
      });
      /* harmony import */


      var _lib_text_area_text_area_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./lib/text-area/text-area.component */
      "../../libs/ui/src/lib/text-area/text-area.component.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "TextAreaComponent", function () {
        return _lib_text_area_text_area_component__WEBPACK_IMPORTED_MODULE_7__["TextAreaComponent"];
      });
      /* harmony import */


      var _lib_ui_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./lib/ui.module */
      "../../libs/ui/src/lib/ui.module.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "UiModule", function () {
        return _lib_ui_module__WEBPACK_IMPORTED_MODULE_8__["UiModule"];
      });
      /*
       * Public API Surface of ui
       */

      /***/

    },

    /***/
    "../../libs/ui/src/lib/autocomplete/autocomplete.component.ts":
    /*!************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/autocomplete/autocomplete.component.ts ***!
      \************************************************************************************************************/

    /*! exports provided: AutocompleteComponent */

    /***/
    function libsUiSrcLibAutocompleteAutocompleteComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AutocompleteComponent", function () {
        return AutocompleteComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");

      var AutocompleteComponent = /*#__PURE__*/function () {
        function AutocompleteComponent() {
          var _this117 = this;

          _classCallCheck(this, AutocompleteComponent);

          this.changed = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

          this.autocomplete = function (text$) {
            return text$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["debounceTime"])(200), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["tap"])(function () {
              return _this117.searching = true;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["switchMap"])(function (term) {
              return _this117.action();
            }));
          };
        }

        _createClass(AutocompleteComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return AutocompleteComponent;
      }();

      AutocompleteComponent.ɵfac = function AutocompleteComponent_Factory(t) {
        return new (t || AutocompleteComponent)();
      };

      AutocompleteComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: AutocompleteComponent,
        selectors: [["ui-autocomplete"]],
        inputs: {
          placeholder: "placeholder",
          action: "action"
        },
        outputs: {
          changed: "changed"
        },
        decls: 2,
        vars: 1,
        consts: [[1, "form-group"], ["type", "text", 1, "form-control", "form-control-lg", 3, "placeholder"]],
        template: function AutocompleteComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "input", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("placeholder", ctx.placeholder);
          }
        },
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS5jb21wb25lbnQuY3NzIn0= */"],
        changeDetection: 0
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AutocompleteComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-autocomplete',
            templateUrl: './autocomplete.component.html',
            styleUrls: ['./autocomplete.component.css'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], function () {
          return [];
        }, {
          placeholder: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          action: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          changed: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/button/button.component.ts":
    /*!************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/button/button.component.ts ***!
      \************************************************************************************************/

    /*! exports provided: ButtonComponent */

    /***/
    function libsUiSrcLibButtonButtonComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ButtonComponent", function () {
        return ButtonComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

      var _c0 = ["*"];

      var ButtonComponent = /*#__PURE__*/function () {
        function ButtonComponent() {
          _classCallCheck(this, ButtonComponent);

          this.type = 'default';
          this.disabled = false;
          this.extraClass = '';
          this.classList = '';
        }

        _createClass(ButtonComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.classList = "".concat(this.color, " ").concat(this.textColor, " ").concat(this.borderColor, " ").concat(this.extraClass);
          }
        }, {
          key: "color",
          get: function get() {
            switch (this.type) {
              case 'default':
                return 'bg-gray-100 hover:bg-gray-200';

              case 'primary':
                return 'bg-primary-lighter hover:bg-primary';

              case 'secondary':
                return 'bg-secondary-lighter hover:bg-secondary';
            }
          }
        }, {
          key: "textColor",
          get: function get() {
            switch (this.type) {
              case 'default':
                return 'text-main';

              case 'secondary':
                return 'text-secondary-darkest';

              case 'primary':
                return 'text-primary-darkest';
            }
          }
        }, {
          key: "borderColor",
          get: function get() {
            switch (this.type) {
              case 'default':
                return 'border-gray-100 hover:border-gray-200 focus:border-gray-500 focus:ring-4 focus:ring-gray-500 focus:ring-opacity-50';

              case 'secondary':
                return 'border-secondary-lighter hover:border-secondary focus:border-secondary-darker focus:ring-4 focus:ring-secondary-darker focus:ring-opacity-50';

              case 'primary':
                return 'border-primary-lighter hover:border-primary focus:border-primary-darker focus:ring-4 focus:ring-primary-darker focus:ring-opacity-50';
            }
          }
        }]);

        return ButtonComponent;
      }();

      ButtonComponent.ɵfac = function ButtonComponent_Factory(t) {
        return new (t || ButtonComponent)();
      };

      ButtonComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ButtonComponent,
        selectors: [["ui-button"]],
        inputs: {
          type: "type",
          disabled: "disabled",
          extraClass: "extraClass"
        },
        ngContentSelectors: _c0,
        decls: 2,
        vars: 3,
        consts: [["type", "button", 1, "border", "py-2", "px-4", "rounded", "focus:outline-none", 3, "disabled"]],
        template: function ButtonComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMap"](ctx.classList);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx.disabled);
          }
        },
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvYnV0dG9uL2J1dHRvbi5jb21wb25lbnQuY3NzIn0= */"],
        changeDetection: 0
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ButtonComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-button',
            templateUrl: './button.component.html',
            styleUrls: ['./button.component.css'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], function () {
          return [];
        }, {
          type: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          disabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          extraClass: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/catalog-title/catalog-title.component.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/catalog-title/catalog-title.component.ts ***!
      \**************************************************************************************************************/

    /*! exports provided: CatalogTitleComponent */

    /***/
    function libsUiSrcLibCatalogTitleCatalogTitleComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CatalogTitleComponent", function () {
        return CatalogTitleComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      function CatalogTitleComponent_h2_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h2", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", ctx_r0.tooltip);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r0.name, " ");
        }
      }

      function CatalogTitleComponent_div_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r1.description, " ");
        }
      }

      var CatalogTitleComponent = function CatalogTitleComponent() {
        _classCallCheck(this, CatalogTitleComponent);
      };

      CatalogTitleComponent.ɵfac = function CatalogTitleComponent_Factory(t) {
        return new (t || CatalogTitleComponent)();
      };

      CatalogTitleComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: CatalogTitleComponent,
        selectors: [["ui-catalog-title"]],
        inputs: {
          name: "name",
          tooltip: "tooltip",
          description: "description"
        },
        decls: 4,
        vars: 2,
        consts: [[1, "lg:flex", "lg:items-center", "lg:justify-between"], [1, "flex-1", "min-w-0"], ["class", "text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:leading-9 sm:truncate", 3, "title", 4, "ngIf"], ["class", "mt-1 flex flex-col sm:mt-0 sm:flex-row sm:flex-wrap", 4, "ngIf"], [1, "text-2xl", "font-bold", "leading-7", "text-gray-900", "sm:text-3xl", "sm:leading-9", "sm:truncate", 3, "title"], [1, "mt-1", "flex", "flex-col", "sm:mt-0", "sm:flex-row", "sm:flex-wrap"], [1, "mt-2", "flex", "items-center", "text-sm", "leading-5", "text-gray-500", "sm:mr-6"]],
        template: function CatalogTitleComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, CatalogTitleComponent_h2_2_Template, 2, 2, "h2", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, CatalogTitleComponent_div_3_Template, 3, 1, "div", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.name);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.description);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvY2F0YWxvZy10aXRsZS9jYXRhbG9nLXRpdGxlLmNvbXBvbmVudC5jc3MifQ== */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CatalogTitleComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-catalog-title',
            templateUrl: './catalog-title.component.html',
            styleUrls: ['./catalog-title.component.css']
          }]
        }], null, {
          name: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          tooltip: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          description: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/chips-input/chips-input.component.ts":
    /*!**********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/chips-input/chips-input.component.ts ***!
      \**********************************************************************************************************/

    /*! exports provided: ChipsInputComponent */

    /***/
    function libsUiSrcLibChipsInputChipsInputComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ChipsInputComponent", function () {
        return ChipsInputComponent;
      });
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var ngx_chips__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ngx-chips */
      "../../node_modules/ngx-chips/__ivy_ngcc__/fesm2015/ngx-chips.js");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "../../node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");

      function ChipsInputComponent_ng_template_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](0);
        }

        if (rf & 2) {
          var item_r1 = ctx.item;

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", item_r1.display, " ");
        }
      }

      var _c0 = function _c0() {
        return {
          enter: "0ms",
          leave: "0ms"
        };
      };

      var ChipsInputComponent = /*#__PURE__*/function () {
        function ChipsInputComponent(http) {
          var _this118 = this;

          _classCallCheck(this, ChipsInputComponent);

          this.http = http;
          this.items = [];

          this.requestAutocompleteItems = function (text) {
            var url = _this118.url(text);

            return _this118.http.get(url).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (item) {
              return item.map(function (i) {
                return i.values.eng;
              });
            }));
          };

          this.rawChange = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
          this.itemsChange = this.rawChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["distinctUntilChanged"])());
        }

        _createClass(ChipsInputComponent, [{
          key: "onChange",
          value: function onChange(event) {
            this.rawChange.next(event);
          }
        }, {
          key: "ngOnInit",
          value: function ngOnInit() {
            this.items = this.selectedItems;
          }
        }]);

        return ChipsInputComponent;
      }();

      ChipsInputComponent.ɵfac = function ChipsInputComponent_Factory(t) {
        return new (t || ChipsInputComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]));
      };

      ChipsInputComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
        type: ChipsInputComponent,
        selectors: [["ui-chips-input"]],
        inputs: {
          url: "url",
          placeholder: "placeholder",
          selectedItems: "selectedItems"
        },
        outputs: {
          itemsChange: "itemsChange"
        },
        decls: 4,
        vars: 6,
        consts: [["onlyFromAutocomplete", "true", 1, "border-2", "border-primary", "h-full", "rounded-lg", "p-2", "bg-white", "text-sm", "focus:border-primary", 3, "ngModel", "placeholder", "animationDuration", "ngModelChange"], [3, "autocompleteObservable", "minimumTextLength"]],
        template: function ChipsInputComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "tag-input", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function ChipsInputComponent_Template_tag_input_ngModelChange_0_listener($event) {
              return ctx.onChange($event);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "tag-input-dropdown", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, ChipsInputComponent_ng_template_2_Template, 1, 1, "ng-template");

            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, " > ");

            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx.items)("placeholder", ctx.placeholder)("animationDuration", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](5, _c0));

            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("autocompleteObservable", ctx.requestAutocompleteItems)("minimumTextLength", 0);
          }
        },
        directives: [ngx_chips__WEBPACK_IMPORTED_MODULE_4__["TagInputComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["NgModel"], ngx_chips__WEBPACK_IMPORTED_MODULE_4__["TagInputDropdown"]],
        styles: ["tag-input[_ngcontent-%COMP%]  .ng2-tag-input {\n  border-bottom: none;\n}\ntag-input[_ngcontent-%COMP%]  .ng2-tag-input.ng2-tag-input--focused {\n  border-bottom: none;\n}\ntag-input[_ngcontent-%COMP%]  tag {\n  border-radius: 5px;\n  background: var(--color-primary-lightest);\n  font-family: inherit;\n\n  align-content: center;\n\n  font-style: italic;\n}\ntag-input[_ngcontent-%COMP%] \n  tag :not(:focus):not(.tag--editing):not(:active):not(.readonly):hover, tag-input[_ngcontent-%COMP%] \n  tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n  background: var(--color-primary) !important;\n}\ntag-input[_ngcontent-%COMP%]  .tag__text {\n  padding-right: 7px;\n}\ntag-input[_ngcontent-%COMP%]  div, tag-input[_ngcontent-%COMP%]  form {\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvdWkvc3JjL2xpYi9jaGlwcy1pbnB1dC9jaGlwcy1pbnB1dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5Q0FBeUM7RUFDekMsb0JBQW9COztFQUVwQixxQkFBcUI7O0VBRXJCLGtCQUFrQjtBQUNwQjtBQUVBOzs7O0VBSUUsMkNBQTJDO0FBQzdDO0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7QUFFQTs7RUFFRSxZQUFZO0FBQ2QiLCJmaWxlIjoibGlicy91aS9zcmMvbGliL2NoaXBzLWlucHV0L2NoaXBzLWlucHV0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWctaW5wdXQ6Om5nLWRlZXAgLm5nMi10YWctaW5wdXQge1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxudGFnLWlucHV0OjpuZy1kZWVwIC5uZzItdGFnLWlucHV0Lm5nMi10YWctaW5wdXQtLWZvY3VzZWQge1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuXG50YWctaW5wdXQ6Om5nLWRlZXAgdGFnIHtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1wcmltYXJ5LWxpZ2h0ZXN0KTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxudGFnLWlucHV0OjpuZy1kZWVwXG4gIHRhZzo6bmctZGVlcDpub3QoOmZvY3VzKTpub3QoLnRhZy0tZWRpdGluZyk6bm90KDphY3RpdmUpOm5vdCgucmVhZG9ubHkpOmhvdmVyLFxudGFnLWlucHV0OjpuZy1kZWVwXG4gIHRhZzpub3QoOmZvY3VzKTpub3QoLnRhZy0tZWRpdGluZyk6bm90KDphY3RpdmUpOm5vdCgucmVhZG9ubHkpOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3ItcHJpbWFyeSkgIWltcG9ydGFudDtcbn1cblxudGFnLWlucHV0OjpuZy1kZWVwIC50YWdfX3RleHQge1xuICBwYWRkaW5nLXJpZ2h0OiA3cHg7XG59XG5cbnRhZy1pbnB1dDo6bmctZGVlcCBkaXYsXG50YWctaW5wdXQ6Om5nLWRlZXAgZm9ybSB7XG4gIGhlaWdodDogMTAwJTtcbn0iXX0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](ChipsInputComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
          args: [{
            selector: 'ui-chips-input',
            templateUrl: './chips-input.component.html',
            styleUrls: ['./chips-input.component.css']
          }]
        }], function () {
          return [{
            type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]
          }];
        }, {
          url: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
          }],
          placeholder: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
          }],
          selectedItems: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
          }],
          itemsChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/color-scale/color-scale.component.ts":
    /*!**********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/color-scale/color-scale.component.ts ***!
      \**********************************************************************************************************/

    /*! exports provided: ColorScaleComponent */

    /***/
    function libsUiSrcLibColorScaleColorScaleComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ColorScaleComponent", function () {
        return ColorScaleComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      function ColorScaleComponent_div_20_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 16);
        }

        if (rf & 2) {
          var i_r1 = ctx.$implicit;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("shadow-md rounded w-6 h-6 m-2 bg-gray-", i_r1, "00");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate1"]("title", "bg-gray-", i_r1, "00");
        }
      }

      var _c0 = function _c0() {
        return [1, 2, 3, 4, 5, 6, 7, 8, 9];
      };

      var ColorScaleComponent = /*#__PURE__*/function () {
        function ColorScaleComponent() {
          _classCallCheck(this, ColorScaleComponent);
        }

        _createClass(ColorScaleComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return ColorScaleComponent;
      }();

      ColorScaleComponent.ɵfac = function ColorScaleComponent_Factory(t) {
        return new (t || ColorScaleComponent)();
      };

      ColorScaleComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ColorScaleComponent,
        selectors: [["ui-color-scale"]],
        decls: 22,
        vars: 2,
        consts: [[1, "flex", "flex-row", "items-center"], [1, "text-xs", "text-gray-700", "font-bold", "m-2", "w-32", "text-right"], ["title", "primary-darkest", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-primary-darkest"], ["title", "primary-darker", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-primary-darker"], ["title", "primary", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-primary", "border-2", "border-primary-darkest"], ["title", "primary-lighter", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-primary-lighter"], ["title", "primary-lightest", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-primary-lightest"], [1, "flex", "flex-row"], ["title", "secondary-darkest", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-secondary-darkest"], ["title", "secondary-darker", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-secondary-darker"], ["title", "secondary", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-secondary", "border-2", "border-secondary-darkest"], ["title", "secondary-lighter", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-secondary-lighter"], ["title", "secondary-lightest", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-secondary-lightest"], ["title", "background", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-background"], [3, "class", "title", 4, "ngFor", "ngForOf"], ["title", "main", 1, "shadow-md", "rounded", "w-6", "h-6", "m-2", "bg-main"], [3, "title"]],
        template: function ColorScaleComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "primary");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "div", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "div", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "div", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "div", 6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 7);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, " secondary ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "div", 8);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](12, "div", 9);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](13, "div", 10);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](14, "div", 11);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](15, "div", 12);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 7);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18, " background to main ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](19, "div", 13);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](20, ColorScaleComponent_div_20_Template, 1, 4, "div", 14);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](21, "div", 15);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](20);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](1, _c0));
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["NgForOf"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvY29sb3Itc2NhbGUvY29sb3Itc2NhbGUuY29tcG9uZW50LmNzcyJ9 */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ColorScaleComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-color-scale',
            templateUrl: './color-scale.component.html',
            styleUrls: ['./color-scale.component.css']
          }]
        }], function () {
          return [];
        }, null);
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/datepicker/datepicker.component.ts":
    /*!********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/datepicker/datepicker.component.ts ***!
      \********************************************************************************************************/

    /*! exports provided: DatepickerComponent */

    /***/
    function libsUiSrcLibDatepickerDatepickerComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DatepickerComponent", function () {
        return DatepickerComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var mydatepicker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! mydatepicker */
      "../../node_modules/mydatepicker/__ivy_ngcc__/fesm2015/mydatepicker.js");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/forms */
      "../../node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");

      var DatepickerComponent = /*#__PURE__*/function () {
        function DatepickerComponent() {
          _classCallCheck(this, DatepickerComponent);

          this.selectedDate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(DatepickerComponent, [{
          key: "onDateChanged",
          value: function onDateChanged(event) {
            this.selectedDate.emit(new Date(event.jsdate));
          }
        }, {
          key: "ngOnInit",
          value: function ngOnInit() {
            this.initializeDate(this.currentDate);
          }
        }, {
          key: "initializeDate",
          value: function initializeDate(date) {
            this.model = {
              jsdate: date || new Date()
            };
          }
        }, {
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            var _this119 = this;

            // to delay emit after parent viewinit completed
            setTimeout(function () {
              return _this119.selectedDate.emit(_this119.model.jsdate);
            });
          }
        }]);

        return DatepickerComponent;
      }();

      DatepickerComponent.ɵfac = function DatepickerComponent_Factory(t) {
        return new (t || DatepickerComponent)();
      };

      DatepickerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: DatepickerComponent,
        selectors: [["ui-datepicker"]],
        inputs: {
          options: "options",
          currentDate: "currentDate"
        },
        outputs: {
          selectedDate: "selectedDate"
        },
        decls: 1,
        vars: 2,
        consts: [[3, "options", "ngModel", "dateChanged", "ngModelChange"]],
        template: function DatepickerComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "my-date-picker", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("dateChanged", function DatepickerComponent_Template_my_date_picker_dateChanged_0_listener($event) {
              return ctx.onDateChanged($event);
            })("ngModelChange", function DatepickerComponent_Template_my_date_picker_ngModelChange_0_listener($event) {
              return ctx.model = $event;
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("options", ctx.options)("ngModel", ctx.model);
          }
        },
        directives: [mydatepicker__WEBPACK_IMPORTED_MODULE_1__["MyDatePicker"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgModel"]],
        styles: ["my-date-picker[_ngcontent-%COMP%]  div {\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvdWkvc3JjL2xpYi9kYXRlcGlja2VyL2RhdGVwaWNrZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvZGF0ZXBpY2tlci9kYXRlcGlja2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJteS1kYXRlLXBpY2tlcjo6bmctZGVlcCBkaXYge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbiJdfQ== */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DatepickerComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: ' ui-datepicker',
            templateUrl: './datepicker.component.html',
            styleUrls: ['./datepicker.component.css']
          }]
        }], function () {
          return [];
        }, {
          options: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          currentDate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selectedDate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/drag-and-drop-file-input/drag-and-drop-file-input.component.ts":
    /*!************************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/drag-and-drop-file-input/drag-and-drop-file-input.component.ts ***!
      \************************************************************************************************************************************/

    /*! exports provided: placeholder, DragAndDropFileInputComponent */

    /***/
    function libsUiSrcLibDragAndDropFileInputDragAndDropFileInputComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "placeholder", function () {
        return placeholder;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DragAndDropFileInputComponent", function () {
        return DragAndDropFileInputComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @biesbjerg/ngx-translate-extract-marker */
      "../../node_modules/@biesbjerg/ngx-translate-extract-marker/__ivy_ngcc__/fesm2015/biesbjerg-ngx-translate-extract-marker.js");
      /* harmony import */


      var ngx_dropzone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ngx-dropzone */
      "../../node_modules/ngx-dropzone/__ivy_ngcc__/fesm2015/ngx-dropzone.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      function DragAndDropFileInputComponent_div_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r0.placeholder, " ");
        }
      }

      function DragAndDropFileInputComponent_div_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r1.fileName);
        }
      }

      var placeholder = 'dropFile';
      Object(_biesbjerg_ngx_translate_extract_marker__WEBPACK_IMPORTED_MODULE_1__["marker"])('dropFile');

      var DragAndDropFileInputComponent = /*#__PURE__*/function () {
        function DragAndDropFileInputComponent() {
          _classCallCheck(this, DragAndDropFileInputComponent);

          this.placeholder = placeholder;
          this.accept = '*';
          this.fileChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.selectedFile = null;
        }

        _createClass(DragAndDropFileInputComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "selectFile",
          value: function selectFile(event) {
            this.selectedFile = event.addedFiles[0];
            this.fileChange.emit(this.selectedFile);
          }
        }, {
          key: "fileName",
          get: function get() {
            return this.selectedFile && this.selectedFile.name;
          }
        }]);

        return DragAndDropFileInputComponent;
      }();

      DragAndDropFileInputComponent.ɵfac = function DragAndDropFileInputComponent_Factory(t) {
        return new (t || DragAndDropFileInputComponent)();
      };

      DragAndDropFileInputComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: DragAndDropFileInputComponent,
        selectors: [["ui-drag-and-drop-file-input"]],
        inputs: {
          placeholder: "placeholder",
          accept: "accept"
        },
        outputs: {
          fileChange: "fileChange"
        },
        decls: 4,
        vars: 3,
        consts: [[1, "flex", "h-full"], ["multiple", "false", 1, "flex-1", 3, "accept", "change"], ["class", "text-gray-900 pl-2 py-2", "translate", "", 4, "ngIf"], ["class", "text-gray-900 pl-2 py-2", 4, "ngIf"], ["translate", "", 1, "text-gray-900", "pl-2", "py-2"], [1, "text-gray-900", "pl-2", "py-2"]],
        template: function DragAndDropFileInputComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "ngx-dropzone", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function DragAndDropFileInputComponent_Template_ngx_dropzone_change_1_listener($event) {
              return ctx.selectFile($event);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, DragAndDropFileInputComponent_div_2_Template, 2, 1, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, DragAndDropFileInputComponent_div_3_Template, 2, 1, "div", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("accept", ctx.accept);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.fileName);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.fileName);
          }
        },
        directives: [ngx_dropzone__WEBPACK_IMPORTED_MODULE_2__["NgxDropzoneComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateDirective"]],
        styles: ["ngx-dropzone[_ngcontent-%COMP%] {\n  height: auto;\n  border:none;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvdWkvc3JjL2xpYi9kcmFnLWFuZC1kcm9wLWZpbGUtaW5wdXQvZHJhZy1hbmQtZHJvcC1maWxlLWlucHV0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osV0FBVztBQUNiIiwiZmlsZSI6ImxpYnMvdWkvc3JjL2xpYi9kcmFnLWFuZC1kcm9wLWZpbGUtaW5wdXQvZHJhZy1hbmQtZHJvcC1maWxlLWlucHV0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuZ3gtZHJvcHpvbmUge1xuICBoZWlnaHQ6IGF1dG87XG4gIGJvcmRlcjpub25lO1xufVxuIl19 */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DragAndDropFileInputComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-drag-and-drop-file-input',
            templateUrl: './drag-and-drop-file-input.component.html',
            styleUrls: ['./drag-and-drop-file-input.component.css']
          }]
        }], function () {
          return [];
        }, {
          placeholder: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          accept: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          fileChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/dropdown-selector/dropdown-selector.component.ts":
    /*!**********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/dropdown-selector/dropdown-selector.component.ts ***!
      \**********************************************************************************************************************/

    /*! exports provided: DropdownSelectorComponent */

    /***/
    function libsUiSrcLibDropdownSelectorDropdownSelectorComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DropdownSelectorComponent", function () {
        return DropdownSelectorComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/forms */
      "../../node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      function DropdownSelectorComponent_label_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "label", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("for", ctx_r0.id);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r0.title, " ");
        }
      }

      function DropdownSelectorComponent_option_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "translate");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var choice_r2 = ctx.$implicit;

          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", choice_r2.value)("selected", ctx_r1.isSelected(choice_r2));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 3, choice_r2.label), " ");
        }
      }

      var DropdownSelectorComponent = /*#__PURE__*/function () {
        function DropdownSelectorComponent() {
          _classCallCheck(this, DropdownSelectorComponent);

          this.showTitle = true;
          this.selectValue = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(DropdownSelectorComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "isSelected",
          value: function isSelected(choice) {
            return choice.value === this.selected;
          }
        }, {
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            var _this120 = this;

            setTimeout(function () {
              return _this120.selectValue.emit(_this120.choices[0].value);
            });
          }
        }, {
          key: "id",
          get: function get() {
            return this.title.toLowerCase().replace(/[^a-z]+/g, '-');
          }
        }]);

        return DropdownSelectorComponent;
      }();

      DropdownSelectorComponent.ɵfac = function DropdownSelectorComponent_Factory(t) {
        return new (t || DropdownSelectorComponent)();
      };

      DropdownSelectorComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: DropdownSelectorComponent,
        selectors: [["ui-dropdown-selector"]],
        inputs: {
          title: "title",
          showTitle: "showTitle",
          ariaName: "ariaName",
          choices: "choices",
          selected: "selected"
        },
        outputs: {
          selectValue: "selectValue"
        },
        decls: 5,
        vars: 3,
        consts: [[1, "flex", "flex-row", "items-center", "relative"], ["class", "block uppercase tracking-wide text-gray-800 text-xs font-bold mr-2 whitespace-no-wrap", 4, "ngIf"], [1, "block", "w-full", "bg-white", "border", "border-gray-300", "text-gray-800", "py-2", "px-3", "pr-6", "rounded", "leading-tight", "focus:outline-none", "focus:border-primary", 3, "id", "change"], [3, "value", "selected", 4, "ngFor", "ngForOf"], [1, "pointer-events-none", "absolute", "inset-y-0", "right-0", "flex", "items-center", "px-2", "text-gray-800"], [1, "block", "uppercase", "tracking-wide", "text-gray-800", "text-xs", "font-bold", "mr-2", "whitespace-no-wrap"], [3, "value", "selected"]],
        template: function DropdownSelectorComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, DropdownSelectorComponent_label_1_Template, 2, 2, "label", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "select", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function DropdownSelectorComponent_Template_select_change_2_listener($event) {
              return ctx.selectValue.emit($event.target.value);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, DropdownSelectorComponent_option_3_Template, 3, 5, "option", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "div", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.showTitle);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.id);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.choices);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_x"]],
        pipes: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslatePipe"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvZHJvcGRvd24tc2VsZWN0b3IvZHJvcGRvd24tc2VsZWN0b3IuY29tcG9uZW50LmNzcyJ9 */"],
        changeDetection: 0
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DropdownSelectorComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-dropdown-selector',
            templateUrl: './dropdown-selector.component.html',
            styleUrls: ['./dropdown-selector.component.css'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], function () {
          return [];
        }, {
          title: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          showTitle: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          ariaName: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          choices: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selected: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selectValue: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/facets/facet-block/facet-block.component.ts":
    /*!*****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/facets/facet-block/facet-block.component.ts ***!
      \*****************************************************************************************************************/

    /*! exports provided: FacetBlockComponent, FacetBlockStubComponent */

    /***/
    function libsUiSrcLibFacetsFacetBlockFacetBlockComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetBlockComponent", function () {
        return FacetBlockComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetBlockStubComponent", function () {
        return FacetBlockStubComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _facet_item_facet_item_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../facet-item/facet-item.component */
      "../../libs/ui/src/lib/facets/facet-item/facet-item.component.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      var _c0 = ["filterInput"];

      function FacetBlockComponent_div_0_div_4_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "svg", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      function FacetBlockComponent_div_0_div_5_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "svg", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      function FacetBlockComponent_div_0_Template(rf, ctx) {
        if (rf & 1) {
          var _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function FacetBlockComponent_div_0_Template_div_click_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);

            var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r7.toggleCollapsed();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](3, "translate");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, FacetBlockComponent_div_0_div_4_Template, 3, 0, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, FacetBlockComponent_div_0_div_5_Template, 3, 0, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](3, 3, "facets.block.title." + ctx_r0.title));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r0.collapsed);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.collapsed);
        }
      }

      function FacetBlockComponent_div_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "svg", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      function FacetBlockComponent_input_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "input", 18, 19);
        }
      }

      function FacetBlockComponent_ui_facet_item_4_Template(rf, ctx) {
        if (rf & 1) {
          var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ui-facet-item", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("selectedChange", function FacetBlockComponent_ui_facet_item_4_Template_ui_facet_item_selectedChange_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var item_r10 = ctx.$implicit;

            var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r11.onItemSelectedChange($event, item_r10);
          })("invertedChange", function FacetBlockComponent_ui_facet_item_4_Template_ui_facet_item_invertedChange_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var item_r10 = ctx.$implicit;

            var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r13.onItemInvertedChange($event, item_r10);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var item_r10 = ctx.$implicit;

          var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("label", item_r10.value)("count", item_r10.count)("selected", ctx_r3.isItemSelected(item_r10));
        }
      }

      function FacetBlockComponent_a_5_Template(rf, ctx) {
        if (rf & 1) {
          var _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function FacetBlockComponent_a_5_Template_a_click_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r15);

            var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r14.onMoreClick($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "more");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      var FacetBlockComponent = /*#__PURE__*/function () {
        function FacetBlockComponent() {
          _classCallCheck(this, FacetBlockComponent);

          this.filterChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.itemChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.more = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();
        }

        _createClass(FacetBlockComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.title = this.model.key;
            this.hasItems = this.countItems() > 0;
          }
        }, {
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            var _this121 = this;

            if (this.eltFilterInputRef) {
              this.subscription.add(Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])(this.eltFilterInputRef.nativeElement, 'keyup').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["debounceTime"])(300)).subscribe(function (event) {
                return _this121.onFilterChange(event.path[0].value);
              }));
            }
          }
        }, {
          key: "countItems",
          value: function countItems() {
            return this.model.type === _lib_common__WEBPACK_IMPORTED_MODULE_1__["AggregationsTypesEnum"].FILTERS ? this.model.items.reduce(function (sum, current) {
              return sum + current.count;
            }, 0) : this.model.items.length;
          }
        }, {
          key: "toggleCollapsed",
          value: function toggleCollapsed() {
            this.collapsed = !this.collapsed;
          }
        }, {
          key: "onFilterChange",
          value: function onFilterChange(value) {
            this.filterChange.emit(value);
          }
        }, {
          key: "isItemSelected",
          value: function isItemSelected(item) {
            return this.selectedPaths.map(function (path) {
              return JSON.stringify(path);
            }).includes(JSON.stringify(item.path));
          }
        }, {
          key: "emitItemChange",
          value: function emitItemChange(item) {
            var eventOutput = {
              item: item,
              block: this.model
            };
            this.itemChange.emit(eventOutput);
          }
        }, {
          key: "onItemSelectedChange",
          value: function onItemSelectedChange(selected, item) {
            item.selected = selected;
            this.emitItemChange(item);
          }
        }, {
          key: "onItemInvertedChange",
          value: function onItemInvertedChange(inverted, item) {
            item.inverted = inverted;
            this.emitItemChange(item);
          }
        }, {
          key: "onMoreClick",
          value: function onMoreClick(event) {
            event.preventDefault();
            this.more.emit();
          }
        }, {
          key: "getItems",
          value: function getItems() {
            return this.model.items;
          }
        }, {
          key: "canShowMore",
          value: function canShowMore() {
            return this.model.more;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.subscription.unsubscribe();
          }
        }, {
          key: "canFilter",
          get: function get() {
            return this.model.includeFilter;
          }
        }]);

        return FacetBlockComponent;
      }();

      FacetBlockComponent.ɵfac = function FacetBlockComponent_Factory(t) {
        return new (t || FacetBlockComponent)();
      };

      FacetBlockComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: FacetBlockComponent,
        selectors: [["ui-facet-block"]],
        viewQuery: function FacetBlockComponent_Query(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
          }

          if (rf & 2) {
            var _t;

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.eltFilterInputRef = _t.first);
          }
        },
        inputs: {
          collapsed: "collapsed",
          filter: "filter",
          model: "model",
          selectedPaths: "selectedPaths"
        },
        outputs: {
          filterChange: "filterChange",
          itemChange: "itemChange",
          more: "more"
        },
        decls: 6,
        vars: 6,
        consts: [["class", "flex flex-row items-center group", 3, "click", 4, "ngIf"], [1, "ml-4", "collapsible-content", 3, "hidden"], ["class", "pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500", 4, "ngIf"], ["type", "text", "class", "w-full rounded border border-1 border-gray-300 input-filter py-1 px-2 pl-8 focus:outline-none focus:border-blue-400", 4, "ngIf"], [3, "label", "count", "selected", "selectedChange", "invertedChange", 4, "ngFor", "ngForOf"], ["href", "", "class", "a-more", 3, "click", 4, "ngIf"], [1, "flex", "flex-row", "items-center", "group", 3, "click"], [1, "flex-initial", "truncate", "font-bold", "cursor-pointer", "text-gray-900", "group-hover:text-black", "span-title"], ["class", "flex-shrink-0 cursor-pointer text-gray-900 group-hover:text-black icon-collapse", "style", "min-width: 20px", 4, "ngIf"], ["class", "flex-shrink-0 cursor-pointer text-gray-900 group-hover:text-black icon-expand", "style", "min-width: 20px", 4, "ngIf"], [1, "flex-shrink-0", "cursor-pointer", "text-gray-900", "group-hover:text-black", "icon-collapse", 2, "min-width", "20px"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 20 20", "fill", "currentColor", 1, "h-5", "w-5"], ["fill-rule", "evenodd", "d", "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z", "clip-rule", "evenodd"], [1, "flex-shrink-0", "cursor-pointer", "text-gray-900", "group-hover:text-black", "icon-expand", 2, "min-width", "20px"], ["fill-rule", "evenodd", "d", "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z", "clip-rule", "evenodd"], [1, "pointer-events-none", "absolute", "inset-y-0", "right-0", "flex", "items-center", "px-2", "text-gray-500"], ["xmlns", "http://www.w3.org/2000/svg", "fill", "none", "viewBox", "0 0 24 24", "stroke", "currentColor", 1, "h-4", "w-4", "my-2"], ["stroke-linecap", "round", "stroke-linejoin", "round", "stroke-width", "2", "d", "M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"], ["type", "text", 1, "w-full", "rounded", "border", "border-1", "border-gray-300", "input-filter", "py-1", "px-2", "pl-8", "focus:outline-none", "focus:border-blue-400"], ["filterInput", ""], [3, "label", "count", "selected", "selectedChange", "invertedChange"], ["href", "", 1, "a-more", 3, "click"]],
        template: function FacetBlockComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, FacetBlockComponent_div_0_Template, 6, 5, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, FacetBlockComponent_div_2_Template, 3, 0, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, FacetBlockComponent_input_3_Template, 2, 0, "input", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, FacetBlockComponent_ui_facet_item_4_Template, 1, 3, "ui-facet-item", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, FacetBlockComponent_a_5_Template, 2, 0, "a", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasItems);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("hidden", ctx.collapsed || !ctx.hasItems);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.canFilter);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.canFilter);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.getItems());

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.canShowMore());
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgForOf"], _facet_item_facet_item_component__WEBPACK_IMPORTED_MODULE_5__["FacetItemComponent"]],
        pipes: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslatePipe"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvZmFjZXRzL2ZhY2V0LWJsb2NrL2ZhY2V0LWJsb2NrLmNvbXBvbmVudC5jc3MifQ== */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FacetBlockComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-facet-block',
            templateUrl: './facet-block.component.html',
            styleUrls: ['./facet-block.component.css']
          }]
        }], function () {
          return [];
        }, {
          collapsed: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          filter: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selectedPaths: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          eltFilterInputRef: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['filterInput']
          }],
          filterChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          itemChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          more: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();

      var FacetBlockStubComponent = function FacetBlockStubComponent() {
        _classCallCheck(this, FacetBlockStubComponent);

        this.filterChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.itemSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.itemUnselected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      };

      FacetBlockStubComponent.ɵfac = function FacetBlockStubComponent_Factory(t) {
        return new (t || FacetBlockStubComponent)();
      };

      FacetBlockStubComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: FacetBlockStubComponent,
        selectors: [["ui-facet-block"]],
        inputs: {
          title: "title",
          model: "model",
          selectedPaths: "selectedPaths"
        },
        outputs: {
          filterChange: "filterChange",
          itemSelected: "itemSelected",
          itemUnselected: "itemUnselected"
        },
        decls: 0,
        vars: 0,
        template: function FacetBlockStubComponent_Template(rf, ctx) {},
        encapsulation: 2
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FacetBlockStubComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-facet-block',
            template: ''
          }]
        }], null, {
          title: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selectedPaths: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          filterChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          itemSelected: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          itemUnselected: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/facets/facet-item/facet-item.component.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/facets/facet-item/facet-item.component.ts ***!
      \***************************************************************************************************************/

    /*! exports provided: FacetItemComponent, FacetItemStubComponent */

    /***/
    function libsUiSrcLibFacetsFacetItemFacetItemComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetItemComponent", function () {
        return FacetItemComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetItemStubComponent", function () {
        return FacetItemStubComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/forms */
      "../../node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      function FacetItemComponent_div_7_Template(rf, ctx) {
        if (rf & 1) {
          var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function FacetItemComponent_div_7_Template_div_click_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);

            var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r2.toggleInverted();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "svg", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      function FacetItemComponent_div_8_Template(rf, ctx) {
        if (rf & 1) {
          var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function FacetItemComponent_div_8_Template_div_click_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);

            var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r4.toggleInverted();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "svg", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      var FacetItemComponent = /*#__PURE__*/function () {
        function FacetItemComponent() {
          _classCallCheck(this, FacetItemComponent);

          this.selectedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.invertedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(FacetItemComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "onSelectedChange",
          value: function onSelectedChange(value) {
            this.selectedChange.emit(value);
          }
        }, {
          key: "onInvertedChange",
          value: function onInvertedChange(value) {
            this.invertedChange.emit(value);
          }
        }, {
          key: "toggleInverted",
          value: function toggleInverted() {
            this.inverted = !this.inverted;
            this.onInvertedChange(this.inverted);
          }
        }]);

        return FacetItemComponent;
      }();

      FacetItemComponent.ɵfac = function FacetItemComponent_Factory(t) {
        return new (t || FacetItemComponent)();
      };

      FacetItemComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: FacetItemComponent,
        selectors: [["ui-facet-item"]],
        inputs: {
          label: "label",
          count: "count",
          selected: "selected",
          inverted: "inverted"
        },
        outputs: {
          selectedChange: "selectedChange",
          invertedChange: "invertedChange"
        },
        decls: 9,
        vars: 7,
        consts: [[1, "flex", "flex-row", "items-center", "group", "px-1", "my-1", "hover:bg-gray-100", "rounded-sm"], [1, "flex-grow", "flex-shrink", "truncate", "cursor-pointer", "text-gray-900", "group-hover:text-black"], ["type", "checkbox", 1, "cursor-pointer", 3, "ngModel", "ngModelChange"], [1, "text-gray-600", "group-hover:text-black"], ["class", "flex-shrink-0 cursor-pointer invisible group-hover:visible icon-exclude", "style", "min-width: 20px", 3, "click", 4, "ngIf"], ["class", "flex-shrink-0 cursor-pointer invisible group-hover:visible icon-include", "style", "min-width: 20px", 3, "click", 4, "ngIf"], [1, "flex-shrink-0", "cursor-pointer", "invisible", "group-hover:visible", "icon-exclude", 2, "min-width", "20px", 3, "click"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 20 20", "fill", "currentColor"], ["fill-rule", "evenodd", "d", "M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z", "clip-rule", "evenodd"], [1, "flex-shrink-0", "cursor-pointer", "invisible", "group-hover:visible", "icon-include", 2, "min-width", "20px", 3, "click"], ["fill-rule", "evenodd", "d", "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z", "clip-rule", "evenodd"]],
        template: function FacetItemComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "input", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function FacetItemComponent_Template_input_ngModelChange_2_listener($event) {
              return ctx.onSelectedChange($event);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](4, "translate");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "span", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, FacetItemComponent_div_7_Template, 3, 0, "div", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, FacetItemComponent_div_8_Template, 3, 0, "div", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngModel", ctx.selected);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](4, 5, ctx.label), " ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("(", ctx.count, ")");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.inverted);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.inverted);
          }
        },
        directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["CheckboxControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgModel"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"]],
        pipes: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslatePipe"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvZmFjZXRzL2ZhY2V0LWl0ZW0vZmFjZXQtaXRlbS5jb21wb25lbnQuY3NzIn0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FacetItemComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-facet-item',
            templateUrl: './facet-item.component.html',
            styleUrls: ['./facet-item.component.css']
          }]
        }], function () {
          return [];
        }, {
          label: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          count: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selected: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          inverted: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selectedChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          invertedChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();

      var FacetItemStubComponent = function FacetItemStubComponent() {
        _classCallCheck(this, FacetItemStubComponent);

        this.selectedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.invertedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      };

      FacetItemStubComponent.ɵfac = function FacetItemStubComponent_Factory(t) {
        return new (t || FacetItemStubComponent)();
      };

      FacetItemStubComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: FacetItemStubComponent,
        selectors: [["ui-facet-item"]],
        inputs: {
          label: "label",
          count: "count",
          selected: "selected",
          inverted: "inverted"
        },
        outputs: {
          selectedChange: "selectedChange",
          invertedChange: "invertedChange"
        },
        decls: 0,
        vars: 0,
        template: function FacetItemStubComponent_Template(rf, ctx) {},
        encapsulation: 2
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FacetItemStubComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-facet-item',
            template: ''
          }]
        }], null, {
          label: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          count: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selected: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          inverted: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selectedChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          invertedChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/facets/facet-list/facet-list.component.ts":
    /*!***************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/facets/facet-list/facet-list.component.ts ***!
      \***************************************************************************************************************/

    /*! exports provided: FacetListComponent */

    /***/
    function libsUiSrcLibFacetsFacetListFacetListComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetListComponent", function () {
        return FacetListComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _facet_block_facet_block_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../facet-block/facet-block.component */
      "../../libs/ui/src/lib/facets/facet-block/facet-block.component.ts");

      function FacetListComponent_ui_facet_block_0_Template(rf, ctx) {
        if (rf & 1) {
          var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ui-facet-block", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("itemChange", function FacetListComponent_ui_facet_block_0_Template_ui_facet_block_itemChange_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);

            var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r2.onItemChange($event);
          })("filterChange", function FacetListComponent_ui_facet_block_0_Template_ui_facet_block_filterChange_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);

            var model_r1 = ctx.$implicit;

            var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r4.onFilterChange(model_r1.key, $event);
          })("more", function FacetListComponent_ui_facet_block_0_Template_ui_facet_block_more_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);

            var model_r1 = ctx.$implicit;

            var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

            return ctx_r5.onMore(model_r1.key);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var model_r1 = ctx.$implicit;

          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("model", model_r1)("selectedPaths", ctx_r0.getBlockSelectedPaths(model_r1));
        }
      }

      var FacetListComponent = /*#__PURE__*/function () {
        function FacetListComponent() {
          _classCallCheck(this, FacetListComponent);

          this.itemChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.more = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.filterChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(FacetListComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "getBlockSelectedPaths",
          value: function getBlockSelectedPaths(model) {
            return this.selectedPaths.filter(function (path) {
              var sPath = JSON.stringify(path);
              var sModelPath = JSON.stringify(model.path);
              var startModelPath = sModelPath.substring(0, sModelPath.length - 1);
              return sPath.startsWith(startModelPath);
            });
          }
        }, {
          key: "trackByIndexKey",
          value: function trackByIndexKey(index, model) {
            return model.key;
          }
        }, {
          key: "onItemChange",
          value: function onItemChange(facetEvent) {
            this.itemChange.emit(facetEvent);
          }
        }, {
          key: "onMore",
          value: function onMore(key) {
            this.more.emit(key);
          }
        }, {
          key: "onFilterChange",
          value: function onFilterChange(field, include) {
            this.filterChange.emit({
              field: field,
              include: include
            });
          }
        }]);

        return FacetListComponent;
      }();

      FacetListComponent.ɵfac = function FacetListComponent_Factory(t) {
        return new (t || FacetListComponent)();
      };

      FacetListComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: FacetListComponent,
        selectors: [["ui-facet-list"]],
        inputs: {
          models: "models",
          selectedPaths: "selectedPaths"
        },
        outputs: {
          itemChange: "itemChange",
          more: "more",
          filterChange: "filterChange"
        },
        decls: 1,
        vars: 2,
        consts: [[3, "model", "selectedPaths", "itemChange", "filterChange", "more", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "model", "selectedPaths", "itemChange", "filterChange", "more"]],
        template: function FacetListComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, FacetListComponent_ui_facet_block_0_Template, 1, 2, "ui-facet-block", 0);
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.models)("ngForTrackBy", ctx.trackByIndexKey);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["NgForOf"], _facet_block_facet_block_component__WEBPACK_IMPORTED_MODULE_2__["FacetBlockComponent"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvZmFjZXRzL2ZhY2V0LWxpc3QvZmFjZXQtbGlzdC5jb21wb25lbnQuY3NzIn0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FacetListComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-facet-list',
            templateUrl: './facet-list.component.html',
            styleUrls: ['./facet-list.component.css']
          }]
        }], function () {
          return [];
        }, {
          models: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          selectedPaths: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          itemChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          more: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          filterChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/facets/facets.model.ts":
    /*!********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/facets/facets.model.ts ***!
      \********************************************************************************************/

    /*! no static exports found */

    /***/
    function libsUiSrcLibFacetsFacetsModelTs(module, exports) {
      /***/
    },

    /***/
    "../../libs/ui/src/lib/facets/facets.module.ts":
    /*!*********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/facets/facets.module.ts ***!
      \*********************************************************************************************/

    /*! exports provided: FacetsModule */

    /***/
    function libsUiSrcLibFacetsFacetsModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FacetsModule", function () {
        return FacetsModule;
      });
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/forms */
      "../../node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var _facet_block_facet_block_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./facet-block/facet-block.component */
      "../../libs/ui/src/lib/facets/facet-block/facet-block.component.ts");
      /* harmony import */


      var _facet_item_facet_item_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./facet-item/facet-item.component */
      "../../libs/ui/src/lib/facets/facet-item/facet-item.component.ts");
      /* harmony import */


      var _facet_list_facet_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./facet-list/facet-list.component */
      "../../libs/ui/src/lib/facets/facet-list/facet-list.component.ts");

      var FacetsModule = function FacetsModule() {
        _classCallCheck(this, FacetsModule);
      };

      FacetsModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: FacetsModule
      });
      FacetsModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        factory: function FacetsModule_Factory(t) {
          return new (t || FacetsModule)();
        },
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"].forChild()]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](FacetsModule, {
          declarations: [_facet_item_facet_item_component__WEBPACK_IMPORTED_MODULE_5__["FacetItemComponent"], _facet_block_facet_block_component__WEBPACK_IMPORTED_MODULE_4__["FacetBlockComponent"], _facet_list_facet_list_component__WEBPACK_IMPORTED_MODULE_6__["FacetListComponent"]],
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"]],
          exports: [_facet_list_facet_list_component__WEBPACK_IMPORTED_MODULE_6__["FacetListComponent"]]
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](FacetsModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
          args: [{
            declarations: [_facet_item_facet_item_component__WEBPACK_IMPORTED_MODULE_5__["FacetItemComponent"], _facet_block_facet_block_component__WEBPACK_IMPORTED_MODULE_4__["FacetBlockComponent"], _facet_list_facet_list_component__WEBPACK_IMPORTED_MODULE_6__["FacetListComponent"]],
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"].forChild()],
            exports: [_facet_list_facet_list_component__WEBPACK_IMPORTED_MODULE_6__["FacetListComponent"]]
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/facets/fixtures/aggregations-model-response.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/facets/fixtures/aggregations-model-response.ts ***!
      \********************************************************************************************************************/

    /*! exports provided: BLOCK_MODEL_FIXTURE, EMPTY_BLOCK_MODEL_FIXTURE, FACET_ITEM_FIXTURE */

    /***/
    function libsUiSrcLibFacetsFixturesAggregationsModelResponseTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "BLOCK_MODEL_FIXTURE", function () {
        return BLOCK_MODEL_FIXTURE;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EMPTY_BLOCK_MODEL_FIXTURE", function () {
        return EMPTY_BLOCK_MODEL_FIXTURE;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FACET_ITEM_FIXTURE", function () {
        return FACET_ITEM_FIXTURE;
      });
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");

      var BLOCK_MODEL_FIXTURE = {
        key: 'tag',
        items: [{
          value: 'Hungary',
          count: 20,
          path: ['tag', 'Hungary']
        }, {
          value: 'Austria',
          count: 17,
          path: ['tag', 'Austria']
        }, {
          value: 'Belgium',
          count: 17,
          path: ['tag', 'Belgium']
        }, {
          value: 'Bulgaria',
          count: 17,
          path: ['tag', 'Bulgaria']
        }, {
          value: 'Croatia',
          count: 17,
          path: ['tag', 'Croatia']
        }, {
          value: 'Cyprus',
          count: 17,
          path: ['tag', 'Cyprus']
        }, {
          value: 'Czechia',
          count: 17,
          path: ['tag', 'Czechia']
        }, {
          value: 'Denmark',
          count: 17,
          path: ['tag', 'Denmark']
        }, {
          value: 'Estonia',
          count: 17,
          path: ['tag', 'Estonia']
        }, {
          value: 'Finland',
          count: 17,
          path: ['tag', 'Finland']
        }, {
          value: 'France',
          count: 17,
          path: ['tag', 'France']
        }, {
          value: 'Germany',
          count: 17,
          path: ['tag', 'Germany']
        }, {
          value: 'Italy',
          count: 17,
          path: ['tag', 'Italy']
        }, {
          value: 'Latvia',
          count: 17,
          path: ['tag', 'Latvia']
        }, {
          value: 'Luxembourg',
          count: 17,
          path: ['tag', 'Luxembourg']
        }, {
          value: 'Malta',
          count: 17,
          path: ['tag', 'Malta']
        }, {
          value: 'Netherlands',
          count: 17,
          path: ['tag', 'Netherlands']
        }, {
          value: 'Poland',
          count: 17,
          path: ['tag', 'Poland']
        }, {
          value: 'Portugal',
          count: 17,
          path: ['tag', 'Portugal']
        }, {
          value: 'Romania',
          count: 17,
          path: ['tag', 'Romania']
        }, {
          value: 'Slovakia',
          count: 17,
          path: ['tag', 'Slovakia']
        }],
        path: ['tag'],
        type: _lib_common__WEBPACK_IMPORTED_MODULE_0__["AggregationsTypesEnum"].TERMS,
        size: 21,
        more: true,
        includeFilter: true,
        excludeFilter: false
      };
      var EMPTY_BLOCK_MODEL_FIXTURE = {
        key: 'emptytag',
        items: [],
        path: ['emptytag'],
        type: _lib_common__WEBPACK_IMPORTED_MODULE_0__["AggregationsTypesEnum"].TERMS,
        size: 21,
        more: true,
        includeFilter: false,
        excludeFilter: false
      };
      var FACET_ITEM_FIXTURE = {
        path: ['tag.default', 'land use'],
        value: 'land use',
        count: 500,
        selected: true,
        inverted: false
      };
      /***/
    },

    /***/
    "../../libs/ui/src/lib/facets/fixtures/index.ts":
    /*!**********************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/facets/fixtures/index.ts ***!
      \**********************************************************************************************/

    /*! exports provided: BLOCK_MODEL_FIXTURE, EMPTY_BLOCK_MODEL_FIXTURE, FACET_ITEM_FIXTURE */

    /***/
    function libsUiSrcLibFacetsFixturesIndexTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _aggregations_model_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./aggregations-model-response */
      "../../libs/ui/src/lib/facets/fixtures/aggregations-model-response.ts");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "BLOCK_MODEL_FIXTURE", function () {
        return _aggregations_model_response__WEBPACK_IMPORTED_MODULE_0__["BLOCK_MODEL_FIXTURE"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "EMPTY_BLOCK_MODEL_FIXTURE", function () {
        return _aggregations_model_response__WEBPACK_IMPORTED_MODULE_0__["EMPTY_BLOCK_MODEL_FIXTURE"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "FACET_ITEM_FIXTURE", function () {
        return _aggregations_model_response__WEBPACK_IMPORTED_MODULE_0__["FACET_ITEM_FIXTURE"];
      });
      /***/

    },

    /***/
    "../../libs/ui/src/lib/progress-bar/progress-bar.component.ts":
    /*!************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/progress-bar/progress-bar.component.ts ***!
      \************************************************************************************************************/

    /*! exports provided: ProgressBarComponent */

    /***/
    function libsUiSrcLibProgressBarProgressBarComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ProgressBarComponent", function () {
        return ProgressBarComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

      var ProgressBarComponent = /*#__PURE__*/function () {
        function ProgressBarComponent() {
          _classCallCheck(this, ProgressBarComponent);

          this.value = 0;
          this.type = 'default';
        }

        _createClass(ProgressBarComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "progress",
          get: function get() {
            return this.value > 0 ? this.value < 100 ? this.value : 100 : 0;
          }
        }, {
          key: "color",
          get: function get() {
            switch (this.type) {
              case 'default':
                return {
                  outerBar: 'bg-gray-200',
                  innerBar: 'bg-gray-100'
                };

              case 'primary':
                return {
                  outerBar: 'bg-primary',
                  innerBar: 'bg-primary-lighter'
                };

              case 'secondary':
                return {
                  outerBar: 'bg-secondary',
                  innerBar: 'bg-secondary-lighter'
                };
            }
          }
        }]);

        return ProgressBarComponent;
      }();

      ProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) {
        return new (t || ProgressBarComponent)();
      };

      ProgressBarComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ProgressBarComponent,
        selectors: [["ui-progress-bar"]],
        inputs: {
          value: "value",
          type: "type"
        },
        decls: 4,
        vars: 9,
        consts: [[1, "flex", "items-center", "pl-2", "py-1", "text-gray-900", "font-bold", "text-4"]],
        template: function ProgressBarComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("flex h-full ", ctx.color.outerBar, " rounded-t-lg rounded-b-lg");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("flex ", ctx.color.innerBar, " my-1 mx-1 transition-width duration-500 ease-in-out rounded-t-md rounded-b-md shadow-xl");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx.progress, "%");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.progress, "% ");
          }
        },
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci5jb21wb25lbnQuY3NzIn0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ProgressBarComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-progress-bar',
            templateUrl: './progress-bar.component.html',
            styleUrls: ['./progress-bar.component.css']
          }]
        }], function () {
          return [];
        }, {
          value: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          type: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/record-metric/record-metric.component.ts":
    /*!**************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/record-metric/record-metric.component.ts ***!
      \**************************************************************************************************************/

    /*! exports provided: RecordMetricComponent */

    /***/
    function libsUiSrcLibRecordMetricRecordMetricComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordMetricComponent", function () {
        return RecordMetricComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      var RecordMetricComponent = /*#__PURE__*/function () {
        function RecordMetricComponent() {
          _classCallCheck(this, RecordMetricComponent);

          this.icon = '◔';
        }

        _createClass(RecordMetricComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.color = _lib_common__WEBPACK_IMPORTED_MODULE_1__["ColorService"].generateLabelColor(this.label, 0.6, 0.5);
          }
        }]);

        return RecordMetricComponent;
      }();

      RecordMetricComponent.ɵfac = function RecordMetricComponent_Factory(t) {
        return new (t || RecordMetricComponent)();
      };

      RecordMetricComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: RecordMetricComponent,
        selectors: [["ui-record-metric"]],
        inputs: {
          count: "count",
          label: "label",
          icon: "icon"
        },
        decls: 12,
        vars: 7,
        consts: [[1, "p-2", "rounded", "flex", "flex-row", "items-center", "relative", "cursor-pointer", "hover:bg-background", "hover:border-gray-200", "border", "border-gray-100", "hover:shadow-sm"], [1, "h-8", "w-8", "rounded-full", "bg-opacity-50", "bg-gray-900", "flex-shrink-0", "text-white", "text-lg", "text-center"], [1, "px-3", "truncate", "text-sm", "text-main", "label", "flex-grow", "flex-shrink", 3, "title"], [1, "text-gray-600", "text-sm", "border-gray-300", "border-l", "px-3", "flex-shrink-0", 2, "min-width", "7rem"], [1, "count", "text-gray-600"], ["translate", ""]],
        template: function RecordMetricComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "span", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "strong", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "\xA0");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "span", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "records");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, ". ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleMapInterpolate1"]("background-color: ", ctx.color, ";");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.icon, " ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", ctx.label);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.label);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.count);
          }
        },
        directives: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateDirective"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvcmVjb3JkLW1ldHJpYy9yZWNvcmQtbWV0cmljLmNvbXBvbmVudC5jc3MifQ== */"],
        changeDetection: 0
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordMetricComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-record-metric',
            templateUrl: './record-metric.component.html',
            styleUrls: ['./record-metric.component.css'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], function () {
          return [];
        }, {
          count: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          label: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          icon: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/record-preview-card/record-preview-card.component.ts":
    /*!**************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/record-preview-card/record-preview-card.component.ts ***!
      \**************************************************************************************************************************/

    /*! exports provided: RecordPreviewCardComponent */

    /***/
    function libsUiSrcLibRecordPreviewCardRecordPreviewCardComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordPreviewCardComponent", function () {
        return RecordPreviewCardComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../record-preview/record-preview.component */
      "../../libs/ui/src/lib/record-preview/record-preview.component.ts");
      /* harmony import */


      var _record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../record-thumbnail/record-thumbnail.component */
      "../../libs/ui/src/lib/record-thumbnail/record-thumbnail.component.ts");

      var RecordPreviewCardComponent = /*#__PURE__*/function (_record_preview_recor) {
        _inherits(RecordPreviewCardComponent, _record_preview_recor);

        var _super21 = _createSuper(RecordPreviewCardComponent);

        function RecordPreviewCardComponent() {
          _classCallCheck(this, RecordPreviewCardComponent);

          return _super21.apply(this, arguments);
        }

        return RecordPreviewCardComponent;
      }(_record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_1__["RecordPreviewComponent"]);

      RecordPreviewCardComponent.ɵfac = function RecordPreviewCardComponent_Factory(t) {
        return ɵRecordPreviewCardComponent_BaseFactory(t || RecordPreviewCardComponent);
      };

      RecordPreviewCardComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: RecordPreviewCardComponent,
        selectors: [["ui-record-preview-card"]],
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],
        decls: 9,
        vars: 6,
        consts: [[1, "h-full", "bg-white", "overflow-hidden", "transition", "duration-200", "transform", "hover:scale-105"], [3, "href", "title", "target"], [1, "flex", "flex-col", "min-h-full"], [1, "md:h-32", "border-b", "border-gray-200", "bg-gray-100", 3, "thumbnailUrl"], [1, "flex-grow", "p-4"], [1, "title-font", "text-lg", "font-medium", "mb-3", "clamp-2"], [1, "leading-relaxed", "text-sm", "text-gray-700", "clamp-3"]],
        template: function RecordPreviewCardComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "ui-record-thumbnail", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "h1", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "p", 6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("href", ctx.record.metadataUrl, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"])("title", ctx.record["abstract"])("target", ctx.linkTarget);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("thumbnailUrl", ctx.record.thumbnailUrl);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.record.title, " ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.record["abstract"], " ");
          }
        },
        directives: [_record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_2__["RecordThumbnailComponent"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvcmVjb3JkLXByZXZpZXctY2FyZC9yZWNvcmQtcHJldmlldy1jYXJkLmNvbXBvbmVudC5zY3NzIn0= */"],
        changeDetection: 0
      });

      var ɵRecordPreviewCardComponent_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](RecordPreviewCardComponent);
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordPreviewCardComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-record-preview-card',
            templateUrl: './record-preview-card.component.html',
            styleUrls: ['./record-preview-card.component.scss'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/record-preview-list/record-preview-list.component.ts":
    /*!**************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/record-preview-list/record-preview-list.component.ts ***!
      \**************************************************************************************************************************/

    /*! exports provided: RecordPreviewListComponent */

    /***/
    function libsUiSrcLibRecordPreviewListRecordPreviewListComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordPreviewListComponent", function () {
        return RecordPreviewListComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../record-preview/record-preview.component */
      "../../libs/ui/src/lib/record-preview/record-preview.component.ts");
      /* harmony import */


      var _record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../record-thumbnail/record-thumbnail.component */
      "../../libs/ui/src/lib/record-thumbnail/record-thumbnail.component.ts");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      function RecordPreviewListComponent_div_12_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r0.record.updateFrequency);
        }
      }

      function RecordPreviewListComponent_div_13_span_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "record.action.view");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      function RecordPreviewListComponent_div_13_span_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, ",\xA0");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      function RecordPreviewListComponent_div_13_span_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "record.action.download");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      function RecordPreviewListComponent_div_13_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, RecordPreviewListComponent_div_13_span_1_Template, 2, 0, "span", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, RecordPreviewListComponent_div_13_span_2_Template, 2, 0, "span", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, RecordPreviewListComponent_div_13_span_3_Template, 2, 0, "span", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isViewable);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isViewable && ctx_r1.isDownloadable);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isDownloadable);
        }
      }

      var RecordPreviewListComponent = /*#__PURE__*/function (_record_preview_recor2) {
        _inherits(RecordPreviewListComponent, _record_preview_recor2);

        var _super22 = _createSuper(RecordPreviewListComponent);

        function RecordPreviewListComponent() {
          _classCallCheck(this, RecordPreviewListComponent);

          return _super22.apply(this, arguments);
        }

        return RecordPreviewListComponent;
      }(_record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_1__["RecordPreviewComponent"]);

      RecordPreviewListComponent.ɵfac = function RecordPreviewListComponent_Factory(t) {
        return ɵRecordPreviewListComponent_BaseFactory(t || RecordPreviewListComponent);
      };

      RecordPreviewListComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: RecordPreviewListComponent,
        selectors: [["ui-record-preview-list"]],
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],
        decls: 14,
        vars: 8,
        consts: [[1, "h-40", "bg-white", "transition", "duration-200", "hover:bg-gray-100", "border-gray-300", "rounded-md"], [3, "href", "target", "title"], [1, "h-full", "flex", "flex-row", "items-center", "border", "border-gray-200", "shadow-sm"], [1, "w-40", "h-full", "flex-shrink-0", "border-r", "border-gray-200", "bg-gray-100", 3, "thumbnailUrl"], [1, "flex-grow", "h-full", "px-6", "py-4", "flex", "flex-col", "overflow-hidden"], [1, "title-font", "text-lg", "font-medium", "mb-2"], [1, "truncate"], [1, "leading-relaxed", "clamp-3", "text-sm", "text-gray-700"], [1, "flex-grow"], [1, "flex", "flex-row", "items-center"], ["class", "text-gray-500 text-xs truncate capitalize border-r mr-4 pr-4", 4, "ngIf"], ["class", "text-gray-500 text-xs border-gray-300 truncate viewable-downloadable", 4, "ngIf"], [1, "text-gray-500", "text-xs", "truncate", "capitalize", "border-r", "mr-4", "pr-4"], ["translate", ""], [1, "text-gray-500", "text-xs", "border-gray-300", "truncate", "viewable-downloadable"], ["translate", "", 4, "ngIf"], [4, "ngIf"]],
        template: function RecordPreviewListComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "ui-record-thumbnail", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "h1", 6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "p", 7);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](10, "div", 8);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 9);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, RecordPreviewListComponent_div_12_Template, 3, 1, "div", 10);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](13, RecordPreviewListComponent_div_13_Template, 4, 3, "div", 11);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("href", ctx.record.metadataUrl, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"])("target", ctx.linkTarget)("title", ctx.record["abstract"]);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("thumbnailUrl", ctx.record.thumbnailUrl);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.record.title);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.record["abstract"], " ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.record.updateFrequency);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isViewable || ctx.isDownloadable);
          }
        },
        directives: [_record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_2__["RecordThumbnailComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateDirective"]],
        styles: [".viewable-downloadable[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:first-child {\n  text-transform: capitalize;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvdWkvc3JjL2xpYi9yZWNvcmQtcHJldmlldy1saXN0L3JlY29yZC1wcmV2aWV3LWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQkFBQTtBQUNGIiwiZmlsZSI6ImxpYnMvdWkvc3JjL2xpYi9yZWNvcmQtcHJldmlldy1saXN0L3JlY29yZC1wcmV2aWV3LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmlld2FibGUtZG93bmxvYWRhYmxlIDpmaXJzdC1jaGlsZCB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuIl19 */"],
        changeDetection: 0
      });

      var ɵRecordPreviewListComponent_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](RecordPreviewListComponent);
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordPreviewListComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-record-preview-list',
            templateUrl: './record-preview-list.component.html',
            styleUrls: ['./record-preview-list.component.scss'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/record-preview-text/record-preview-text.component.ts":
    /*!**************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/record-preview-text/record-preview-text.component.ts ***!
      \**************************************************************************************************************************/

    /*! exports provided: RecordPreviewTextComponent */

    /***/
    function libsUiSrcLibRecordPreviewTextRecordPreviewTextComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordPreviewTextComponent", function () {
        return RecordPreviewTextComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../record-preview/record-preview.component */
      "../../libs/ui/src/lib/record-preview/record-preview.component.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      var RecordPreviewTextComponent = /*#__PURE__*/function (_record_preview_recor3) {
        _inherits(RecordPreviewTextComponent, _record_preview_recor3);

        var _super23 = _createSuper(RecordPreviewTextComponent);

        function RecordPreviewTextComponent() {
          _classCallCheck(this, RecordPreviewTextComponent);

          return _super23.apply(this, arguments);
        }

        return RecordPreviewTextComponent;
      }(_record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_1__["RecordPreviewComponent"]);

      RecordPreviewTextComponent.ɵfac = function RecordPreviewTextComponent_Factory(t) {
        return ɵRecordPreviewTextComponent_BaseFactory(t || RecordPreviewTextComponent);
      };

      RecordPreviewTextComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: RecordPreviewTextComponent,
        selectors: [["ui-record-preview-text"]],
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],
        decls: 13,
        vars: 3,
        consts: [[1, "mb-4"], [1, "flex", "sm:flex-row", "flex-col", "p-5", "items-center", "sm:justify-start", "justify-center", "text-center", "sm:text-left", "bg-white", "hover:bg-gray-100", "border-gray-200", "border", "rounded-sm", "transition", "duration-200"], [1, "flex-grow"], [1, "title-font", "text-lg", "font-medium", "text-gray-900", "mb-3"], [1, "leading-relaxed", "mb-3", "text-gray-700", "text-sm", "whitespace-pre-line", "clamp-3"], [1, "hidden", "sm:flex-1", "sm:flex", "sm:items-center", "sm:justify-between"], [1, "inline-flex", "items-center", "md:mb-2", "lg:mb-0", "hover:underline", 3, "href"], ["translate", ""], ["xmlns", "http://www.w3.org/2000/svg", "fill", "none", "viewBox", "0 0 24 24", "stroke", "currentColor", 1, "h-5", "w-5"], ["stroke-linecap", "round", "stroke-linejoin", "round", "stroke-width", "2", "d", "M9 5l7 7-7 7"]],
        template: function RecordPreviewTextComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h1", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "p", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "a", 6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "span", 7);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "record.more.details");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "svg", 8);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](12, "path", 9);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.record.title, " ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.record["abstract"], " ");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("href", ctx.record.metadataUrl, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"]);
          }
        },
        directives: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateDirective"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvcmVjb3JkLXByZXZpZXctdGV4dC9yZWNvcmQtcHJldmlldy10ZXh0LmNvbXBvbmVudC5zY3NzIn0= */"],
        changeDetection: 0
      });

      var ɵRecordPreviewTextComponent_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](RecordPreviewTextComponent);
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordPreviewTextComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-record-preview-text',
            templateUrl: './record-preview-text.component.html',
            styleUrls: ['./record-preview-text.component.scss'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/record-preview-title/record-preview-title.component.ts":
    /*!****************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/record-preview-title/record-preview-title.component.ts ***!
      \****************************************************************************************************************************/

    /*! exports provided: RecordPreviewTitleComponent */

    /***/
    function libsUiSrcLibRecordPreviewTitleRecordPreviewTitleComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordPreviewTitleComponent", function () {
        return RecordPreviewTitleComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../record-preview/record-preview.component */
      "../../libs/ui/src/lib/record-preview/record-preview.component.ts");
      /* harmony import */


      var _record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../record-thumbnail/record-thumbnail.component */
      "../../libs/ui/src/lib/record-thumbnail/record-thumbnail.component.ts");

      var RecordPreviewTitleComponent = /*#__PURE__*/function (_record_preview_recor4) {
        _inherits(RecordPreviewTitleComponent, _record_preview_recor4);

        var _super24 = _createSuper(RecordPreviewTitleComponent);

        function RecordPreviewTitleComponent() {
          _classCallCheck(this, RecordPreviewTitleComponent);

          return _super24.apply(this, arguments);
        }

        return RecordPreviewTitleComponent;
      }(_record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_1__["RecordPreviewComponent"]);

      RecordPreviewTitleComponent.ɵfac = function RecordPreviewTitleComponent_Factory(t) {
        return ɵRecordPreviewTitleComponent_BaseFactory(t || RecordPreviewTitleComponent);
      };

      RecordPreviewTitleComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: RecordPreviewTitleComponent,
        selectors: [["ui-record-preview-title"]],
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],
        decls: 7,
        vars: 5,
        consts: [[1, "h-10", "w-full", "border-b", "border-gray-200", "transition", "duration-200", "hover:bg-gray-100", "rounded-sm"], [3, "href", "target", "title"], [1, "h-full", "flex", "flex-row", "items-center"], [1, "w-10", "h-full", "flex-shrink-0", "border-r", "border-gray-200", "bg-gray-100", 3, "thumbnailUrl"], [1, "flex-grow", "px-3", "py-1", "flex", "flex-col", "overflow-hidden"], [1, "title-font", "text-sm", "font-bold", "truncate", "md:overflow-clip"]],
        template: function RecordPreviewTitleComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "ui-record-thumbnail", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "h1", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("href", ctx.record.metadataUrl, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"])("target", ctx.linkTarget)("title", ctx.record["abstract"]);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("thumbnailUrl", ctx.record.thumbnailUrl);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.record.title, " ");
          }
        },
        directives: [_record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_2__["RecordThumbnailComponent"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvcmVjb3JkLXByZXZpZXctdGl0bGUvcmVjb3JkLXByZXZpZXctdGl0bGUuY29tcG9uZW50LnNjc3MifQ== */"],
        changeDetection: 0
      });

      var ɵRecordPreviewTitleComponent_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](RecordPreviewTitleComponent);
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordPreviewTitleComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-record-preview-title',
            templateUrl: './record-preview-title.component.html',
            styleUrls: ['./record-preview-title.component.scss'],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/record-preview/record-preview.component.ts":
    /*!****************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/record-preview/record-preview.component.ts ***!
      \****************************************************************************************************************/

    /*! exports provided: RecordPreviewComponent */

    /***/
    function libsUiSrcLibRecordPreviewRecordPreviewComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordPreviewComponent", function () {
        return RecordPreviewComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");

      var RecordPreviewComponent = /*#__PURE__*/function () {
        function RecordPreviewComponent(elementRef) {
          _classCallCheck(this, RecordPreviewComponent);

          this.elementRef = elementRef;
          this.linkTarget = '_blank';
          this.mdSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        }

        _createClass(RecordPreviewComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this122 = this;

            this.subscription.add(Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["fromEvent"])(this.elementRef.nativeElement, 'click').subscribe(function (event) {
              event.preventDefault();
              event.stopPropagation();

              _this122.mdSelect.emit(_this122.record);
            }));
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.subscription.unsubscribe();
          }
        }, {
          key: "isViewable",
          get: function get() {
            return this.record.viewable;
          }
        }, {
          key: "isDownloadable",
          get: function get() {
            return this.record.downloadable;
          }
        }]);

        return RecordPreviewComponent;
      }();

      RecordPreviewComponent.ɵfac = function RecordPreviewComponent_Factory(t) {
        return new (t || RecordPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]));
      };

      RecordPreviewComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: RecordPreviewComponent,
        selectors: [["ui-record-preview"]],
        inputs: {
          record: "record",
          linkTarget: "linkTarget"
        },
        outputs: {
          mdSelect: "mdSelect"
        },
        decls: 0,
        vars: 0,
        template: function RecordPreviewComponent_Template(rf, ctx) {},
        encapsulation: 2
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordPreviewComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-record-preview',
            template: ''
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
          }];
        }, {
          record: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          linkTarget: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          mdSelect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/record-thumbnail/record-thumbnail.component.ts":
    /*!********************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/record-thumbnail/record-thumbnail.component.ts ***!
      \********************************************************************************************************************/

    /*! exports provided: RecordThumbnailComponent */

    /***/
    function libsUiSrcLibRecordThumbnailRecordThumbnailComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "RecordThumbnailComponent", function () {
        return RecordThumbnailComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      function RecordThumbnailComponent_img_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceHTML"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "img", 4);
        }

        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", ctx_r0.thumbnailUrl, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"]);
        }
      }

      var RecordThumbnailComponent = /*#__PURE__*/function () {
        function RecordThumbnailComponent() {
          _classCallCheck(this, RecordThumbnailComponent);
        }

        _createClass(RecordThumbnailComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return RecordThumbnailComponent;
      }();

      RecordThumbnailComponent.ɵfac = function RecordThumbnailComponent_Factory(t) {
        return new (t || RecordThumbnailComponent)();
      };

      RecordThumbnailComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: RecordThumbnailComponent,
        selectors: [["ui-record-thumbnail"]],
        inputs: {
          thumbnailUrl: "thumbnailUrl"
        },
        decls: 4,
        vars: 1,
        consts: [[1, "h-full", "h-full", "relative", "flex-shrink-0", "overflow-hidden"], ["xmlns", "http://www.w3.org/2000/svg", "fill", "none", "viewBox", "0 0 24 24", "stroke", "currentColor", 1, "text-gray-200", "absolute", "h-12", "w-12", "transform", "-translate-x-1/2", "-translate-y-1/2", 2, "top", "50%", "left", "50%"], ["stroke-linecap", "round", "stroke-linejoin", "round", "stroke-width", "2", "d", "M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"], ["class", "relative h-full w-full object-cover object-left-top", "alt", "thumbnail", 3, "src", 4, "ngIf"], ["alt", "thumbnail", 1, "relative", "h-full", "w-full", "object-cover", "object-left-top", 3, "src"]],
        template: function RecordThumbnailComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "svg", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, RecordThumbnailComponent_img_3_Template, 1, 1, "img", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.thumbnailUrl);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"]],
        encapsulation: 2
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RecordThumbnailComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-record-thumbnail',
            templateUrl: './record-thumbnail.component.html'
          }]
        }], function () {
          return [];
        }, {
          thumbnailUrl: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/results-hits-number/results-hits-number.component.ts":
    /*!**************************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/results-hits-number/results-hits-number.component.ts ***!
      \**************************************************************************************************************************/

    /*! exports provided: ResultsHitsNumberComponent */

    /***/
    function libsUiSrcLibResultsHitsNumberResultsHitsNumberComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResultsHitsNumberComponent", function () {
        return ResultsHitsNumberComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      function ResultsHitsNumberComponent_div_0_ng_container_1_p_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "p", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "translate");
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHtml", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 1, "results.records.hits.found=0.help"), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
        }
      }

      var _c0 = function _c0(a0) {
        return {
          hits: a0
        };
      };

      function ResultsHitsNumberComponent_div_0_ng_container_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "results.records.hits.found");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ResultsHitsNumberComponent_div_0_ng_container_1_p_3_Template, 2, 3, "p", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        }

        if (rf & 2) {
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("translateParams", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](2, _c0, ctx_r1.hits.value));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.hits.value === 0);
        }
      }

      function ResultsHitsNumberComponent_div_0_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ResultsHitsNumberComponent_div_0_ng_container_1_Template, 4, 4, "ng-container", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.hits);
        }
      }

      var ResultsHitsNumberComponent = /*#__PURE__*/function () {
        function ResultsHitsNumberComponent() {
          _classCallCheck(this, ResultsHitsNumberComponent);
        }

        _createClass(ResultsHitsNumberComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return ResultsHitsNumberComponent;
      }();

      ResultsHitsNumberComponent.ɵfac = function ResultsHitsNumberComponent_Factory(t) {
        return new (t || ResultsHitsNumberComponent)();
      };

      ResultsHitsNumberComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ResultsHitsNumberComponent,
        selectors: [["ui-results-hits-number"]],
        inputs: {
          hits: "hits",
          loading: "loading"
        },
        decls: 1,
        vars: 1,
        consts: [["class", "w-full pl-4 text-gray-700", 4, "ngIf"], [1, "w-full", "pl-4", "text-gray-700"], [4, "ngIf"], ["translate", "", 3, "translateParams"], ["class", "mt-4", 3, "innerHtml", 4, "ngIf"], [1, "mt-4", 3, "innerHtml"]],
        template: function ResultsHitsNumberComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, ResultsHitsNumberComponent_div_0_Template, 2, 1, "div", 0);
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.loading);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateDirective"]],
        pipes: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslatePipe"]],
        encapsulation: 2
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ResultsHitsNumberComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-results-hits-number',
            templateUrl: './results-hits-number.component.html'
          }]
        }], function () {
          return [];
        }, {
          hits: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          loading: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/results-list/results-list.component.ts":
    /*!************************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/results-list/results-list.component.ts ***!
      \************************************************************************************************************/

    /*! exports provided: ResultsListComponent */

    /***/
    function libsUiSrcLibResultsListResultsListComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResultsListComponent", function () {
        return ResultsListComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
      /* harmony import */


      var _record_preview_list_record_preview_list_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../record-preview-list/record-preview-list.component */
      "../../libs/ui/src/lib/record-preview-list/record-preview-list.component.ts");
      /* harmony import */


      var _record_preview_title_record_preview_title_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../record-preview-title/record-preview-title.component */
      "../../libs/ui/src/lib/record-preview-title/record-preview-title.component.ts");
      /* harmony import */


      var _record_preview_text_record_preview_text_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../record-preview-text/record-preview-text.component */
      "../../libs/ui/src/lib/record-preview-text/record-preview-text.component.ts");
      /* harmony import */


      var _record_preview_card_record_preview_card_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../record-preview-card/record-preview-card.component */
      "../../libs/ui/src/lib/record-preview-card/record-preview-card.component.ts");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");

      function ResultsListComponent_ng_container_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](0, 6);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", _r5);
        }
      }

      function ResultsListComponent_div_2_div_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "ui-record-preview-list", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var record_r9 = ctx.$implicit;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("record", record_r9);
        }
      }

      function ResultsListComponent_div_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ResultsListComponent_div_2_div_1_Template, 2, 1, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r1.records);
        }
      }

      function ResultsListComponent_div_3_div_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "ui-record-preview-title", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var record_r11 = ctx.$implicit;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("record", record_r11);
        }
      }

      function ResultsListComponent_div_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ResultsListComponent_div_3_div_1_Template, 2, 1, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r2.records);
        }
      }

      function ResultsListComponent_div_4_ui_record_preview_text_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "ui-record-preview-text", 12);
        }

        if (rf & 2) {
          var record_r13 = ctx.$implicit;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("record", record_r13);
        }
      }

      function ResultsListComponent_div_4_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ResultsListComponent_div_4_ui_record_preview_text_1_Template, 1, 1, "ui-record-preview-text", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r3.records);
        }
      }

      function ResultsListComponent_ng_container_5_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](0, 6);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", _r5);
        }
      }

      function ResultsListComponent_ng_template_6_ui_record_preview_card_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ui-record-preview-card", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mdSelect", function ResultsListComponent_ng_template_6_ui_record_preview_card_1_Template_ui_record_preview_card_mdSelect_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r17);

            var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

            return ctx_r16.mdSelect.emit($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var record_r15 = ctx.$implicit;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("record", record_r15);
        }
      }

      function ResultsListComponent_ng_template_6_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ResultsListComponent_ng_template_6_ui_record_preview_card_1_Template, 1, 1, "ui-record-preview-card", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r6.records);
        }
      }

      function ResultsListComponent_div_8_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "search.loading");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "...");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      }

      var ResultsListComponent = /*#__PURE__*/function () {
        function ResultsListComponent() {
          _classCallCheck(this, ResultsListComponent);

          this.layout = _lib_common__WEBPACK_IMPORTED_MODULE_1__["ResultsListLayout"].CARD;
          this.mdSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.layoutEnum = _lib_common__WEBPACK_IMPORTED_MODULE_1__["ResultsListLayout"];
        }

        _createClass(ResultsListComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return ResultsListComponent;
      }();

      ResultsListComponent.ɵfac = function ResultsListComponent_Factory(t) {
        return new (t || ResultsListComponent)();
      };

      ResultsListComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ResultsListComponent,
        selectors: [["ui-results-list"]],
        inputs: {
          records: "records",
          loading: "loading",
          layout: "layout"
        },
        outputs: {
          mdSelect: "mdSelect"
        },
        decls: 9,
        vars: 6,
        consts: [[3, "ngSwitch"], [3, "ngTemplateOutlet", 4, "ngSwitchCase"], ["class", "gap-4 p-4", 4, "ngSwitchCase"], [3, "ngTemplateOutlet", 4, "ngSwitchDefault"], ["block", ""], ["class", "p-4", 4, "ngIf"], [3, "ngTemplateOutlet"], [1, "gap-4", "p-4"], ["class", "pb-4", 4, "ngFor", "ngForOf"], [1, "pb-4"], [3, "record"], ["style", "height: 24rem", 3, "record", 4, "ngFor", "ngForOf"], [2, "height", "24rem", 3, "record"], [1, "grid", "grid-cols-3", "gap-4", "p-4"], ["linkTarget", "_blank", 3, "record", "mdSelect", 4, "ngFor", "ngForOf"], ["linkTarget", "_blank", 3, "record", "mdSelect"], [1, "p-4"], ["translate", ""]],
        template: function ResultsListComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0, 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ResultsListComponent_ng_container_1_Template, 1, 1, "ng-container", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ResultsListComponent_div_2_Template, 2, 1, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ResultsListComponent_div_3_Template, 2, 1, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, ResultsListComponent_div_4_Template, 2, 1, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, ResultsListComponent_ng_container_5_Template, 1, 1, "ng-container", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, ResultsListComponent_ng_template_6_Template, 2, 1, "ng-template", null, 4, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, ResultsListComponent_div_8_Template, 4, 0, "div", 5);
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitch", ctx.layout);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", ctx.layoutEnum.CARD);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", ctx.layoutEnum.LIST);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", ctx.layoutEnum.TITLE);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", ctx.layoutEnum.TEXT);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.loading);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgSwitch"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgSwitchCase"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgSwitchDefault"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], _record_preview_list_record_preview_list_component__WEBPACK_IMPORTED_MODULE_3__["RecordPreviewListComponent"], _record_preview_title_record_preview_title_component__WEBPACK_IMPORTED_MODULE_4__["RecordPreviewTitleComponent"], _record_preview_text_record_preview_text_component__WEBPACK_IMPORTED_MODULE_5__["RecordPreviewTextComponent"], _record_preview_card_record_preview_card_component__WEBPACK_IMPORTED_MODULE_6__["RecordPreviewCardComponent"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateDirective"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvcmVzdWx0cy1saXN0L3Jlc3VsdHMtbGlzdC5jb21wb25lbnQuY3NzIn0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ResultsListComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-results-list',
            templateUrl: './results-list.component.html',
            styleUrls: ['./results-list.component.css']
          }]
        }], function () {
          return [];
        }, {
          records: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          loading: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          mdSelect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/step-bar/step-bar.component.ts":
    /*!****************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/step-bar/step-bar.component.ts ***!
      \****************************************************************************************************/

    /*! exports provided: StepBarComponent */

    /***/
    function libsUiSrcLibStepBarStepBarComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "StepBarComponent", function () {
        return StepBarComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

      function StepBarComponent_div_2_span_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "span", 4);
        }
      }

      function StepBarComponent_div_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, StepBarComponent_div_2_span_1_Template, 1, 0, "span", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var i_r2 = ctx.index;

          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("shadow-md rounded-full h-6 w-6 ", ctx_r0.getCircleColor(i_r2 + 1), "");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.getChecked(i_r2));
        }
      }

      var StepBarComponent = /*#__PURE__*/function () {
        function StepBarComponent(cdr) {
          _classCallCheck(this, StepBarComponent);

          this.cdr = cdr;
          this.currentStep = 1;
          this.type = 'default';
        }

        _createClass(StepBarComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "getCircleColor",
          value: function getCircleColor(index) {
            return index === this.currentStep ? 'bg-black' : index < this.currentStep ? 'bg-white' : this.color.innerBar;
          }
        }, {
          key: "getChecked",
          value: function getChecked(index) {
            return index + 1 < this.currentStep;
          }
        }, {
          key: "stepCounter",
          get: function get() {
            return new Array(this.steps);
          }
        }, {
          key: "color",
          get: function get() {
            switch (this.type) {
              case 'default':
                return {
                  outerBar: 'bg-gray-200',
                  innerBar: 'bg-gray-100'
                };

              case 'primary':
                return {
                  outerBar: 'bg-primary',
                  innerBar: 'bg-primary-lighter'
                };

              case 'secondary':
                return {
                  outerBar: 'bg-secondary',
                  innerBar: 'bg-secondary-lighter'
                };
            }
          }
        }]);

        return StepBarComponent;
      }();

      StepBarComponent.ɵfac = function StepBarComponent_Factory(t) {
        return new (t || StepBarComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]));
      };

      StepBarComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: StepBarComponent,
        selectors: [["ui-step-bar"]],
        inputs: {
          steps: "steps",
          currentStep: "currentStep",
          type: "type"
        },
        decls: 4,
        vars: 4,
        consts: [[1, "relative", "flex", "flex-col", "justify-center"], [1, "flex", "justify-between", "ml-16", "mr-16", "z-10", "circle-steps"], [3, "class", 4, "ngFor", "ngForOf"], ["class", "icon-check pl-1", 4, "ngIf"], [1, "icon-check", "pl-1"]],
        template: function StepBarComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, StepBarComponent_div_2_Template, 2, 4, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "div");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.stepCounter);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("absolute rounded-lg right-0 w-full ", ctx.color.outerBar, " h-2 z-0");
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"]],
        styles: [".icon-check[_ngcontent-%COMP%] {\n    color: var(--color-primary);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvdWkvc3JjL2xpYi9zdGVwLWJhci9zdGVwLWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0FBQy9CIiwiZmlsZSI6ImxpYnMvdWkvc3JjL2xpYi9zdGVwLWJhci9zdGVwLWJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmljb24tY2hlY2sge1xuICAgIGNvbG9yOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbn0iXX0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](StepBarComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-step-bar',
            templateUrl: './step-bar.component.html',
            styleUrls: ['./step-bar.component.css']
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
          }];
        }, {
          steps: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          currentStep: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          type: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/text-area/text-area.component.ts":
    /*!******************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/text-area/text-area.component.ts ***!
      \******************************************************************************************************/

    /*! exports provided: TextAreaComponent */

    /***/
    function libsUiSrcLibTextAreaTextAreaComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "TextAreaComponent", function () {
        return TextAreaComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");

      var TextAreaComponent = /*#__PURE__*/function () {
        function TextAreaComponent() {
          _classCallCheck(this, TextAreaComponent);

          this.value = '';
          this.rawChange = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        }

        _createClass(TextAreaComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.valueChange = this.rawChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])());
          }
        }]);

        return TextAreaComponent;
      }();

      TextAreaComponent.ɵfac = function TextAreaComponent_Factory(t) {
        return new (t || TextAreaComponent)();
      };

      TextAreaComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: TextAreaComponent,
        selectors: [["ui-text-area"]],
        inputs: {
          value: "value",
          placeholder: "placeholder"
        },
        outputs: {
          valueChange: "valueChange"
        },
        decls: 2,
        vars: 2,
        consts: [[1, "h-full", "flex"], ["name", "textArea", 1, "w-full", "pt-2", "pl-2", "resize-none", "border", "border-gray-800", "rounded", "italic", "leading-tight", "focus:outline-none", "focus:bg-background", "focus:border-primary", 3, "placeholder", "value", "change", "input"]],
        template: function TextAreaComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "textarea", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function TextAreaComponent_Template_textarea_change_1_listener($event) {
              return ctx.rawChange.next($event.target.value);
            })("input", function TextAreaComponent_Template_textarea_input_1_listener($event) {
              return ctx.rawChange.next($event.target.value);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("placeholder", ctx.placeholder)("value", ctx.value);
          }
        },
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvdGV4dC1hcmVhL3RleHQtYXJlYS5jb21wb25lbnQuY3NzIn0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TextAreaComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-text-area',
            templateUrl: './text-area.component.html',
            styleUrls: ['./text-area.component.css']
          }]
        }], function () {
          return [];
        }, {
          value: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          placeholder: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          valueChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/text-input/text-input.component.ts":
    /*!********************************************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/text-input/text-input.component.ts ***!
      \********************************************************************************************************/

    /*! exports provided: TextInputComponent */

    /***/
    function libsUiSrcLibTextInputTextInputComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "TextInputComponent", function () {
        return TextInputComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      "../../node_modules/rxjs/_esm2015/index.js");

      var TextInputComponent = /*#__PURE__*/function () {
        function TextInputComponent() {
          _classCallCheck(this, TextInputComponent);

          this.value = '';
          this.rawChange = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        }

        _createClass(TextInputComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.valueChange = this.rawChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["distinctUntilChanged"])());
          }
        }]);

        return TextInputComponent;
      }();

      TextInputComponent.ɵfac = function TextInputComponent_Factory(t) {
        return new (t || TextInputComponent)();
      };

      TextInputComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: TextInputComponent,
        selectors: [["ui-text-input"]],
        inputs: {
          value: "value",
          hint: "hint"
        },
        outputs: {
          valueChange: "valueChange"
        },
        decls: 1,
        vars: 3,
        consts: [["type", "text", 1, "appearance-none", "border", "border-gray-300", "rounded", "w-full", "p-2", "text-gray-700", "leading-tight", "focus:outline-none", "focus:border-primary", 3, "value", "placeholder", "change", "input"]],
        template: function TextInputComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "input", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function TextInputComponent_Template_input_change_0_listener($event) {
              return ctx.rawChange.next($event.target.value);
            })("input", function TextInputComponent_Template_input_input_0_listener($event) {
              return ctx.rawChange.next($event.target.value);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx.value)("placeholder", ctx.hint);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.hint);
          }
        },
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL3VpL3NyYy9saWIvdGV4dC1pbnB1dC90ZXh0LWlucHV0LmNvbXBvbmVudC5jc3MifQ== */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TextInputComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'ui-text-input',
            templateUrl: './text-input.component.html',
            styleUrls: ['./text-input.component.css']
          }]
        }], function () {
          return [];
        }, {
          value: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          hint: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          valueChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }]
        });
      })();
      /***/

    },

    /***/
    "../../libs/ui/src/lib/ui.module.ts":
    /*!**********************************************************************************!*\
      !*** /home/runner/work/geonetwork-ui/geonetwork-ui/libs/ui/src/lib/ui.module.ts ***!
      \**********************************************************************************/

    /*! exports provided: UiModule */

    /***/
    function libsUiSrcLibUiModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "UiModule", function () {
        return UiModule;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/platform-browser */
      "../../node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var ngx_dropzone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ngx-dropzone */
      "../../node_modules/ngx-dropzone/__ivy_ngcc__/fesm2015/ngx-dropzone.js");
      /* harmony import */


      var _autocomplete_autocomplete_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./autocomplete/autocomplete.component */
      "../../libs/ui/src/lib/autocomplete/autocomplete.component.ts");
      /* harmony import */


      var _button_button_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./button/button.component */
      "../../libs/ui/src/lib/button/button.component.ts");
      /* harmony import */


      var _catalog_title_catalog_title_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./catalog-title/catalog-title.component */
      "../../libs/ui/src/lib/catalog-title/catalog-title.component.ts");
      /* harmony import */


      var _color_scale_color_scale_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./color-scale/color-scale.component */
      "../../libs/ui/src/lib/color-scale/color-scale.component.ts");
      /* harmony import */


      var _drag_and_drop_file_input_drag_and_drop_file_input_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./drag-and-drop-file-input/drag-and-drop-file-input.component */
      "../../libs/ui/src/lib/drag-and-drop-file-input/drag-and-drop-file-input.component.ts");
      /* harmony import */


      var _dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./dropdown-selector/dropdown-selector.component */
      "../../libs/ui/src/lib/dropdown-selector/dropdown-selector.component.ts");
      /* harmony import */


      var _facets_facets_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./facets/facets.module */
      "../../libs/ui/src/lib/facets/facets.module.ts");
      /* harmony import */


      var _progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./progress-bar/progress-bar.component */
      "../../libs/ui/src/lib/progress-bar/progress-bar.component.ts");
      /* harmony import */


      var _record_metric_record_metric_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./record-metric/record-metric.component */
      "../../libs/ui/src/lib/record-metric/record-metric.component.ts");
      /* harmony import */


      var _record_preview_card_record_preview_card_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./record-preview-card/record-preview-card.component */
      "../../libs/ui/src/lib/record-preview-card/record-preview-card.component.ts");
      /* harmony import */


      var _record_preview_list_record_preview_list_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./record-preview-list/record-preview-list.component */
      "../../libs/ui/src/lib/record-preview-list/record-preview-list.component.ts");
      /* harmony import */


      var _record_preview_text_record_preview_text_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./record-preview-text/record-preview-text.component */
      "../../libs/ui/src/lib/record-preview-text/record-preview-text.component.ts");
      /* harmony import */


      var _record_preview_title_record_preview_title_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! ./record-preview-title/record-preview-title.component */
      "../../libs/ui/src/lib/record-preview-title/record-preview-title.component.ts");
      /* harmony import */


      var _results_hits_number_results_hits_number_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ./results-hits-number/results-hits-number.component */
      "../../libs/ui/src/lib/results-hits-number/results-hits-number.component.ts");
      /* harmony import */


      var _results_list_results_list_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! ./results-list/results-list.component */
      "../../libs/ui/src/lib/results-list/results-list.component.ts");
      /* harmony import */


      var _text_input_text_input_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! ./text-input/text-input.component */
      "../../libs/ui/src/lib/text-input/text-input.component.ts");
      /* harmony import */


      var _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! ./record-preview/record-preview.component */
      "../../libs/ui/src/lib/record-preview/record-preview.component.ts");
      /* harmony import */


      var _record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! ./record-thumbnail/record-thumbnail.component */
      "../../libs/ui/src/lib/record-thumbnail/record-thumbnail.component.ts");
      /* harmony import */


      var _step_bar_step_bar_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! ./step-bar/step-bar.component */
      "../../libs/ui/src/lib/step-bar/step-bar.component.ts");
      /* harmony import */


      var _text_area_text_area_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! ./text-area/text-area.component */
      "../../libs/ui/src/lib/text-area/text-area.component.ts");
      /* harmony import */


      var ngx_chips__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
      /*! ngx-chips */
      "../../node_modules/ngx-chips/__ivy_ngcc__/fesm2015/ngx-chips.js");
      /* harmony import */


      var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
      /*! @angular/platform-browser/animations */
      "../../node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/animations.js");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
      /*! @angular/forms */
      "../../node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
      /* harmony import */


      var _chips_input_chips_input_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
      /*! ./chips-input/chips-input.component */
      "../../libs/ui/src/lib/chips-input/chips-input.component.ts");
      /* harmony import */


      var _datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
      /*! ./datepicker/datepicker.component */
      "../../libs/ui/src/lib/datepicker/datepicker.component.ts");
      /* harmony import */


      var mydatepicker__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
      /*! mydatepicker */
      "../../node_modules/mydatepicker/__ivy_ngcc__/fesm2015/mydatepicker.js");

      var UiModule = function UiModule() {
        _classCallCheck(this, UiModule);
      };

      UiModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: UiModule
      });
      UiModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function UiModule_Factory(t) {
          return new (t || UiModule)();
        },
        imports: [[_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateModule"].forChild(), ngx_dropzone__WEBPACK_IMPORTED_MODULE_3__["NgxDropzoneModule"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_10__["FacetsModule"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_25__["BrowserAnimationsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_26__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_26__["ReactiveFormsModule"], ngx_chips__WEBPACK_IMPORTED_MODULE_24__["TagInputModule"], mydatepicker__WEBPACK_IMPORTED_MODULE_29__["MyDatePickerModule"]], _facets_facets_module__WEBPACK_IMPORTED_MODULE_10__["FacetsModule"]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](UiModule, {
          declarations: [_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_9__["DropdownSelectorComponent"], _autocomplete_autocomplete_component__WEBPACK_IMPORTED_MODULE_4__["AutocompleteComponent"], _button_button_component__WEBPACK_IMPORTED_MODULE_5__["ButtonComponent"], _text_input_text_input_component__WEBPACK_IMPORTED_MODULE_19__["TextInputComponent"], _color_scale_color_scale_component__WEBPACK_IMPORTED_MODULE_7__["ColorScaleComponent"], _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_20__["RecordPreviewComponent"], _record_preview_list_record_preview_list_component__WEBPACK_IMPORTED_MODULE_14__["RecordPreviewListComponent"], _record_preview_card_record_preview_card_component__WEBPACK_IMPORTED_MODULE_13__["RecordPreviewCardComponent"], _record_preview_text_record_preview_text_component__WEBPACK_IMPORTED_MODULE_15__["RecordPreviewTextComponent"], _record_preview_title_record_preview_title_component__WEBPACK_IMPORTED_MODULE_16__["RecordPreviewTitleComponent"], _record_metric_record_metric_component__WEBPACK_IMPORTED_MODULE_12__["RecordMetricComponent"], _record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_21__["RecordThumbnailComponent"], _results_list_results_list_component__WEBPACK_IMPORTED_MODULE_18__["ResultsListComponent"], _catalog_title_catalog_title_component__WEBPACK_IMPORTED_MODULE_6__["CatalogTitleComponent"], _drag_and_drop_file_input_drag_and_drop_file_input_component__WEBPACK_IMPORTED_MODULE_8__["DragAndDropFileInputComponent"], _progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_11__["ProgressBarComponent"], _step_bar_step_bar_component__WEBPACK_IMPORTED_MODULE_22__["StepBarComponent"], _text_area_text_area_component__WEBPACK_IMPORTED_MODULE_23__["TextAreaComponent"], _chips_input_chips_input_component__WEBPACK_IMPORTED_MODULE_27__["ChipsInputComponent"], _datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_28__["DatepickerComponent"], _results_hits_number_results_hits_number_component__WEBPACK_IMPORTED_MODULE_17__["ResultsHitsNumberComponent"]],
          imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateModule"], ngx_dropzone__WEBPACK_IMPORTED_MODULE_3__["NgxDropzoneModule"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_10__["FacetsModule"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_25__["BrowserAnimationsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_26__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_26__["ReactiveFormsModule"], ngx_chips__WEBPACK_IMPORTED_MODULE_24__["TagInputModule"], mydatepicker__WEBPACK_IMPORTED_MODULE_29__["MyDatePickerModule"]],
          exports: [_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_9__["DropdownSelectorComponent"], _autocomplete_autocomplete_component__WEBPACK_IMPORTED_MODULE_4__["AutocompleteComponent"], _button_button_component__WEBPACK_IMPORTED_MODULE_5__["ButtonComponent"], _text_input_text_input_component__WEBPACK_IMPORTED_MODULE_19__["TextInputComponent"], _record_preview_list_record_preview_list_component__WEBPACK_IMPORTED_MODULE_14__["RecordPreviewListComponent"], _record_preview_card_record_preview_card_component__WEBPACK_IMPORTED_MODULE_13__["RecordPreviewCardComponent"], _record_preview_text_record_preview_text_component__WEBPACK_IMPORTED_MODULE_15__["RecordPreviewTextComponent"], _record_preview_title_record_preview_title_component__WEBPACK_IMPORTED_MODULE_16__["RecordPreviewTitleComponent"], _record_metric_record_metric_component__WEBPACK_IMPORTED_MODULE_12__["RecordMetricComponent"], _record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_21__["RecordThumbnailComponent"], _results_list_results_list_component__WEBPACK_IMPORTED_MODULE_18__["ResultsListComponent"], _catalog_title_catalog_title_component__WEBPACK_IMPORTED_MODULE_6__["CatalogTitleComponent"], _drag_and_drop_file_input_drag_and_drop_file_input_component__WEBPACK_IMPORTED_MODULE_8__["DragAndDropFileInputComponent"], _progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_11__["ProgressBarComponent"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_10__["FacetsModule"], _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_20__["RecordPreviewComponent"], _step_bar_step_bar_component__WEBPACK_IMPORTED_MODULE_22__["StepBarComponent"], _text_area_text_area_component__WEBPACK_IMPORTED_MODULE_23__["TextAreaComponent"], _chips_input_chips_input_component__WEBPACK_IMPORTED_MODULE_27__["ChipsInputComponent"], _datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_28__["DatepickerComponent"], _results_hits_number_results_hits_number_component__WEBPACK_IMPORTED_MODULE_17__["ResultsHitsNumberComponent"]]
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](UiModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            declarations: [_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_9__["DropdownSelectorComponent"], _autocomplete_autocomplete_component__WEBPACK_IMPORTED_MODULE_4__["AutocompleteComponent"], _button_button_component__WEBPACK_IMPORTED_MODULE_5__["ButtonComponent"], _text_input_text_input_component__WEBPACK_IMPORTED_MODULE_19__["TextInputComponent"], _color_scale_color_scale_component__WEBPACK_IMPORTED_MODULE_7__["ColorScaleComponent"], _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_20__["RecordPreviewComponent"], _record_preview_list_record_preview_list_component__WEBPACK_IMPORTED_MODULE_14__["RecordPreviewListComponent"], _record_preview_card_record_preview_card_component__WEBPACK_IMPORTED_MODULE_13__["RecordPreviewCardComponent"], _record_preview_text_record_preview_text_component__WEBPACK_IMPORTED_MODULE_15__["RecordPreviewTextComponent"], _record_preview_title_record_preview_title_component__WEBPACK_IMPORTED_MODULE_16__["RecordPreviewTitleComponent"], _record_metric_record_metric_component__WEBPACK_IMPORTED_MODULE_12__["RecordMetricComponent"], _record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_21__["RecordThumbnailComponent"], _results_list_results_list_component__WEBPACK_IMPORTED_MODULE_18__["ResultsListComponent"], _catalog_title_catalog_title_component__WEBPACK_IMPORTED_MODULE_6__["CatalogTitleComponent"], _drag_and_drop_file_input_drag_and_drop_file_input_component__WEBPACK_IMPORTED_MODULE_8__["DragAndDropFileInputComponent"], _progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_11__["ProgressBarComponent"], _step_bar_step_bar_component__WEBPACK_IMPORTED_MODULE_22__["StepBarComponent"], _text_area_text_area_component__WEBPACK_IMPORTED_MODULE_23__["TextAreaComponent"], _chips_input_chips_input_component__WEBPACK_IMPORTED_MODULE_27__["ChipsInputComponent"], _datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_28__["DatepickerComponent"], _results_hits_number_results_hits_number_component__WEBPACK_IMPORTED_MODULE_17__["ResultsHitsNumberComponent"]],
            imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateModule"].forChild(), ngx_dropzone__WEBPACK_IMPORTED_MODULE_3__["NgxDropzoneModule"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_10__["FacetsModule"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_25__["BrowserAnimationsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_26__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_26__["ReactiveFormsModule"], ngx_chips__WEBPACK_IMPORTED_MODULE_24__["TagInputModule"], mydatepicker__WEBPACK_IMPORTED_MODULE_29__["MyDatePickerModule"]],
            exports: [_dropdown_selector_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_9__["DropdownSelectorComponent"], _autocomplete_autocomplete_component__WEBPACK_IMPORTED_MODULE_4__["AutocompleteComponent"], _button_button_component__WEBPACK_IMPORTED_MODULE_5__["ButtonComponent"], _text_input_text_input_component__WEBPACK_IMPORTED_MODULE_19__["TextInputComponent"], _record_preview_list_record_preview_list_component__WEBPACK_IMPORTED_MODULE_14__["RecordPreviewListComponent"], _record_preview_card_record_preview_card_component__WEBPACK_IMPORTED_MODULE_13__["RecordPreviewCardComponent"], _record_preview_text_record_preview_text_component__WEBPACK_IMPORTED_MODULE_15__["RecordPreviewTextComponent"], _record_preview_title_record_preview_title_component__WEBPACK_IMPORTED_MODULE_16__["RecordPreviewTitleComponent"], _record_metric_record_metric_component__WEBPACK_IMPORTED_MODULE_12__["RecordMetricComponent"], _record_thumbnail_record_thumbnail_component__WEBPACK_IMPORTED_MODULE_21__["RecordThumbnailComponent"], _results_list_results_list_component__WEBPACK_IMPORTED_MODULE_18__["ResultsListComponent"], _catalog_title_catalog_title_component__WEBPACK_IMPORTED_MODULE_6__["CatalogTitleComponent"], _drag_and_drop_file_input_drag_and_drop_file_input_component__WEBPACK_IMPORTED_MODULE_8__["DragAndDropFileInputComponent"], _progress_bar_progress_bar_component__WEBPACK_IMPORTED_MODULE_11__["ProgressBarComponent"], _facets_facets_module__WEBPACK_IMPORTED_MODULE_10__["FacetsModule"], _record_preview_record_preview_component__WEBPACK_IMPORTED_MODULE_20__["RecordPreviewComponent"], _step_bar_step_bar_component__WEBPACK_IMPORTED_MODULE_22__["StepBarComponent"], _text_area_text_area_component__WEBPACK_IMPORTED_MODULE_23__["TextAreaComponent"], _chips_input_chips_input_component__WEBPACK_IMPORTED_MODULE_27__["ChipsInputComponent"], _datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_28__["DatepickerComponent"], _results_hits_number_results_hits_number_component__WEBPACK_IMPORTED_MODULE_17__["ResultsHitsNumberComponent"]]
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "./$$_lazy_route_resource lazy recursive":
    /*!******************************************************!*\
      !*** ./$$_lazy_route_resource lazy namespace object ***!
      \******************************************************/

    /*! no static exports found */

    /***/
    function $$_lazy_route_resourceLazyRecursive(module, exports) {
      function webpackEmptyAsyncContext(req) {
        // Here Promise.resolve().then() is used instead of new Promise() to prevent
        // uncaught exception popping up in devtools
        return Promise.resolve().then(function () {
          var e = new Error("Cannot find module '" + req + "'");
          e.code = 'MODULE_NOT_FOUND';
          throw e;
        });
      }

      webpackEmptyAsyncContext.keys = function () {
        return [];
      };

      webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
      module.exports = webpackEmptyAsyncContext;
      webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";
      /***/
    },

    /***/
    "./src/app/app-routing.module.ts":
    /*!***************************************!*\
      !*** ./src/app/app-routing.module.ts ***!
      \***************************************/

    /*! exports provided: AppRoutingModule */

    /***/
    function srcAppAppRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function () {
        return AppRoutingModule;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/router */
      "../../node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");

      var routes = [];

      var AppRoutingModule = function AppRoutingModule() {
        _classCallCheck(this, AppRoutingModule);
      };

      AppRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: AppRoutingModule
      });
      AppRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function AppRoutingModule_Factory(t) {
          return new (t || AppRoutingModule)();
        },
        imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AppRoutingModule, {
          imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]],
          exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AppRoutingModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
          }]
        }], null, null);
      })();
      /***/

    },

    /***/
    "./src/app/app.component.ts":
    /*!**********************************!*\
      !*** ./src/app/app.component.ts ***!
      \**********************************/

    /*! exports provided: AppComponent */

    /***/
    function srcAppAppComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AppComponent", function () {
        return AppComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var _libs_catalog_src_lib_site_title_site_title_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../../../../libs/catalog/src/lib/site-title/site-title.component */
      "../../libs/catalog/src/lib/site-title/site-title.component.ts");
      /* harmony import */


      var _libs_search_src_lib_records_metrics_records_metrics_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../../../libs/search/src/lib/records-metrics/records-metrics.component */
      "../../libs/search/src/lib/records-metrics/records-metrics.component.ts");
      /* harmony import */


      var _libs_search_src_lib_state_container_search_state_container_directive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../../../../libs/search/src/lib/state/container/search-state.container.directive */
      "../../libs/search/src/lib/state/container/search-state.container.directive.ts");
      /* harmony import */


      var _main_search_main_search_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./main-search/main-search.component */
      "./src/app/main-search/main-search.component.ts");

      var AppComponent = /*#__PURE__*/function () {
        function AppComponent() {
          _classCallCheck(this, AppComponent);

          this.title = 'search';

          _lib_common__WEBPACK_IMPORTED_MODULE_1__["ColorService"].applyCssVariables('#e73f51', '#c2e9dc', '#212029', '#fdfbff');
        }

        _createClass(AppComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return AppComponent;
      }();

      AppComponent.ɵfac = function AppComponent_Factory(t) {
        return new (t || AppComponent)();
      };

      AppComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: AppComponent,
        selectors: [["app-root"]],
        decls: 5,
        vars: 0,
        consts: [[1, "p-4"], ["field", "tag", "count", "20"], ["searchSearchStateContainer", "mainSearch"]],
        template: function AppComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "catalog-site-title");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "search-records-metrics", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "app-main-search");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }
        },
        directives: [_libs_catalog_src_lib_site_title_site_title_component__WEBPACK_IMPORTED_MODULE_2__["SiteTitleComponent"], _libs_search_src_lib_records_metrics_records_metrics_component__WEBPACK_IMPORTED_MODULE_3__["RecordsMetricsComponent"], _libs_search_src_lib_state_container_search_state_container_directive__WEBPACK_IMPORTED_MODULE_4__["SearchStateContainerDirective"], _main_search_main_search_component__WEBPACK_IMPORTED_MODULE_5__["MainSearchComponent"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL3NlYXJjaC9zcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AppComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'app-root',
            templateUrl: './app.component.html',
            styleUrls: ['./app.component.css']
          }]
        }], function () {
          return [];
        }, null);
      })();
      /***/

    },

    /***/
    "./src/app/app.module.ts":
    /*!*******************************!*\
      !*** ./src/app/app.module.ts ***!
      \*******************************/

    /*! exports provided: metaReducers, AppModule */

    /***/
    function srcAppAppModuleTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "metaReducers", function () {
        return metaReducers;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AppModule", function () {
        return AppModule;
      });
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common/http */
      "../../node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/platform-browser */
      "../../node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");
      /* harmony import */


      var _lib_catalog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @lib/catalog */
      "../../libs/catalog/src/index.ts");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var _lib_gn_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @lib/gn-api */
      "../../libs/gn-api/src/lib/gn4/index.ts");
      /* harmony import */


      var _lib_search__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @lib/search */
      "../../libs/search/src/index.ts");
      /* harmony import */


      var _ngrx_effects__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @ngrx/effects */
      "../../node_modules/@ngrx/effects/__ivy_ngcc__/fesm2015/effects.js");
      /* harmony import */


      var _ngrx_store__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! @ngrx/store */
      "../../node_modules/@ngrx/store/__ivy_ngcc__/fesm2015/store.js");
      /* harmony import */


      var _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @ngrx/store-devtools */
      "../../node_modules/@ngrx/store-devtools/__ivy_ngcc__/fesm2015/store-devtools.js");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! @ngx-translate/core */
      "../../node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");
      /* harmony import */


      var ngrx_store_freeze__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ngrx-store-freeze */
      "../../node_modules/ngrx-store-freeze/es6/index.js");
      /* harmony import */


      var _environments_environment__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ../environments/environment */
      "./src/environments/environment.ts");
      /* harmony import */


      var _app_routing_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./app-routing.module */
      "./src/app/app-routing.module.ts");
      /* harmony import */


      var _app_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./app.component */
      "./src/app/app.component.ts");
      /* harmony import */


      var _main_search_main_search_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./main-search/main-search.component */
      "./src/app/main-search/main-search.component.ts");
      /* harmony import */


      var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! @angular/platform-browser/animations */
      "../../node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/animations.js");

      var metaReducers = !_environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].production ? [ngrx_store_freeze__WEBPACK_IMPORTED_MODULE_11__["storeFreeze"]] : [];

      var AppModule = function AppModule(translate) {
        _classCallCheck(this, AppModule);

        translate.setDefaultLang('en');
        translate.use('en');
      };

      AppModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: AppModule,
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_14__["AppComponent"]]
      });
      AppModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        factory: function AppModule_Factory(t) {
          return new (t || AppModule)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslateService"]));
        },
        providers: [{
          provide: _lib_gn_api__WEBPACK_IMPORTED_MODULE_5__["BASE_PATH"],
          useValue: '/geonetwork/srv/api'
        }],
        imports: [[_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["BrowserModule"], _app_routing_module__WEBPACK_IMPORTED_MODULE_13__["AppRoutingModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClientModule"], _lib_common__WEBPACK_IMPORTED_MODULE_4__["I18nModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslateModule"].forRoot(_lib_common__WEBPACK_IMPORTED_MODULE_4__["TRANSLATE_GEONETWORK_CONFIG"]), _lib_search__WEBPACK_IMPORTED_MODULE_6__["LibSearchModule"], _lib_catalog__WEBPACK_IMPORTED_MODULE_3__["LibCatalogModule"], _ngrx_store__WEBPACK_IMPORTED_MODULE_8__["StoreModule"].forRoot({}, {
          metaReducers: metaReducers
        }), !_environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].production ? _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_9__["StoreDevtoolsModule"].instrument() : [], _ngrx_effects__WEBPACK_IMPORTED_MODULE_7__["EffectsModule"].forRoot(), _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["BrowserAnimationsModule"]]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](AppModule, {
          declarations: [_app_component__WEBPACK_IMPORTED_MODULE_14__["AppComponent"], _main_search_main_search_component__WEBPACK_IMPORTED_MODULE_15__["MainSearchComponent"]],
          imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["BrowserModule"], _app_routing_module__WEBPACK_IMPORTED_MODULE_13__["AppRoutingModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClientModule"], _lib_common__WEBPACK_IMPORTED_MODULE_4__["I18nModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslateModule"], _lib_search__WEBPACK_IMPORTED_MODULE_6__["LibSearchModule"], _lib_catalog__WEBPACK_IMPORTED_MODULE_3__["LibCatalogModule"], _ngrx_store__WEBPACK_IMPORTED_MODULE_8__["StoreRootModule"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_9__["StoreDevtoolsModule"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_7__["EffectsRootModule"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["BrowserAnimationsModule"]]
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](AppModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
          args: [{
            declarations: [_app_component__WEBPACK_IMPORTED_MODULE_14__["AppComponent"], _main_search_main_search_component__WEBPACK_IMPORTED_MODULE_15__["MainSearchComponent"]],
            imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["BrowserModule"], _app_routing_module__WEBPACK_IMPORTED_MODULE_13__["AppRoutingModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClientModule"], _lib_common__WEBPACK_IMPORTED_MODULE_4__["I18nModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslateModule"].forRoot(_lib_common__WEBPACK_IMPORTED_MODULE_4__["TRANSLATE_GEONETWORK_CONFIG"]), _lib_search__WEBPACK_IMPORTED_MODULE_6__["LibSearchModule"], _lib_catalog__WEBPACK_IMPORTED_MODULE_3__["LibCatalogModule"], _ngrx_store__WEBPACK_IMPORTED_MODULE_8__["StoreModule"].forRoot({}, {
              metaReducers: metaReducers
            }), !_environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].production ? _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_9__["StoreDevtoolsModule"].instrument() : [], _ngrx_effects__WEBPACK_IMPORTED_MODULE_7__["EffectsModule"].forRoot(), _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["BrowserAnimationsModule"]],
            providers: [{
              provide: _lib_gn_api__WEBPACK_IMPORTED_MODULE_5__["BASE_PATH"],
              useValue: '/geonetwork/srv/api'
            }],
            bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_14__["AppComponent"]]
          }]
        }], function () {
          return [{
            type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslateService"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "./src/app/main-search/main-search.component.ts":
    /*!******************************************************!*\
      !*** ./src/app/main-search/main-search.component.ts ***!
      \******************************************************/

    /*! exports provided: MainSearchComponent */

    /***/
    function srcAppMainSearchMainSearchComponentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "MainSearchComponent", function () {
        return MainSearchComponent;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @lib/common */
      "../../libs/common/src/index.ts");
      /* harmony import */


      var _lib_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @lib/search */
      "../../libs/search/src/index.ts");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "../../node_modules/rxjs/_esm2015/operators/index.js");
      /* harmony import */


      var _libs_search_src_lib_fuzzy_search_fuzzy_search_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../../../../../libs/search/src/lib/fuzzy-search/fuzzy-search.component */
      "../../libs/search/src/lib/fuzzy-search/fuzzy-search.component.ts");
      /* harmony import */


      var _libs_search_src_lib_sort_by_sort_by_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../../../../../libs/search/src/lib/sort-by/sort-by.component */
      "../../libs/search/src/lib/sort-by/sort-by.component.ts");
      /* harmony import */


      var _libs_search_src_lib_results_layout_results_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../../../../../libs/search/src/lib/results-layout/results-layout.component */
      "../../libs/search/src/lib/results-layout/results-layout.component.ts");
      /* harmony import */


      var _libs_search_src_lib_facets_facets_container_facets_container_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ../../../../../libs/search/src/lib/facets/facets-container/facets-container.component */
      "../../libs/search/src/lib/facets/facets-container/facets-container.component.ts");
      /* harmony import */


      var _libs_search_src_lib_results_hits_number_results_hits_container_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../../../../../libs/search/src/lib/results-hits-number/results-hits.container.component */
      "../../libs/search/src/lib/results-hits-number/results-hits.container.component.ts");
      /* harmony import */


      var _libs_search_src_lib_results_list_results_list_container_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ../../../../../libs/search/src/lib/results-list/results-list.container.component */
      "../../libs/search/src/lib/results-list/results-list.container.component.ts");

      var MainSearchComponent = /*#__PURE__*/function () {
        function MainSearchComponent(bootstrap, searchFacade) {
          _classCallCheck(this, MainSearchComponent);

          this.bootstrap = bootstrap;
          this.searchFacade = searchFacade;
        }

        _createClass(MainSearchComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this123 = this;

            this.bootstrap.uiConfReady('srv').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (config) {
              return config.mods.search.facetConfig;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (aggregationsConfig) {
              _this123.searchFacade.setConfigAggregations(aggregationsConfig);

              _this123.searchFacade.requestMoreResults();
            })).subscribe();
          }
        }]);

        return MainSearchComponent;
      }();

      MainSearchComponent.ɵfac = function MainSearchComponent_Factory(t) {
        return new (t || MainSearchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_lib_common__WEBPACK_IMPORTED_MODULE_1__["BootstrapService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_lib_search__WEBPACK_IMPORTED_MODULE_2__["SearchFacade"]));
      };

      MainSearchComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: MainSearchComponent,
        selectors: [["app-main-search"]],
        decls: 12,
        vars: 0,
        consts: [[1, "mb-3", "mx-4", "rounded", "flex", "flex-row"], [1, "w-2/4", "mr-3"], [1, "w-1/4", "mr-3"], [1, "flex-grow"], [1, "flex", "flex-row"], [1, "w-1/4"], [1, "w-3/4"]],
        template: function MainSearchComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "search-fuzzy-search");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "search-sort-by");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "search-results-layout");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 4);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "search-facets-container", 5);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 6);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](10, "search-results-hits");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "search-results-list-container");

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }
        },
        directives: [_libs_search_src_lib_fuzzy_search_fuzzy_search_component__WEBPACK_IMPORTED_MODULE_4__["FuzzySearchComponent"], _libs_search_src_lib_sort_by_sort_by_component__WEBPACK_IMPORTED_MODULE_5__["SortByComponent"], _libs_search_src_lib_results_layout_results_layout_component__WEBPACK_IMPORTED_MODULE_6__["ResultsLayoutComponent"], _libs_search_src_lib_facets_facets_container_facets_container_component__WEBPACK_IMPORTED_MODULE_7__["FacetsContainerComponent"], _libs_search_src_lib_results_hits_number_results_hits_container_component__WEBPACK_IMPORTED_MODULE_8__["ResultsHitsContainerComponent"], _libs_search_src_lib_results_list_results_list_container_component__WEBPACK_IMPORTED_MODULE_9__["ResultsListContainerComponent"]],
        styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL3NlYXJjaC9zcmMvYXBwL21haW4tc2VhcmNoL21haW4tc2VhcmNoLmNvbXBvbmVudC5zY3NzIn0= */"]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MainSearchComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'app-main-search',
            templateUrl: './main-search.component.html',
            styleUrls: ['./main-search.component.scss']
          }]
        }], function () {
          return [{
            type: _lib_common__WEBPACK_IMPORTED_MODULE_1__["BootstrapService"]
          }, {
            type: _lib_search__WEBPACK_IMPORTED_MODULE_2__["SearchFacade"]
          }];
        }, null);
      })();
      /***/

    },

    /***/
    "./src/environments/environment.ts":
    /*!*****************************************!*\
      !*** ./src/environments/environment.ts ***!
      \*****************************************/

    /*! exports provided: environment */

    /***/
    function srcEnvironmentsEnvironmentTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "environment", function () {
        return environment;
      }); // This file can be replaced during build by using the `fileReplacements` array.
      // `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
      // The list of file replacements can be found in `angular.json`.


      var environment = {
        production: false
      };
      /*
       * For easier debugging in development mode, you can import the following file
       * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
       *
       * This import should be commented out in production mode because it will have a negative impact
       * on performance if an error is thrown.
       */
      // import 'zone.js/dist/zone-error';  // Included with Angular CLI.

      /***/
    },

    /***/
    "./src/main.ts":
    /*!*********************!*\
      !*** ./src/main.ts ***!
      \*********************/

    /*! no exports provided */

    /***/
    function srcMainTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "../../node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./environments/environment */
      "./src/environments/environment.ts");
      /* harmony import */


      var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./app/app.module */
      "./src/app/app.module.ts");
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      "../../node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");

      if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].production) {
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
      }

      _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["platformBrowser"]().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])["catch"](function (err) {
        return console.error(err);
      });
      /***/

    },

    /***/
    0:
    /*!***************************!*\
      !*** multi ./src/main.ts ***!
      \***************************/

    /*! no static exports found */

    /***/
    function _(module, exports, __webpack_require__) {
      module.exports = __webpack_require__(
      /*! /home/runner/work/geonetwork-ui/geonetwork-ui/apps/search/src/main.ts */
      "./src/main.ts");
      /***/
    }
  }, [[0, "runtime", "vendor"]]]);
})();
//# sourceMappingURL=main-es5.js.map